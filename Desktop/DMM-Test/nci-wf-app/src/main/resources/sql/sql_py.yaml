#支払依頼情報を削除
PY0000_01: |+
 delete /* PY0000_01 */ from PAY_INF where COMPANY_CD = ? and PAY_NO = ?

#WF支払依頼情報⇒支払依頼情報を生成
PY0000_02: |+
 insert into /* PY0000_02 */ PAY_INF (
   COMPANY_CD, PAY_NO, PAY_STS, PAYHYS_NO_R_RCNT, PAYHYS_NO_B_RCNT
   , CNTRCT_NO, PAY_NM, PURORD_TP, PUR_TP1, PUR_TP2
   , ASST_TP, SBMTR_CD, SBMT_DPT_CD, SBMT_DPT_NM, SBMT_DPT_DT
   , BUMON_CD, ANLYS_CD, SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN
   , CRP_PRS_TP, DMS_ABR_TP, PAYEE_BNKACC_CD, PAYEE_BNK_CD, PAYEE_BNKBRC_CD
   , PAYEE_BNKACC_TP, PAYEE_BNKACC_NO, PAYEE_BNKACC_NM, PAYEE_BNKACC_NM_KN, PAY_SITE_CD
   , RCVINSP_USE_YM_S, RCVINSP_USE_YM_E, RCVINSP_YM, CST_ADD_YM, RCVINSP_YM_S, RCVINSP_YM_E
   , PAY_RQST_DT, PAY_PLN_DT, PAY_RSLT_DT
   , PAY_AMT_EXCTAX, PAY_AMT_INCTAX
   , PAY_AMT_FC_EXCTAX, PAY_AMT_FC_INCTAX
   , MSG, PAY_MTH, PAY_COND_CD, PAY_COND_NM, PAY_COND_CHGRSN
   , PRD_PURORD_TP, PRD_PURORD_NO, RTN_PAY_NO, ORGNZ_CD, LOT_NO
   , INVSHT_TP, BNKACC_CD, MNY_TP, MNY_CD, ADD_RTO
   , PAY_APPL_CD, ADVPAY_TP, TAX_UNT, TAX_FG, TAX_CD
   , HLDTAX_TP, HLDTAX_RTO, HLDTAX_SBJ_AMT, HLDTAX_AMT, IMP_TAX_TP
   , CHRG_BNKACC_CD, PAY_APPL_TP, PAY_CMM_OBL_TP
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK
   , SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF
   , SHT_ADR1, SHT_ADR2, SHT_ADR3
   , SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO
   , ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , TTLAMT_EXCTAX1, TTLAMT_TAX1, TTLAMT_INCTAX1
   , TTLAMT_EXCTAX2, TTLAMT_TAX2, TTLAMT_INCTAX2
   , TTLAMT_EXCTAX3, TTLAMT_TAX3, TTLAMT_INCTAX3
   , TTLAMT_FC_EXCTAX1, TTLAMT_FC_TAX1, TTLAMT_FC_INCTAX1
   , TTLAMT_FC_EXCTAX3, TTLAMT_FC_TAX3, TTLAMT_FC_INCTAX3
   , DLT_FG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED
 )
 select
   COMPANY_CD, PAY_NO, PAY_STS, ?, ?
   , CNTRCT_NO, PAY_NM, PURORD_TP, PUR_TP1, PUR_TP2
   , ASST_TP, SBMTR_CD, SBMT_DPT_CD, SBMT_DPT_NM, SBMT_DPT_DT
   , BUMON_CD, ANLYS_CD, SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN
   , CRP_PRS_TP, DMS_ABR_TP, PAYEE_BNKACC_CD, PAYEE_BNK_CD, PAYEE_BNKBRC_CD
   , PAYEE_BNKACC_TP, PAYEE_BNKACC_NO, PAYEE_BNKACC_NM, PAYEE_BNKACC_NM_KN, PAY_SITE_CD
   , RCVINSP_USE_YM_S, RCVINSP_USE_YM_E, RCVINSP_YM, CST_ADD_YM, RCVINSP_YM_S, RCVINSP_YM_E
   , PAY_RQST_DT, PAY_PLN_DT, trunc(SYSDATE) as PAY_RSLT_DT
   , decode(MNY_CD, 'JPY', PAY_AMT_EXCTAX, null), decode(MNY_CD, 'JPY', PAY_AMT_INCTAX, null)
   , decode(MNY_CD, 'JPY', null, PAY_AMT_EXCTAX), decode(MNY_CD, 'JPY', null, PAY_AMT_INCTAX)
   , MSG, PAY_MTH, PAY_COND_CD, PAY_COND_NM, PAY_COND_CHGRSN
   , PRD_PURORD_TP, PRD_PURORD_NO, RTN_PAY_NO, ORGNZ_CD, LOT_NO
   , INVSHT_TP, BNKACC_CD, MNY_TP, MNY_CD, ADD_RTO
   , PAY_APPL_CD, ADVPAY_TP, TAX_UNT, TAX_FG, TAX_CD
   , HLDTAX_TP, HLDTAX_RTO, HLDTAX_SBJ_AMT, HLDTAX_AMT, IMP_TAX_TP
   , CHRG_BNKACC_CD, PAY_APPL_TP, PAY_CMM_OBL_TP
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK
   , SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF
   , SHT_ADR1, SHT_ADR2, SHT_ADR3
   , SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO
   , ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , decode(MNY_CD, 'JPY', TTLAMT_EXCTAX1, null), decode(MNY_CD, 'JPY', TTLAMT_TAX1, null), decode(MNY_CD, 'JPY', TTLAMT_INCTAX1, null)
   , decode(MNY_CD, 'JPY', TTLAMT_EXCTAX2, null), decode(MNY_CD, 'JPY', TTLAMT_TAX2, null), decode(MNY_CD, 'JPY', TTLAMT_INCTAX2, null)
   , decode(MNY_CD, 'JPY', TTLAMT_EXCTAX3, null), decode(MNY_CD, 'JPY', TTLAMT_TAX3, null), decode(MNY_CD, 'JPY', TTLAMT_INCTAX3, null)
   , decode(MNY_CD, 'JPY', null, TTLAMT_EXCTAX1), decode(MNY_CD, 'JPY', null, TTLAMT_TAX1), decode(MNY_CD, 'JPY', null, TTLAMT_INCTAX1)
   , decode(MNY_CD, 'JPY', null, TTLAMT_EXCTAX3), decode(MNY_CD, 'JPY', null, TTLAMT_TAX3), decode(MNY_CD, 'JPY', null, TTLAMT_INCTAX3)
   , '0'
   , ?, ?, ?, ?
   , ?, ?, ?, ?
 from ${REPLACE_PARENT}
 where RUNTIME_ID = ?

#支払依頼情報を取得
PY0000_03: |+
 select /* PY0000_03 */ * from PAYDTL_INF where COMPANY_CD = ? and PAY_NO = ? order by PAY_DTL_NO

#支払依頼情報を削除
PY0000_04: |+
 delete /* PY0000_04 */ from PAYDTL_INF where COMPANY_CD = ? and PAY_NO = ?

#WF支払依頼明細情報⇒支払依頼明細情報を生成
PY0000_05: |+
 insert into /* PY0000_05 */ PAYDTL_INF (
   COMPANY_CD, PAY_NO, PAY_DTL_NO, PURORD_NO, RCVINSP_NO, RCVINSP_DTL_NO
   , BUY_NO, BUY_DTL_NO, JRNSLP_NO, JRNSLP_DTL_NO, ORGNZ_CD, COM_CHG_ORGNZ_CD
   , ITMEXPS_CD1, ITMEXPS_CD2, ITM_TP1, ITM_TP2, ITM_TP3
   , ITM_CD, ITM_NM, BUMON_CD, ANLYS_CD, ASST_TP
   , PAY_AMT_JPY, PAY_AMT_JPY_INCTAX, ADVPAY_APLY_AMT_JPY
   , MNY_CD, ADD_RTO
   , PAY_AMT_FC, ADVPAY_APLY_AMT_FC
   , TAX_FG, TAX_CD, PAY_SMRY, APPL_CONT, CTRCT_TP, BRKDWN_TP
   , APPL_PRD_S_DT, APPL_PRD_E_DT, HLDTAX_TP, HLDTAX_RTO, HLDTAX_AMT
   , CRDCRD_TP, CRDCRD_IN_NO, ADVPAY_NO, INV_COMPANY_CD
   , DVC_CD, BND_FLR_CD, FRT_PNT_CD, MSR_TOOL_CD, MDA_ID
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , DLT_FG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED
 )
 select
   P.COMPANY_CD, P.PAY_NO, ? PAY_DTL_NO, nvl(D.PURORD_NO, RD.PURORD_NO) PURORD_NO, D.RCVINSP_NO, D.RCVINSP_DTL_NO
   , nvl(D.BUY_NO, BD.BUY_NO) BUY_NO, nvl(D.BUY_DTL_NO, BD.BUY_DTL_NO) BUY_DTL_NO, nvl(D.JRNSLP_NO, BD.JRNSLP_NO) JRNSLP_NO, nvl(D.JRNSLP_DTL_NO, BD.JRNSLP_DTL_NO) JRNSLP_DTL_NO, D.ORGNZ_CD, D.COM_CHG_ORGNZ_CD
   , D.ITMEXPS_CD1, D.ITMEXPS_CD2, D.ITM_TP1, D.ITM_TP2, D.ITM_TP3
   , D.ITM_CD, D.ITM_NM, D.BUMON_CD, D.ANLYS_CD, D.ASST_TP
   , case P.MNY_CD when 'JPY' then D.PAY_AMT else null end PAY_AMT_JPY, case P.MNY_CD when 'JPY' then D.PAY_AMT_INCTAX else null end PAY_AMT_JPY_INCTAX, case P.MNY_CD when 'JPY' then D.ADVPAY_APLY_AMT else null end ADVPAY_APLY_AMT_JPY
   , P.MNY_CD, P.ADD_RTO
   , case P.MNY_CD when 'JPY' then null else D.PAY_AMT end PAY_AMT_FC, case P.MNY_CD when 'JPY' then null else D.ADVPAY_APLY_AMT end ADVPAY_APLY_AMT_FC
   , D.TAX_FG, D.TAX_CD, D.PAY_SMRY, D.APPL_CONT, D.CTRCT_TP, D.BRKDWN_TP
   , D.APPL_PRD_S_DT, D.APPL_PRD_E_DT, D.HLDTAX_TP, D.HLDTAX_RTO, D.HLDTAX_AMT
   , D.CRDCRD_TP, D.CRDCRD_IN_NO, D.ADVPAY_NO, D.INV_COMPANY_CD
   , D.DVC_CD, D.BND_FLR_CD, D.FRT_PNT_CD, D.MSR_TOOL_CD, D.MDA_ID
   , D.TAX_SBJ_TP, D.TAX_KND_CD, D.TAX_FG_CHG
   , '0'
   , ?, ?, ?, ?
   , ?, ?, ?, ?
 from ${REPLACE_PARENT} P
   inner join ${REPLACE_CHILD} D
     on (P.RUNTIME_ID = D.PARENT_RUNTIME_ID)
   /* 検収明細情報より発注Noを取得(経費・前払を考慮) */
   left join RCVINSPDTL_INF RD
     on (D.COMPANY_CD = RD.COMPANY_CD and D.RCVINSP_NO = RD.RCVINSP_NO and D.RCVINSP_DTL_NO = RD.RCVINSP_DTL_NO)
   /* 検収情報の仕入No（黒）（最新）より仕入明細情報を取得※最新の黒には元伝票も入っているはず */
   left join (select B.* from RCVINSP_INF R inner join BUYDTL_INF B on (R.COMPANY_CD = B.COMPANY_CD and R.RCVINSP_NO = B.RCVINSP_NO and R.BUY_NO_B_RCNT = B.BUY_NO)) BD
     on (D.COMPANY_CD = BD.COMPANY_CD and D.RCVINSP_NO = BD.RCVINSP_NO and D.RCVINSP_DTL_NO = BD.RCVINSP_DTL_NO)
 where D.DELETE_FLAG = '0'
   and D.RUNTIME_ID = ?

#前払金情報削除
PY0000_06: |+
 delete /* PY0000_06 */ from ADVPAY_INF where COMPANY_CD = ? and ADVPAY_NO = ?

#前払金情報生成
PY0000_07: |+
 insert into /* PY0000_07 */ ADVPAY_INF (
   COMPANY_CD, ADVPAY_NO, ADVPAY_STS
   , SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN
   , PAYEE_BNKACC_CD, PAYEE_BNK_CD, PAYEE_BNKBRC_CD, PAYEE_BNKACC_TP
   , PAYEE_BNKACC_NO, PAYEE_BNKACC_NM, PAYEE_BNKACC_NM_KN
   , PAY_AMT_JPY, PAY_AMT_JPY_INCTAX, RMN_AMT_JPY
   , MNY_CD, ADD_RTO
   , PAY_AMT_FC, RMN_AMT_FC
   , PAY_NO, PAY_DTL_NO, JRNSLP_NO, JRNSLP_DTL_NO
   , DLT_FG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED
 )
 select
   D.COMPANY_CD, ? as ADVPAY_NO, '0'
   , P.SPLR_CD, P.SPLR_NM_KJ, P.SPLR_NM_KN
   , P.PAYEE_BNKACC_CD, P.PAYEE_BNK_CD, P.PAYEE_BNKBRC_CD, P.PAYEE_BNKACC_TP
   , P.PAYEE_BNKACC_NO, P.PAYEE_BNKACC_NM, P.PAYEE_BNKACC_NM_KN
   , D.PAY_AMT_JPY, D.PAY_AMT_JPY_INCTAX, D.PAY_AMT_JPY
   , D.MNY_CD, D.ADD_RTO
   , D.PAY_AMT_FC, D.PAY_AMT_FC
   , D.PAY_NO, D.PAY_DTL_NO, D.JRNSLP_NO, D.JRNSLP_DTL_NO
   , D.DLT_FG
   , D.CORPORATION_CODE_CREATED, D.USER_CODE_CREATED, D.IP_CREATED, D.TIMESTAMP_CREATED
   , D.CORPORATION_CODE_UPDATED, D.USER_CODE_UPDATED, D.IP_UPDATED, D.TIMESTAMP_UPDATED
 from PAY_INF P
   inner join PAYDTL_INF D
     on (P.COMPANY_CD = D.COMPANY_CD and P.PAY_NO = D.PAY_NO)
 where D.COMPANY_CD = ?
   and D.PAY_NO = ?

#検収Noを元に検収明細情報を取得
PY0000_08: |+
 select /* PY0000_08 */ *
 from RCVINSPDTL_INF
 where COMPANY_CD = ?
   and RCVINSP_NO = ?

#検収Noを元に支払明細情報を取得
PY0000_09: |+
 select /* PY0000_09 */ *
 from PAYDTL_INF
 where COMPANY_CD = ?
   and RCVINSP_NO = ?

#支払計上処理
PY0000_10: |+
 {CALL PKG_PAYMENT.ADD(?,?,?,?,?,?,?)}

#支払訂正処理
PY0000_11: |+
 {CALL PKG_PAYMENT.REVISE(?,?,?,?,?,?,?)}

#支払取消処理
PY0000_12: |+
 {CALL PKG_PAYMENT.CANCEL(?,?,?,?,?,?,?)}

#支払Noに紐付く前払金消込情報を抽出
PY0000_13: |+
 select /* PY0000_13 */ * from ADVPAY_MAT_INF
 where COMPANY_CD = ? and PAY_NO = ?

#前払金消込Noの現在値を採番
PY0000_14: |+
 select /* PY0000_14 */ nvl(max(ADVPAY_MAT_NO), 0)
 from ADVPAY_MAT_INF where COMPANY_CD = ? and ADVPAY_NO = ?

#前払金Noに紐付く前払金消込情報を抽出
PY0000_15: |+
 select /* PY0000_15 */ * from ADVPAY_MAT_INF
 where COMPANY_CD = ? and ADVPAY_NO = ?

#検収No、検収明細Noをキーに紐付く前払金消込情報を抽出
PY0000_16: |+
 select /* PY0000_16 */ * from ADVPAY_MAT_INF
 where COMPANY_CD = ? and RCVINSP_NO = ? and RCVINSP_DTL_NO = ?

#支払No(=申請番号)に紐付くプロセスインスタンスから文書IDを抽出
PY0000_17: |+
 select /* PY0000_17 */ DOC_ID
 from WFT_PROCESS
 where CORPORATION_CODE = ?
   and APPLICATION_NO = ?
   and PROCESS_STATUS = 'end'
   and DOC_ID is not null
 order by
   PROCESS_ID desc

#支払完了処理
PY0000_18: |+
 {CALL PKG_PAYMENT.COMPLETE(?,?,?,?,?,?,?)}

#振込元銀行口座情報を取得
PY0000_19: |+
 select /* PY0000_19 */
   PAYEE_BNKACC_CD, BNKACC_NM, BNK_CD, BNK_NM, BNKBRC_CD
   , BNKBRC_NM, BNKACC_TP, BNKACC_TP_NM, BNKACC_NO, BNKACC_NM_KN
   , PAY_CMM_OBL_TP, HLD_TRT_TP, SRC_BNKACC_CD, SRC_BNKACC_NM
 from V_SPLR_PAYEE_BNKACC
 where COMPANY_CD = ?
   and SPLR_CD = ?
   and LOCALE_CODE = ?
   and trunc(sysdate) between VD_DT_S and VD_DT_E
   and DLT_FG = '0'

#引落先銀行口座情報を取得
PY0000_20: |+
 select /* PY0000_20 */ BNKACC_CD, BNKACC_NM
 from CHRG_BNKACC_MST_V
 where COMPANY_CD = ?
   and PAY_MTH = ?

#クレカ明細取込み入力チェック用データ取得(取引先)
PY0010_01: |+
 select /* PY0010_01 */ count(*)
 from (select * from SPLR_MST where DLT_FG = '0')
 where COMPANY_CD = ?
   and SPLR_CD = ?

#クレカ明細取込み入力チェック(クレカ口座マスタ)
PY0010_02: |+
 select /* PY0010_02 */ count(*)
 from CRDCRD_BNKACC_MST
 where DLT_FG = '0'
   and COMPANY_CD = ?
   and SPLR_CD = ?
   and USR_CD = ?

#クレカ明細データ抽出
PY0011_01: |+
 select /* PY0011_01 */
   ${REPLACE}
 from
   (select T.*, L.LOCALE_CODE from CRDCRD_INF T inner join WFM_LOCALE L on (L.LOCALE_CODE = ?)) C
   left join SPLR_MST S
     on (C.COMPANY_CD = S.COMPANY_CD and C.SPLR_CD = S.SPLR_CD and S.DLT_FG = '0')
   left join (
     select
       distinct
       CORPORATION_CODE
       , USER_CODE
       , USER_NAME
       , LOCALE_CODE
       , ORGANIZATION_CODE_UP_3 as ORGNZ_CD
     from WFV_USER_BELONG
     where JOB_TYPE = '1'
     and DELETE_FLAG_USER = '0'
     and DELETE_FLAG_USER_BELONG = '0'
   ) U
     on (C.COMPANY_CD = U.CORPORATION_CODE and C.USR_CD = U.USER_CODE and C.LOCALE_CODE = U.LOCALE_CODE)
   left join (select * from MWT_PAYDTL where RCVINSP_NO is not null and CRDCRD_IN_NO is not null) P
     on (C.COMPANY_CD = P.COMPANY_CD and C.CRDCRD_IN_NO = P.CRDCRD_IN_NO)
   left join ITMEXPS_MST I1
     on (C.COMPANY_CD = I1.COMPANY_CD and C.ITMEXPS_CD1 = I1.ITMEXPS_CD)
   left join ITMEXPS_MST I2
     on (C.COMPANY_CD = I2.COMPANY_CD and C.ITMEXPS_CD2 = I2.ITMEXPS_CD)
   left join V_ITM_MST IT
     on (
       C.COMPANY_CD = IT.COMPANY_CD
       and U.ORGNZ_CD = IT.ORGNZ_CD_SRCH
       and C.ITM_CD = IT.ITM_CD
       and IT.VD_DT_S <= trunc(sysdate)
       and IT.VD_DT_E >= trunc(sysdate)
       and IT.DLT_FG = '0'
     )
 where C.DLT_FG = '0'

#クレカ明細データ抽出(カラム定義)
PY0011_02: |+
   rownum ID
   , C.COMPANY_CD
   , C.CRDCRD_IN_NO
   , C.PAY_YM
   , C.SPLR_CD
   , S.SPLR_NM_KJ
   , C.CRD_COMPANY_NM
   , C.USR_CD
   , U.USER_NAME USR_NM
   , U.ORGNZ_CD
   , C.USE_DT
   , C.AMT_JPY
   , C.USE_
   , C.AMT_FC
   , P.RCVINSP_NO
   , P.RCVINSP_DTL_NO
   , P.DISP_RCVINSP_NO
   , C.ITMEXPS_CD1
   , I1.ITMEXPS_NM as ITMEXPS_NM1
   , C.ITMEXPS_CD2
   , I2.ITMEXPS_NM as ITMEXPS_NM2
   , C.ITM_CD
   , IT.ITM_NM
   , C.BUMON_CD
   , C.PAY_SMRY
   , C.MAT_STS
   , case C.MAT_STS when '0' then '未消込' when '1' then '消込済' else null end MAT_STS_NM
   , C.USE_DTL_ITM1
   , C.USE_DTL_ITM2
   , C.USE_DTL_ITM3
   , C.USE_DTL_ITM4
   , C.USE_DTL_ITM5
   , C.USE_DTL_ITM6
   , C.USE_DTL_ITM7
   , C.USE_DTL_ITM8
   , C.USE_DTL_ITM9
   , C.USE_DTL_ITM10
   , C.USE_DTL_ITM11
   , C.USE_DTL_ITM12
   , C.USE_DTL_ITM13
   , C.USE_DTL_ITM14
   , C.USE_DTL_ITM15
   , C.USE_DTL_ITM16
   , C.USE_DTL_ITM17
   , C.USE_DTL_ITM18
   , C.USE_DTL_ITM19
   , C.USE_DTL_ITM20
   , C.USE_DTL_ITM21
   , C.USE_DTL_ITM22
   , C.USE_DTL_ITM23
   , C.USE_DTL_ITM24
   , C.USE_DTL_ITM25
   , C.USE_DTL_ITM26

#画面プロセス定義取得
PY0011_03: |+
 select /* PY0011_03 */ SPD.*
 from MWM_SCREEN S
   inner join MWM_SCREEN_PROCESS_DEF SPD
     on (S.SCREEN_ID = SPD.SCREEN_ID)
 where S.CORPORATION_CODE = ?
   and S.SCREEN_CODE = ?
   and SPD.DELETE_FLAG = '0'
   and trunc(SYSDATE) BETWEEN SPD.VALID_START_DATE and SPD.VALID_END_DATE
 order by SPD.SCREEN_PROCESS_ID desc

PY0011_04: |+
 select /* PY0011_04 */
   'NEW' NEW_FG
   , '0' ADVPAY_FG
   , '3' CPRT_FG
   , C.COMPANY_CD
   , NULL PAY_NO
   , '30' PAY_STS
   , C.CNTRCT_NO
   , NULL CNTRCT_PRD_S_DT
   , NULL CNTRCT_PRD_E_DT
   , C.PAY_NM
   , '1' PURORD_TP
   , C.USR_CD SBMTR_CD
   , ? SBMTR_NM
   , ? SBMT_DPT_CD
   , ? SBMT_DPT_NM
   , NULL SBMT_DPT_DT
   , C.SPLR_CD
   , S.SPLR_NM_KJ
   , S.SPLR_NM_KN
   , NULL ZIP_CD
   , NULL ADR_PRF
   , NULL ADR1
   , NULL ADR2
   , NULL ADR3
   , S.CRP_PRS_TP
   , S.CRP_PRS_TP_NM
   , S.DMS_ABR_TP
   , S.DMS_ABR_TP_NM
   , NULL PAYEE_BNKACC_CD
   , NULL PAYEE_BNKACC_NM
   , NULL PAYEE_BNK_CD
   , NULL PAYEE_BNK_NM
   , NULL PAYEE_BNKBRC_CD
   , NULL PAYEE_BNKBRC_NM
   , NULL PAYEE_BNKACC_TP
   , NULL PAYEE_BNKACC_TP_NM
   , NULL PAYEE_BNKACC_NO
   , NULL PAYEE_BNKACC_NM_KN
   , NULL HLD_TRT_TP
   , NULL HLD_TRT_TP_NM
   , C.PAY_SITE_CD
   , PS.PAY_SITE_NM
   , C.RCVINSP_YM
   , C.CST_ADD_YM
   , C.RCVINSP_YM_S
   , C.RCVINSP_YM_E
   , NULL PAY_RQST_DT
   , add_months(C.BNKACC_CHRG_DT, 1) PAY_PLN_DT
   , case when C.TAX_UNT = '1' then C.PAY_AMT_EXCTAX when C.TAX_UNT = '2' and TF.TAX_TP = '2' then ROUND(C.PAY_AMT / (TF.TAX_RTO + 100) * 100) else C.PAY_AMT end PAY_AMT_EXCTAX
   , case when C.TAX_UNT = '1' then C.PAY_AMT_INCTAX when C.TAX_UNT = '2' and TF.TAX_TP = '1' then ROUND(C.PAY_AMT * (TF.TAX_RTO + 100) / 100) else C.PAY_AMT end PAY_AMT_INCTAX
   , NULL PAY_AMT_TAX
   , (case when C.TAX_UNT = '1' then C.PAY_AMT_INCTAX when C.TAX_UNT = '2' and TF.TAX_TP = '1' then ROUND(C.PAY_AMT * (TF.TAX_RTO + 100) / 100) else C.PAY_AMT end - nvl(C.HLDTAX_AMT, 0) - C.ADVPAY_APLY_AMT) PAY_AMT
   , NULL MSG
   , C.PAY_MTH
   , NULL PAY_MTH_NM
   , C.PRD_PURORD_TP
   , C.ORGNZ_CD
   , NULL LOT_NO
   , NULL BNKACC_CD
   , NULL BNKACC_NM
   , '1' MNY_TP
   , 'JPY' MNY_CD
   , MV.MNY_NM
   , MV.IN_RTO ADD_RTO
   , O.EXTENDED_INFO_01 PAY_APPL_CD
   , PA.PAY_APPL_NM
   , C.ADVPAY_TP
   , NULL ADVPAY_TP_NM
   , C.TAX_UNT
   , NULL TAX_UNT_NM
   , C.TAX_CD
   , C.TAX_FG
   , NULL TAX_FG_NM
   , case C.TAX_UNT when '2' then TF.TAX_TP else NULL end TAX_TP
   , case C.TAX_UNT when '2' then TF.TAX_RTO else NULL end TAX_RTO
   , C.HLDTAX_TP
   , NULL HLDTAX_TP_NM
   , C.HLDTAX_RTO
   , C.HLDTAX_SBJ_AMT
   , C.HLDTAX_AMT
   , C.BNKACC_CD CHRG_BNKACC_CD
   , B.BNKACC_NM CHRG_BNKACC_NM
   , C.PAY_APPL_TP
   , NULL PAY_APPL_TP_NM
   , NULL PAY_CMM_OBL_TP
   , NULL PAY_CMM_OBL_TP_NM
   , NULL ADVPAY_NO
   , MV.RDXPNT_GDT
   , ? SBMTR_ADDR_CD
   , ? SBMTR_ADDR
   , C.ADD_RTO_BASE_DT
   , HT.HLDTAX_FG
   , HT.HLDTAX_RTO2
   , C.BKBND_CHG_TP
   , C.MAIL_TP
   , C.MAIL_RMK
   , C.SHT_TO_ZIP_CD
   , C.SHT_ADR_PRF_CD
   , C.SHT_ADR_PRF
   , C.SHT_ADR1
   , C.SHT_ADR2
   , C.SHT_ADR3
   , C.SHT_PIC_NM
   , C.SHT_DPT_NM
   , C.SHT_MLADR
   , C.SHT_TEL_NO
 from
   (
     select
       C.COMPANY_CD
       , C.SPLR_CD
       , C.USR_CD
       , C.USE_YM
       , C.BNKACC_CD
       , C.BNKACC_CHRG_DT
       , C.CNTRCT_NO
       , C.PAY_NM
       , C.PAY_SITE_CD
       , C.RCVINSP_YM
       , C.CST_ADD_YM
       , C.RCVINSP_YM_S
       , C.RCVINSP_YM_E
       , C.PAY_MTH
       , C.PRD_PURORD_TP
       , C.ORGNZ_CD
       , C.TAX_UNT
       , C.TAX_CD
       , C.TAX_FG
       , C.HLDTAX_TP
       , C.HLDTAX_RTO
       , C.HLDTAX_SBJ_AMT
       , C.HLDTAX_AMT
       , C.PAY_APPL_TP
       , C.ADD_RTO_BASE_DT
       , C.BKBND_CHG_TP
       , C.MAIL_TP
       , C.MAIL_RMK
       , C.SHT_TO_ZIP_CD
       , C.SHT_ADR_PRF_CD
       , C.SHT_ADR_PRF
       , C.SHT_ADR1
       , C.SHT_ADR2
       , C.SHT_ADR3
       , C.SHT_PIC_NM
       , C.SHT_DPT_NM
       , C.SHT_MLADR
       , C.SHT_TEL_NO
       , L.LOCALE_CODE
       , max(P.ADVPAY_TP) ADVPAY_TP
       , sum(C.PAY_AMT) PAY_AMT
       , sum(case T.TAX_TP when '2' then ROUND(C.PAY_AMT / (T.TAX_RTO + 100) * 100) else C.PAY_AMT end) PAY_AMT_EXCTAX
       , sum(case T.TAX_TP when '1' then ROUND(C.PAY_AMT * (T.TAX_RTO + 100) / 100) else C.PAY_AMT end) PAY_AMT_INCTAX
       , nvl(sum(D.ADVPAY_APLY_AMT_JPY), 0) ADVPAY_APLY_AMT
     from
       (
         select
           C.COMPANY_CD
           , C.CRDCRD_IN_NO
           , C.SPLR_CD
           , C.USR_CD
           , to_char(C.USE_DT, 'YYYY/MM') USE_YM
           , CB.BNKACC_CD
           , to_date(case when CB.BNKACC_CHRG_DT is not null then to_char(C.USE_DT, 'YYYY/MM') || '/' || CB.BNKACC_CHRG_DT else null end, 'YYYY/MM/DD') BNKACC_CHRG_DT
           , C.AMT_JPY PAY_AMT
           , O.CNTRCT_NO
           , P.RCVINSP_NM PAY_NM
           , P.PAY_SITE_CD
           , P.RCVINSP_YM
           , P.CST_ADD_YM
           , P.RCVINSP_YM_S
           , P.RCVINSP_YM_E
           , P.PAY_MTH
           , P.PRD_PURORD_TP
           , ? ORGNZ_CD
           , P.TAX_UNT
           , case P.TAX_UNT when '2' then P.TAX_CD else NULL end TAX_CD
           , case P.TAX_UNT when '2' then P.TAX_FG else NULL end TAX_FG
           , P.HLDTAX_TP
           , P.HLDTAX_RTO
           , P.HLDTAX_SBJ_AMT
           , P.HLDTAX_AMT
           , P.PAY_APPL_TP
           , trunc(last_day(case when P.CST_ADD_YM is null then sysdate else to_date(P.CST_ADD_YM || '01', 'YYYYMMDD') end)) ADD_RTO_BASE_DT
           , P.BKBND_CHG_TP
           , P.MAIL_TP
           , P.MAIL_RMK
           , P.SHT_TO_ZIP_CD
           , P.SHT_ADR_PRF_CD
           , P.SHT_ADR_PRF
           , P.SHT_ADR1
           , P.SHT_ADR2
           , P.SHT_ADR3
           , P.SHT_PIC_NM
           , P.SHT_DPT_NM
           , P.SHT_MLADR
           , P.SHT_TEL_NO
         from
           (select * from CRDCRD_INF where COMPANY_CD = ?) C
           inner join RCVINSP_INF P
             on (C.COMPANY_CD = P.COMPANY_CD and P.RCVINSP_NO = ?)
           inner join RCVINSPDTL_INF D
             on (P.COMPANY_CD = D.COMPANY_CD and P.RCVINSP_NO = D.RCVINSP_NO and D.RCVINSP_DTL_NO = ?)
           inner join PURORD_INF O
             on (D.COMPANY_CD = O.COMPANY_CD and D.PURORD_NO = O.PURORD_NO)
           left join CRDCRD_BNKACC_MST CB
             on (
               C.COMPANY_CD = CB.COMPANY_CD
               and C.SPLR_CD = CB.SPLR_CD
               and C.USR_CD = CB.USR_CD
             )
       ) C
       inner join WFM_LOCALE L
         on (L.LOCALE_CODE = ?)
       inner join RCVINSP_INF P
         on (C.COMPANY_CD = P.COMPANY_CD)
       inner join RCVINSPDTL_INF D
         on (P.COMPANY_CD = D.COMPANY_CD and P.RCVINSP_NO = D.RCVINSP_NO)
       left join V_TAX_FG T
         on (
           C.COMPANY_CD = T.COMPANY_CD
           and C.ORGNZ_CD = T.ORGNZ_CD
           and case C.TAX_UNT when '1' then nvl(D.TAX_FG, P.TAX_FG) when '2' then C.TAX_FG else null end = T.TAX_FG
           and trunc(sysdate) between T.VD_DT_S and T.VD_DT_E
           and L.LOCALE_CODE = T.LOCALE_CODE
         )
     where (C.CRDCRD_IN_NO, D.RCVINSP_NO, D.RCVINSP_DTL_NO) in (###REPLACE###)
     group by
       C.COMPANY_CD
       , C.SPLR_CD
       , C.USR_CD
       , C.USE_YM
       , C.BNKACC_CD
       , C.BNKACC_CHRG_DT
       , C.CNTRCT_NO
       , C.PAY_NM
       , C.PAY_SITE_CD
       , C.RCVINSP_YM
       , C.CST_ADD_YM
       , C.RCVINSP_YM_S
       , C.RCVINSP_YM_E
       , C.PAY_MTH
       , C.PRD_PURORD_TP
       , C.ORGNZ_CD
       , C.TAX_UNT
       , C.TAX_CD
       , C.TAX_FG
       , C.HLDTAX_TP
       , C.HLDTAX_RTO
       , C.HLDTAX_SBJ_AMT
       , C.HLDTAX_AMT
       , C.PAY_APPL_TP
       , C.ADD_RTO_BASE_DT
       , C.BKBND_CHG_TP
       , C.MAIL_TP
       , C.MAIL_RMK
       , C.SHT_TO_ZIP_CD
       , C.SHT_ADR_PRF_CD
       , C.SHT_ADR_PRF
       , C.SHT_ADR1
       , C.SHT_ADR2
       , C.SHT_ADR3
       , C.SHT_PIC_NM
       , C.SHT_DPT_NM
       , C.SHT_MLADR
       , C.SHT_TEL_NO
       , L.LOCALE_CODE
   ) C
   left join V_SPLR_MST S
     on (C.COMPANY_CD = S.COMPANY_CD and C.SPLR_CD = S.SPLR_CD and C.LOCALE_CODE = S.LOCALE_CODE and S.DLT_FG = '0' and trunc(sysdate) between S.VD_DT_S and S.VD_DT_E)
   left join V_TAX_FG TF
     on (C.COMPANY_CD = TF.COMPANY_CD and C.ORGNZ_CD = TF.ORGNZ_CD and C.LOCALE_CODE = TF.LOCALE_CODE and C.TAX_FG = TF.TAX_FG and SYSDATE between TF.VD_DT_S and TF.VD_DT_E)
   left join V_HLDTAX_MST HT
     on (C.COMPANY_CD = HT.COMPANY_CD and C.HLDTAX_TP = HT.HLDTAX_TP)
   left join PAY_SITE_MST PS
     on (C.COMPANY_CD = PS.COMPANY_CD and C.PAY_SITE_CD = PS.PAY_SITE_CD and PS.DLT_FG = '0')
   left join MNY_MST_V MV
     on (C.COMPANY_CD = MV.COMPANY_CD and MV.MNY_CD = 'JPY' and C.ADD_RTO_BASE_DT between MV.VD_DT_S and MV.VD_DT_E)
   left join WFM_ORGANIZATION O
     on (C.COMPANY_CD = O.CORPORATION_CODE and O.ORGANIZATION_CODE = ?)
   left join PAY_APPL_MST PA
     on (C.COMPANY_CD = PA.COMPANY_CD and O.EXTENDED_INFO_01 = PA.PAY_APPL_CD and PA.DLT_FG = '0')
   left join BNKACC_MST B
     on (C.COMPANY_CD = B.COMPANY_CD and C.BNKACC_CD = B.BNKACC_CD and B.DLT_FG = '0' and trunc(sysdate) between B.VD_DT_S and B.VD_DT_E)

PY0011_05: |+
 select /* PY0011_05 */
   'NEW' NEW_FG
   , '0' ADVPAY_FG
   , '3' CPRT_FG
   , C.COMPANY_CD
   , NULL PAY_NO
   , '30' PAY_STS
   , NULL CNTRCT_NO
   , NULL CNTRCT_PRD_S_DT
   , NULL CNTRCT_PRD_E_DT
   , NULL PAY_NM
   , '4' PURORD_TP
   , C.USR_CD SBMTR_CD
   , ? SBMTR_NM
   , ? SBMT_DPT_CD
   , ? SBMT_DPT_NM
   , NULL SBMT_DPT_DT
   , C.SPLR_CD
   , S.SPLR_NM_KJ
   , S.SPLR_NM_KN
   , NULL ZIP_CD
   , NULL ADR_PRF
   , NULL ADR1
   , NULL ADR2
   , NULL ADR3
   , S.CRP_PRS_TP
   , S.CRP_PRS_TP_NM
   , S.DMS_ABR_TP
   , S.DMS_ABR_TP_NM
   , NULL PAYEE_BNKACC_CD
   , NULL PAYEE_BNKACC_NM
   , NULL PAYEE_BNK_CD
   , NULL PAYEE_BNK_NM
   , NULL PAYEE_BNKBRC_CD
   , NULL PAYEE_BNKBRC_NM
   , NULL PAYEE_BNKACC_TP
   , NULL PAYEE_BNKACC_TP_NM
   , NULL PAYEE_BNKACC_NO
   , NULL PAYEE_BNKACC_NM_KN
   , NULL HLD_TRT_TP
   , NULL HLD_TRT_TP_NM
   , '888888' PAY_SITE_CD
   , PS.PAY_SITE_NM
   , C.USE_YM RCVINSP_YM
   , C.USE_YM CST_ADD_YM
   , C.USE_YM RCVINSP_YM_S
   , C.USE_YM RCVINSP_YM_E
   , NULL PAY_RQST_DT
   , add_months(C.BNKACC_CHRG_DT, 1) PAY_PLN_DT
   , C.PAY_AMT_EXCTAX
   , C.PAY_AMT_INCTAX
   , NULL PAY_AMT_TAX
   , C.PAY_AMT_INCTAX PAY_AMT
   , NULL MSG
   , '50' PAY_MTH
   , NULL PAY_MTH_NM
   , '0' PRD_PURORD_TP
   , C.ORGNZ_CD
   , NULL LOT_NO
   , NULL BNKACC_CD
   , NULL BNKACC_NM
   , '1' MNY_TP
   , 'JPY' MNY_CD
   , MV.MNY_NM
   , MV.IN_RTO ADD_RTO
   , O.EXTENDED_INFO_01 PAY_APPL_CD
   , PA.PAY_APPL_NM
   , '0' ADVPAY_TP
   , NULL ADVPAY_TP_NM
   , '1' TAX_UNT
   , NULL TAX_UNT_NM
   , NULL TAX_CD
   , NULL TAX_FG
   , NULL TAX_FG_NM
   , NULL TAX_TP
   , NULL TAX_RTO
   , NULL HLDTAX_TP
   , NULL HLDTAX_TP_NM
   , NULL HLDTAX_RTO
   , NULL HLDTAX_SBJ_AMT
   , NULL HLDTAX_AMT
   , C.BNKACC_CD CHRG_BNKACC_CD
   , B.BNKACC_NM CHRG_BNKACC_NM
   , '1' PAY_APPL_TP
   , NULL PAY_APPL_TP_NM
   , NULL PAY_CMM_OBL_TP
   , NULL PAY_CMM_OBL_TP_NM
   , NULL ADVPAY_NO
   , MV.RDXPNT_GDT
   , ? SBMTR_ADDR_CD
   , ? SBMTR_ADDR
   , trunc(last_day(to_date(C.USE_YM || '/01', 'YYYY/MM/DD'))) ADD_RTO_BASE_DT
   , NULL HLDTAX_FG
   , NULL HLDTAX_RTO2
   , NULL BKBND_CHG_TP
   , NULL MAIL_TP
   , NULL MAIL_RMK
   , S.ZIP_CD SHT_TO_ZIP_CD
   , S.ADR_PRF_CD SHT_ADR_PRF_CD
   , S.ADR_PRF SHT_ADR_PRF
   , S.ADR1 SHT_ADR1
   , S.ADR2 SHT_ADR2
   , S.ADR3 SHT_ADR3
   , S.SPLR_PIC_NM SHT_PIC_NM
   , S.SPLR_DPT_NM SHT_DPT_NM
   , NULL SHT_MLADR
   , NULL SHT_TEL_NO
 from
   (
     select
       C.COMPANY_CD
       , C.SPLR_CD
       , C.USR_CD
       , CB.BNKACC_CD
       , to_char(C.USE_DT, 'YYYY/MM') USE_YM
       , to_date(case when CB.BNKACC_CHRG_DT is not null then to_char(C.USE_DT, 'YYYY/MM') || '/' || CB.BNKACC_CHRG_DT else null end, 'YYYY/MM/DD') BNKACC_CHRG_DT
       , C.ORGNZ_CD
       , L.LOCALE_CODE
       , sum(C.AMT_JPY) PAY_AMT
       , sum(case T.TAX_TP when '2' then ROUND(C.AMT_JPY / (T.TAX_RTO + 100) * 100) else C.AMT_JPY end) PAY_AMT_EXCTAX
       , sum(case T.TAX_TP when '1' then ROUND(C.AMT_JPY * (T.TAX_RTO + 100) / 100) else C.AMT_JPY end) PAY_AMT_INCTAX
     from (select C.*, ? ORGNZ_CD from CRDCRD_INF C where C.COMPANY_CD = ?) C
       inner join WFM_LOCALE L
         on (L.LOCALE_CODE = ?)
       left join CRDCRD_BNKACC_MST CB
         on (
           C.COMPANY_CD = CB.COMPANY_CD
           and C.SPLR_CD = CB.SPLR_CD
           and C.USR_CD = CB.USR_CD
         )
       left join V_TAX_FG T
         on (C.COMPANY_CD = T.COMPANY_CD and C.ORGNZ_CD = T.ORGNZ_CD and L.LOCALE_CODE = T.LOCALE_CODE and T.TAX_FG = '1' and trunc(sysdate) between T.VD_DT_S and T.VD_DT_E)
     where C.CRDCRD_IN_NO in (###REPLACE###)
     group by
       C.COMPANY_CD
       , C.SPLR_CD
       , C.USR_CD
       , CB.BNKACC_CD
       , to_char(C.USE_DT, 'YYYY/MM')
       , to_date(case when CB.BNKACC_CHRG_DT is not null then to_char(C.USE_DT, 'YYYY/MM') || '/' || CB.BNKACC_CHRG_DT else null end, 'YYYY/MM/DD')
       , C.ORGNZ_CD
       , L.LOCALE_CODE
   ) C
   left join V_SPLR_MST S
     on (C.COMPANY_CD = S.COMPANY_CD and C.SPLR_CD = S.SPLR_CD and C.LOCALE_CODE = S.LOCALE_CODE and S.DLT_FG = '0' and trunc(sysdate) between S.VD_DT_S and S.VD_DT_E)
   left join PAY_SITE_MST PS
     on (C.COMPANY_CD = PS.COMPANY_CD and PS.PAY_SITE_CD = '888888' and PS.DLT_FG = '0')
   left join MNY_MST_V MV
     on (C.COMPANY_CD = MV.COMPANY_CD and MV.MNY_CD = 'JPY' and trunc(last_day(to_date(C.USE_YM || '/01', 'YYYY/MM/DD'))) between MV.VD_DT_S and MV.VD_DT_E)
   left join WFM_ORGANIZATION O
     on (C.COMPANY_CD = O.CORPORATION_CODE and O.ORGANIZATION_CODE = ?)
   left join PAY_APPL_MST PA
     on (C.COMPANY_CD = PA.COMPANY_CD and O.EXTENDED_INFO_01 = PA.PAY_APPL_CD and PA.DLT_FG = '0')
   left join BNKACC_MST B
     on (C.COMPANY_CD = B.COMPANY_CD and C.BNKACC_CD = B.BNKACC_CD and B.DLT_FG = '0' and trunc(sysdate) between B.VD_DT_S and B.VD_DT_E)

PY0011_06: |+
 select /* PY0011_06 */
   C.COMPANY_CD
   , C.DISP_RCVINSP_NO
   , C.RCVINSP_NO
   , C.RCVINSP_DTL_NO
   , C.ORGNZ_CD
   , C.ITMEXPS_CD1
   , I1.ITMEXPS_NM ITMEXPS_NM1
   , C.ITMEXPS_CD2
   , I1.ITMEXPS_NM ITMEXPS_NM2
   , IC.SLP_GRP_GL
   , IC.CST_TP
   , C.ITM_CD
   , C.ITM_NM
   , IT.IPT_NM_FG
   , C.BUMON_CD
   , C.ANLYS_CD
   , C.ASST_TP
   , C.PAY_AMT
   , case C.TAX_TP when '2' then ROUND(C.PAY_AMT / (C.TAX_RTO + 100) * 100) else C.PAY_AMT end PAY_AMT_EXCTAX
   , case C.TAX_TP when '1' then ROUND(C.PAY_AMT * (C.TAX_RTO + 100) / 100) else C.PAY_AMT end PAY_AMT_INCTAX
   , NULL PAY_AMT_TAX
   , C.TAX_FG
   , NULL TAX_FG_NM
   , C.TAX_CD
   , C.TAX_TP
   , C.TAX_RTO
   , C.PAY_SMRY
   , C.INV_COMPANY_CD
   , NULL INV_COMPANY_NM
   , C.RCVINSP_AMT
   , C.ADVPAY_NO
   , C.ADVPAY_APLY_AMT
   , C.SPLR_CD
   , 'JPY' MNY_CD
   , C.CRDCRD_IN_NO
   , '1' CRDCRD_TP
 from
   (
     select
       C.*
       , D.RCVINSP_NO
       , D.RCVINSP_DTL_NO
       , D.RCVINSP_NO || '-' || lpad(D.RCVINSP_DTL_NO, 4, '0') DISP_RCVINSP_NO
       , D.ITMEXPS_CD1
       , D.ITMEXPS_CD2
       , D.ITM_CD
       , D.ITM_NM
       , D.BUMON_CD
       , D.ANLYS_CD
       , D.ASST_TP
       , D.RCVINSP_AMT_JPY RCVINSP_AMT
       , D.RCVINSP_SMRY PAY_SMRY
       , case C.TAX_UNT when '1' then nvl(D.TAX_FG, P.TAX_FG) else null end TAX_FG
       , case C.TAX_UNT when '1' then T.TAX_TP else null end TAX_TP
       , case C.TAX_UNT when '1' then T.TAX_RTO else null end TAX_RTO
       , case C.TAX_UNT when '1' then nvl(D.TAX_CD, P.TAX_CD) else null end TAX_CD
       , D.ADVPAY_NO
       , D.ADVPAY_APLY_AMT_JPY ADVPAY_APLY_AMT
       , D.INV_COMPANY_CD
     from (
       select
         C.COMPANY_CD
         , C.CRDCRD_IN_NO
         , C.SPLR_CD
         , C.AMT_JPY PAY_AMT
         , ? ORGNZ_CD
         , P.TAX_UNT
       from (select * from CRDCRD_INF where COMPANY_CD = ?) C
         inner join RCVINSP_INF P
           on (C.COMPANY_CD = P.COMPANY_CD and P.RCVINSP_NO = ?)
     ) C
       inner join WFM_LOCALE L
         on (L.LOCALE_CODE = ?)
       inner join RCVINSP_INF P
         on (C.COMPANY_CD = P.COMPANY_CD)
       inner join RCVINSPDTL_INF D
         on (P.COMPANY_CD = D.COMPANY_CD and P.RCVINSP_NO = D.RCVINSP_NO)
       left join V_TAX_FG T
         on (C.COMPANY_CD = T.COMPANY_CD and C.ORGNZ_CD = T.ORGNZ_CD and case C.TAX_UNT when '1' then nvl(D.TAX_FG, P.TAX_FG) else null end = T.TAX_FG and trunc(sysdate) between T.VD_DT_S and T.VD_DT_E and L.LOCALE_CODE = T.LOCALE_CODE)
     where (C.CRDCRD_IN_NO, D.RCVINSP_NO, D.RCVINSP_DTL_NO) in (###REPLACE###)
   ) C
   left join ITMEXPS_MST I1
     on (C.COMPANY_CD = I1.COMPANY_CD and C.ITMEXPS_CD1 = I1.ITMEXPS_CD)
   left join ITMEXPS_MST I2
     on (C.COMPANY_CD = I2.COMPANY_CD and C.ITMEXPS_CD2 = I2.ITMEXPS_CD)
   left join ITMEXPS1_CHRMST IC
     on (C.COMPANY_CD = IC.COMPANY_CD and C.ITMEXPS_CD1 = IC.ITMEXPS_CD1 and C.ITMEXPS_CD2 = IC.ITMEXPS_CD2 and IC.DLT_FG = '0')
   left join V_ITM_MST IT
     on (C.COMPANY_CD = IT.COMPANY_CD and C.ORGNZ_CD = IT.ORGNZ_CD_SRCH and C.ITM_CD = IT.ITM_CD and IT.DLT_FG = '0')
 order by CRDCRD_IN_NO

PY0011_07: |+
 select /* PY0011_07 */
   C.COMPANY_CD
   , NULL DISP_RCVINSP_NO
   , NULL RCVINSP_NO
   , NULL RCVINSP_DTL_NO
   , C.ORGNZ_CD
   , C.ITMEXPS_CD1
   , I1.ITMEXPS_NM ITMEXPS_NM1
   , C.ITMEXPS_CD2
   , I1.ITMEXPS_NM ITMEXPS_NM2
   , IC.SLP_GRP_GL
   , IC.CST_TP
   , C.ITM_CD
   , IT.ITM_NM
   , IT.IPT_NM_FG
   , C.BUMON_CD
   , NULL ANLYS_CD
   , IC.ASST_TP
   , C.AMT_JPY PAY_AMT
   , C.AMT_JPY PAY_AMT_EXCTAX
   , C.AMT_JPY PAY_AMT_INCTAX
   , NULL PAY_AMT_TAX
   , T.TAX_FG
   , T.TAX_FG_NM
   , T.TAX_CD
   , T.TAX_TP
   , T.TAX_RTO
   , CB.CRD_COMPANY_NM || ' ' || C.COUNT || '件' PAY_SMRY
   , NULL INV_COMPANY_CD
   , NULL INV_COMPANY_NM
   , NULL RCVINSP_AMT
   , NULL ADVPAY_NO
   , NULL ADVPAY_APLY_AMT
   , C.SPLR_CD
   , 'JPY' MNY_CD
   , C.CRDCRD_IN_NO
   , '1' CRDCRD_TP
 from
   (
     select
       C.COMPANY_CD
       , C.PAY_YM
       , C.SPLR_CD
       , C.USR_CD
       , to_char(C.USE_DT, 'YYYYMM') USE_YM
       , C.ITMEXPS_CD1
       , C.ITMEXPS_CD2
       , C.BUMON_CD
       , ? ORGNZ_CD
       , min(C.CRDCRD_IN_NO) CRDCRD_IN_NO
       , sum(C.AMT_JPY) AMT_JPY
       , min(C.ITM_CD) ITM_CD
       , count(*) COUNT
     from CRDCRD_INF C
     where C.COMPANY_CD = ? and C.CRDCRD_IN_NO in (###REPLACE###)
     group by
       C.COMPANY_CD
       , C.PAY_YM
       , C.SPLR_CD
       , C.USR_CD
       , to_char(C.USE_DT, 'YYYYMM')
       , C.ITMEXPS_CD1, C.ITMEXPS_CD2
       , C.BUMON_CD
   ) C
   inner join WFM_LOCALE L
     on (L.LOCALE_CODE = ?)
   left join CRDCRD_BNKACC_MST CB
     on (C.COMPANY_CD = CB.COMPANY_CD and C.SPLR_CD = CB.SPLR_CD and C.USR_CD = CB.USR_CD)
   left join ITMEXPS_MST I1
     on (C.COMPANY_CD = I1.COMPANY_CD and C.ITMEXPS_CD1 = I1.ITMEXPS_CD)
   left join ITMEXPS_MST I2
     on (C.COMPANY_CD = I2.COMPANY_CD and C.ITMEXPS_CD2 = I2.ITMEXPS_CD)
   left join ITMEXPS1_CHRMST IC
     on (C.COMPANY_CD = IC.COMPANY_CD and C.ITMEXPS_CD1 = IC.ITMEXPS_CD1 and C.ITMEXPS_CD2 = IC.ITMEXPS_CD2 and IC.DLT_FG = '0')
   left join V_ITM_MST IT
     on (C.COMPANY_CD = IT.COMPANY_CD and C.ORGNZ_CD = IT.ORGNZ_CD_SRCH and C.ITM_CD = IT.ITM_CD and IT.DLT_FG = '0')
   left join V_TAX_FG T
     on (
       C.COMPANY_CD = T.COMPANY_CD
       and C.ORGNZ_CD = T.ORGNZ_CD
       and L.LOCALE_CODE = T.LOCALE_CODE
       and T.TAX_FG = '1'
       and trunc(sysdate) between T.VD_DT_S and T.VD_DT_E
     )
 order by CRDCRD_IN_NO

#支払依頼対象選択の抽出
PY0100_01: |+
 select /* PY0100_01 */
   ${REPLACE}
 from (select P.*, L.LOCALE_CODE from RCVINSP_INF P inner join WFM_LOCALE L on (L.LOCALE_CODE = ?)) P
   inner join RCVINSPDTL_INF D
     on (P.COMPANY_CD = D.COMPANY_CD and P.RCVINSP_NO = D.RCVINSP_NO)
   left join PURORD_INF O
     on (D.COMPANY_CD = O.COMPANY_CD and D.PURORD_NO = O.PURORD_NO)
   left join MNY_MST MV
     on (P.COMPANY_CD = MV.COMPANY_CD and P.MNY_CD = MV.MNY_CD)
   inner join V_ITMEXPS_CHRMST_LV1 I1
     on (D.COMPANY_CD = I1.COMPANY_CD and P.ORGNZ_CD = I1.ORGNZ_CD_SRCH and D.ITMEXPS_CD1 = I1.ITMEXPS_CD1)
   inner join V_ITMEXPS_CHRMST_LV2 I2
     on (D.COMPANY_CD = I2.COMPANY_CD and P.ORGNZ_CD = I2.ORGNZ_CD_SRCH and D.ITMEXPS_CD1 = I2.ITMEXPS_CD1 and D.ITMEXPS_CD2 = I2.ITMEXPS_CD2)
   left join BUMON_MST B
     on (D.COMPANY_CD = B.COMPANY_CD and D.BUMON_CD = B.BUMON_CD)
   left join WFM_USER_V U1
     on (O.COMPANY_CD = U1.CORPORATION_CODE and O.SBMTR_CD = U1.USER_CODE and P.LOCALE_CODE = U1.LOCALE_CODE)
   left join WFM_USER_V U2
     on (P.COMPANY_CD = U2.CORPORATION_CODE and P.SBMTR_CD = U2.USER_CODE and P.LOCALE_CODE = U2.LOCALE_CODE)
 where P.COMPANY_CD = ?
   and P.DLT_FG = '0'
   and P.RCVINSP_STS = '10'
   and not exists (
     select 'x'
     from MWT_PAYDTL DTL
       inner join MWT_PAY H
         on H.CORPORATION_CODE = DTL.CORPORATION_CODE and H.PROCESS_ID = DTL.PROCESS_ID and H.DELETE_FLAG = '0'
       inner join WFT_PROCESS PROC
         on PROC.CORPORATION_CODE = DTL.CORPORATION_CODE and PROC.PROCESS_ID = DTL.PROCESS_ID and PROC.PROCESS_STATUS in ('start', 'run', 'wait')
     where DTL.DELETE_FLAG = '0' and DTL.COMPANY_CD = D.COMPANY_CD and DTL.RCVINSP_NO = D.RCVINSP_NO and DTL.RCVINSP_DTL_NO = D.RCVINSP_DTL_NO
   )
   and not exists (
     select 'x' from WFT_PROCESS PROC
     where PROC.CORPORATION_CODE = P.COMPANY_CD
     and PROC.APPLICATION_NO = P.RCVINSP_NO
     and PROC.PROCESS_STATUS in ('start', 'run', 'wait')
     and PROC.BUSINESS_PROCESS_STATUS not in ('3', '015', '016') /* 決裁ポイント後は可とする */
   )
   and not exists (
     select 'x' from PAYDTL_INF DTL
     where DTL.COMPANY_CD = D.COMPANY_CD and DTL.RCVINSP_NO = D.RCVINSP_NO and DTL.RCVINSP_DTL_NO = D.RCVINSP_DTL_NO
   )

#支払依頼対象選択のSELECT句
PY0100_02: |+
   P.COMPANY_CD
   , P.RCVINSP_NM
   , O.PURORD_NM
   , P.SPLR_CD
   , P.SPLR_NM_KJ
   , P.ORGNZ_CD
   , P.MNY_CD
   , MV.MNY_NM
   , D.RCVINSP_NO
   , D.RCVINSP_DTL_NO
   , D.RCVINSP_NO || '-' || lpad(D.RCVINSP_DTL_NO, 4, '0') as DISP_RCVINSP_NO
   , D.PURORD_NO
   , D.PURORD_DTL_NO
   , D.ITMEXPS_CD1
   , I1.ITMEXPS_NM1
   , D.ITMEXPS_CD2
   , I2.ITMEXPS_NM2
   , D.BUMON_CD
   , B.BUMON_NM
   , nvl(D.RCVINSP_AMT_JPY_INCTAX, D.RCVINSP_AMT_FC) as RCVINSP_AMT_INCTAX

#選択された支払依頼対象の抽出
PY0100_03: |+
 select /* PY0100_03 */
   ${REPLACE}
 from RCVINSPDTL_INF D
   inner join (select P.*, L.LOCALE_CODE from RCVINSP_INF P inner join WFM_LOCALE L on (L.LOCALE_CODE = ?)) P
     on (P.COMPANY_CD = D.COMPANY_CD and P.RCVINSP_NO = D.RCVINSP_NO)
   left join PURORD_INF O
     on (D.COMPANY_CD = O.COMPANY_CD and D.PURORD_NO = O.PURORD_NO)
   left join SPLR_MST S
     on (P.COMPANY_CD = S.COMPANY_CD and P.SPLR_CD = S.SPLR_CD and S.DLT_FG = '0')
   left join PAY_SITE_MST PS
     on (P.COMPANY_CD = PS.COMPANY_CD and P.PAY_SITE_CD = PS.PAY_SITE_CD)
   left join PAY_APPL_MST PA
     on (P.COMPANY_CD = PA.COMPANY_CD and P.PAY_APPL_CD = PA.PAY_APPL_CD)
   left join MNY_MST_V MV
     on (P.COMPANY_CD = MV.COMPANY_CD and P.MNY_CD = MV.MNY_CD and trunc(sysdate) between MV.VD_DT_S and MV.VD_DT_E)
   left join V_TAX_FG_CHG TF
     on (D.COMPANY_CD = TF.COMPANY_CD and TF.MNY_TP = case when P.MNY_CD is null or P.MNY_CD = 'JPY' then '1' else '2' end and D.TAX_SBJ_TP = TF.TAX_SBJ_TP and D.TAX_KND_CD = TF.TAX_KND_CD and D.TAX_FG_CHG = TF.TAX_FG_CHG and SYSDATE between TF.VD_DT_S and TF.VD_DT_E and P.LOCALE_CODE = TF.LOCALE_CODE)
   left join V_HLDTAX_MST HT
     on (P.COMPANY_CD = HT.COMPANY_CD and P.HLDTAX_TP = HT.HLDTAX_TP)
   inner join V_ITMEXPS_CHRMST_LV1 I1
     on (D.COMPANY_CD = I1.COMPANY_CD and P.ORGNZ_CD = I1.ORGNZ_CD_SRCH and D.ITMEXPS_CD1 = I1.ITMEXPS_CD1)
   inner join V_ITMEXPS_CHRMST_LV2 I2
     on (D.COMPANY_CD = I2.COMPANY_CD and P.ORGNZ_CD = I2.ORGNZ_CD_SRCH and D.ITMEXPS_CD1 = I2.ITMEXPS_CD1 and D.ITMEXPS_CD2 = I2.ITMEXPS_CD2)
   left join BUMON_MST B
     on (D.COMPANY_CD = B.COMPANY_CD and D.BUMON_CD = B.BUMON_CD)
   left join WFM_USER_V U1
     on (O.COMPANY_CD = U1.CORPORATION_CODE and O.SBMTR_CD = U1.USER_CODE and P.LOCALE_CODE = U1.LOCALE_CODE)
   left join WFM_USER_V U2
     on (P.COMPANY_CD = U2.CORPORATION_CODE and P.SBMTR_CD = U2.USER_CODE and P.LOCALE_CODE = U2.LOCALE_CODE)
   left join BND_FLR_MST BF
     on (D.COMPANY_CD = BF.COMPANY_CD and D.BND_FLR_CD = BF.BND_FLR_CD)
   left join V_ADVPAY_INF AP
     on (D.COMPANY_CD = AP.COMPANY_CD and D.ADVPAY_NO = AP.ADVPAY_NO and P.LOCALE_CODE = AP.LOCALE_CODE)
 where

#選択された支払依頼対象のSELECT句
PY0100_04: |+
   P.COMPANY_CD
   , P.RCVINSP_NM
   , P.PURORD_TP
   , O.PURORD_NM
   , O.CNTRCT_NO
   , P.RCVINSP_DT
   , P.RCVINSP_YM
   , P.CST_ADD_YM
   , P.RCVINSP_YM_S
   , P.RCVINSP_YM_E
   , S.CRP_PRS_TP
   , S.DMS_ABR_TP
   , P.SPLR_CD
   , P.SPLR_NM_KJ
   , P.SPLR_NM_KN
   , P.PAY_MTH
   , NULL as PAYEE_BNKACC_CD
   , NULL as BNKACC_NM
   , NULL as BNK_CD
   , NULL as BNK_NM
   , NULL as BNKBRC_CD
   , NULL as BNKBRC_NM
   , NULL as BNKACC_TP
   , NULL as BNKACC_TP_NM
   , NULL as BNKACC_NO
   , NULL as BNKACC_NM_KN
   , NULL as PAY_CMM_OBL_TP
   , NULL as HLD_TRT_TP
   , NULL as SRC_BNKACC_CD
   , NULL as SRC_BNKACC_NM
   , P.ORGNZ_CD
   , P.MNY_CD
   , MV.MNY_NM
   , P.MNY_TP
   , to_char(P.ADD_RTO, 'FM9990.000000') ADD_RTO
   , MV.RDXPNT_GDT
   , P.PRD_PURORD_TP
   , P.PRD_PURORD_NO
   , P.RTN_PAY_NO
   , P.LOT_NO
   , P.PAY_SITE_CD
   , PS.PAY_SITE_NM
   , PA.PAY_APPL_NM
   , P.PAY_APPL_CD
   , P.ADVPAY_TP
   , NULL as CHRG_BNKACC_CD
   , NULL as CHRG_BNKACC_NM
   , P.PAY_APPL_TP
   , P.TAX_UNT
   , P.HLDTAX_TP
   , HT.HLDTAX_FG
   , P.HLDTAX_RTO
   , HT.HLDTAX_RTO2
   , P.HLDTAX_SBJ_AMT
   , P.HLDTAX_AMT
   , P.BKBND_CHG_TP
   , P.MAIL_TP
   , P.MAIL_RMK
   , P.SHT_TO_ZIP_CD
   , P.SHT_ADR_PRF_CD
   , P.SHT_ADR_PRF
   , P.SHT_ADR1
   , P.SHT_ADR2
   , P.SHT_ADR3
   , P.SHT_PIC_NM
   , P.SHT_DPT_NM
   , P.SHT_MLADR
   , P.SHT_TEL_NO
   , P.ADVCST_MRK
   , D.RCVINSP_NO
   , D.RCVINSP_DTL_NO
   , D.RCVINSP_NO || '-' || lpad(D.RCVINSP_DTL_NO, 4, '0') as DISP_RCVINSP_NO
   , D.PURORD_NO
   , D.PURORD_DTL_NO
   , D.ITMEXPS_CD1
   , I1.ITMEXPS_NM1
   , D.ITMEXPS_CD2
   , I2.ITMEXPS_NM2
   , I2.SLP_GRP_GL
   , I2.CST_TP
   , D.ITM_CD
   , D.ITM_NM
   , case D.ITM_CD when '99999999999999999999' then '1' else '0' end as IPT_NM_FG
   , D.BUMON_CD
   , B.BUMON_NM
   , D.ANLYS_CD
   , D.ASST_TP
   , nvl(D.RCVINSP_AMT_JPY, D.RCVINSP_AMT_FC) as RCVINSP_AMT
   , nvl(D.RCVINSP_AMT_JPY_INCTAX, D.RCVINSP_AMT_FC) as RCVINSP_AMT_INCTAX
   , nvl(D.ADVPAY_APLY_AMT_JPY, D.ADVPAY_APLY_AMT_FC) as ADVPAY_APLY_AMT
   , D.RCVINSP_SMRY
   , D.TAX_FG
   , D.TAX_CD
   , TF.TAX_RTO
   , TF.TAX_TP
   , D.TAX_FG_CHG
   , D.TAX_SBJ_TP
   , D.TAX_KND_CD
   , D.APPL_CONT
   , D.CTRCT_TP
   , D.BRKDWN_TP
   , D.APPL_PRD_S_DT
   , D.APPL_PRD_E_DT
   , D.ADVPAY_NO
   , D.INV_COMPANY_CD
   , D.DVC_CD
   , D.BND_FLR_CD
   , BF.BND_FLR_NM
   , D.FRT_PNT_CD
   , D.MSR_TOOL_CD
   , D.MDA_ID
   , to_char(AP.ADD_RTO, 'FM9990.000000') ADVPAY_ADD_RTO
   , AP.PAY_PLN_DT ADVPAY_PAY_PLN_DT

#前払選択一覧
PY0110_01: |+
  SELECT /* PY0110_01 */
  ${REPLACE}
  FROM
    PURORD_INF O
    LEFT JOIN MWM_OPTION OP
      ON OP.OPTION_CODE = 'kbnMny'
      AND O.COMPANY_CD = OP.CORPORATION_CODE
      AND OP.DELETE_FLAG = '0'
    LEFT JOIN MWM_OPTION_ITEM OPI
      ON OPI.OPTION_ID = OP.OPTION_ID
      AND OPI.CODE = O.MNY_TP
      AND OPI.DELETE_FLAG = '0'
  WHERE
    O.COMPANY_CD = ?

#前払選択一覧SELECT句
PY0110_02: |+
    COMPANY_CD
    , PURORD_NO AS MAEBARAI_NO
    , PURORD_NM AS MAEBARAI_NM
    , SPLR_CD
    , SPLR_NM_KJ
    , SPLR_NM_KN
    , MNY_TP
    , OPI.LABEL AS MNY_NM
    , PURORD_AMT_EXCTAX AS MAEBARAI_AMT_JPY
    , 0 AS JUTO_AMT_JPY
    , PURORD_AMT_EXCTAX AS JUTO_KANO_AMT_JPY
    , 0 AS JUTO_NOW_AMT_JPY

#プロセスインスタンスから申請番号と件名を取得
PY0020_01: |+
 select /* PY0020_01 */
   PROCESS_ID
   , SUBJECT
   , APPLICATION_NO
 from WFT_PROCESS
 where CORPORATION_CODE = ?
   and PROCESS_ID = ?

#画面コード、前払金申請フラグを取得
PY0020_02: |+
 select /* PY0020_02 */
   P.PAY_NO
   , case when P.PURORD_TP = '4' then 'SCR0079' when exists (select 'x' from ADVPAY_INF A where A.COMPANY_CD = P.COMPANY_CD and A.PAY_NO = P.PAY_NO) then 'SCR0075' else 'SCR0050' end SCREEN_CODE
   , case when exists (select 'x' from ADVPAY_INF A where A.COMPANY_CD = P.COMPANY_CD and A.PAY_NO = P.PAY_NO) then '1' else '0' end ADVPAY_FG
 from PAY_INF P
 where P.COMPANY_CD = ?
   and P.PAY_NO = ?

PY0020_03: |+
 select * from MWV_TRAY_CONFIG
 where CORPORATION_CODE = ?
   and TRAY_CONFIG_CODE = ?

#支払方法選択肢取得
PY0020_04: |+
 select /* PR0010_01 */ *
 from MWV_OPTION_ITEM
 where CORPORATION_CODE = ?
   and LOCALE_CODE = ?
   and OPTION_CODE = 'KbnOrdPayMth'
   and DELETE_FLAG = '0'
 order by SORT_ORDER


#支払一覧
PY0030_01: |+
 select /* PY0030_01 */
   ${REPLACE}
 from
   (
     select T.*, L.LOCALE_CODE from PAY_INF T
     inner join WFM_LOCALE L on (L.LOCALE_CODE = ?)
   ) P
   left join (
     select * from MWV_OPTION_ITEM
     where OPTION_CODE = 'kbnMny' and DELETE_FLAG = '0'
   ) O1
     on (
       P.COMPANY_CD = O1.CORPORATION_CODE
       and P.MNY_TP = O1.CODE
       and P.LOCALE_CODE = O1.LOCALE_CODE
     )
   left join (
     select * from MWM_LOOKUP
     where LOOKUP_GROUP_ID = 'PAY_STS' and DELETE_FLAG = '0'
   ) L1
     on (
       P.COMPANY_CD = L1.CORPORATION_CODE
       and P.PAY_STS = L1.LOOKUP_ID
       and P.LOCALE_CODE = L1.LOCALE_CODE
     )
 where
   exists (
     select 'x' from (%SUBQUERY%) PS where P.COMPANY_CD = PS.CORPORATION_CODE and P.PAY_NO = PS.APPLICATION_NO
   )
   /* 前払申請以外のレコードを取得 */
   and not exists (
     select 'x' from ADVPAY_INF T
     where T.COMPANY_CD = P.COMPANY_CD and T.PAY_NO = P.PAY_NO
   )

#支払一覧のSELECT句
PY0030_02: |+
   P.COMPANY_CD
   , P.PAY_NO
   , P.PAY_STS
   , L1.LOOKUP_NAME as PAY_STS_NM
   , P.PAY_NM
   , P.SPLR_CD
   , P.SPLR_NM_KJ
   , P.SPLR_NM_KN
   , decode(P.MNY_CD, 'JPY', P.PAY_AMT_EXCTAX, P.PAY_AMT_FC_EXCTAX) as PAY_AMT_EXCTAX
   , decode(P.MNY_CD, 'JPY', P.PAY_AMT_INCTAX, P.PAY_AMT_FC_INCTAX) as PAY_AMT_INCTAX
   , P.PAY_RQST_DT
   , P.PAY_PLN_DT
   , O1.LABEL as MNY_TP_NM
   , case P.PURORD_TP when '4' then 'SCR0079' else 'SCR0050' end as SCREEN_CODE

#申請中の発注申請の存在チェック
PY0030_03: |+
 select /* PY0030_03 */ count(*)
 from WFT_PROCESS
 where CORPORATION_CODE = ?
   and APPLICATION_NO = ?
   and PROCESS_STATUS in ('start', 'wait', 'run')

#申請中の発注申請の存在チェック
PY0030_04: |+
 select max(SPD.SCREEN_PROCESS_ID)
 from MWM_SCREEN S
   inner join MWM_SCREEN_PROCESS_DEF SPD
     on (S.SCREEN_ID = SPD.SCREEN_ID)
 where S.CORPORATION_CODE = ?
   and S.SCREEN_CODE = ?
   and SPD.DELETE_FLAG = '0'
   and trunc(SYSDATE) BETWEEN SPD.VALID_START_DATE and SPD.VALID_END_DATE

#支払情報取得
PY0031_01: |+
 select /* PY0031_01 */
   P.*
   , decode(P.MNY_CD, 'JPY', P.PAY_AMT_EXCTAX, P.PAY_AMT_FC_EXCTAX) as PAY_AMT_EXCTAX
   , decode(P.MNY_CD, 'JPY', P.PAY_AMT_INCTAX, P.PAY_AMT_FC_INCTAX) as PAY_AMT_INCTAX
   , 'CHANGE' as NEW_FG
   , ? as ADVPAY_FG
   , '0' as CPRT_FG
   , O1.LABEL as CRP_PRS_TP_NM
   , O2.LABEL as DMS_ABR_TP_NM
   , PB.BNK_NM as PAYEE_BNK_NM
   , PB.BNKBRC_NM as PAYEE_BNKBRC_NM
   , PB.BNKACC_TP_NM as PAYEE_BNKACC_TP_NM
   , PB.HLD_TRT_TP
   , O3.LABEL as HLD_TRT_TP_NM
   , PS.PAY_SITE_NM
   , O4.LABEL as PAY_MTH_NM
   , BA1.BNKACC_NM
   , MV.MNY_NM
   , PA.PAY_APPL_NM
   , O6.LABEL as ADVPAY_TP_NM
   , O7.LABEL as TAX_UNT_NM
   , T.TAX_FG_CHG_NM
   , T.TAX_TP
   , T.TAX_RTO
   , HT.HLDTAX_NM as HLDTAX_TP_NM
   , HT.HLDTAX_FG
   , HT.HLDTAX_RTO2
   , BA2.BNKACC_NM as CHRG_BNKACC_NM
   , O9.LABEL as PAY_APPL_TP_NM
   , O10.LABEL as PAY_CMM_OBL_TP_NM
   , MV.RDXPNT_GDT
   , U.USER_NAME SBMTR_NM
   , U.EXTENDED_INFO_01 as SBMTR_ADDR_CD
   , L.LOOKUP_NAME as SBMTR_ADDR
   , (decode(P.MNY_CD, 'JPY', P.PAY_AMT_INCTAX, P.PAY_AMT_FC_INCTAX) - nvl(HLDTAX_AMT, 0) - nvl(case P.MNY_CD when 'JPY' then D.ADVPAY_APLY_AMT_JPY else D.ADVPAY_APLY_AMT_FC end, 0)) as PAY_AMT
   , decode(P.MNY_CD, 'JPY', nvl(P.PAY_AMT_INCTAX, 0) - nvl(P.PAY_AMT_EXCTAX, 0), nvl(P.PAY_AMT_FC_INCTAX, 0) - nvl(P.PAY_AMT_FC_EXCTAX, 0)) as PAY_AMT_TAX
  , case when P.TAX_UNT = '3' and exists (select 'x' from PAYDTL_INF PD where PD.COMPANY_CD = P.COMPANY_CD and PD.PAY_NO = P.PAY_NO and PD.TAX_FG_CHG = '4') then '1' else '0' end TTLAMT_EXCTAX1_FG
  , case when P.TAX_UNT = '3' and exists (select 'x' from PAYDTL_INF PD where PD.COMPANY_CD = P.COMPANY_CD and PD.PAY_NO = P.PAY_NO and PD.TAX_FG_CHG = '5') then '1' else '0' end TTLAMT_EXCTAX2_FG
  , case when P.TAX_UNT = '3' and exists (select 'x' from PAYDTL_INF PD where PD.COMPANY_CD = P.COMPANY_CD and PD.PAY_NO = P.PAY_NO and PD.TAX_FG_CHG = '6') then '1' else '0' end TTLAMT_EXCTAX3_FG
 from (
   select P.*, L.LOCALE_CODE from PAY_INF P inner join WFM_LOCALE L on (L.LOCALE_CODE = ?)
 ) P
   inner join (
     select
       COMPANY_CD
       , PAY_NO
       , sum(ADVPAY_APLY_AMT_JPY) ADVPAY_APLY_AMT_JPY
       , sum(ADVPAY_APLY_AMT_FC) ADVPAY_APLY_AMT_FC
     from PAYDTL_INF
     where DLT_FG = '0'
     group by COMPANY_CD, PAY_NO
   ) D
     on (P.COMPANY_CD = D.COMPANY_CD and P.PAY_NO = D.PAY_NO)
   left join PAYEE_BNKACC_MST_V PB
     on (P.COMPANY_CD = PB.COMPANY_CD and P.SPLR_CD = PB.SPLR_CD and P.PAYEE_BNKACC_CD = PB.PAYEE_BNKACC_CD)
   left join PAY_SITE_MST PS
     on (P.COMPANY_CD = PS.COMPANY_CD and P.PAY_SITE_CD = PS.PAY_SITE_CD)
   left join BNKACC_MST BA1
     on (P.COMPANY_CD = BA1.COMPANY_CD and P.BNKACC_CD = BA1.BNKACC_CD and BA1.DLT_FG = '0' and trunc(sysdate) between BA1.VD_DT_S and BA1.VD_DT_E)
   left join MNY_MST_V MV
     on (P.COMPANY_CD = MV.COMPANY_CD and P.MNY_CD = MV.MNY_CD and trunc(sysdate) between MV.VD_DT_S and MV.VD_DT_E)
   left join PAY_APPL_MST PA
     on (P.COMPANY_CD = PA.COMPANY_CD and P.PAY_APPL_CD = PA.PAY_APPL_CD)
   left join V_TAX_FG_CHG T
     on (P.COMPANY_CD = T.COMPANY_CD and T.MNY_TP = case when P.MNY_CD is null or P.MNY_CD = 'JPY' then '1' else '2' end and P.TAX_SBJ_TP = T.TAX_SBJ_TP and P.TAX_KND_CD = T.TAX_KND_CD and P.TAX_FG_CHG = T.TAX_FG_CHG and trunc(sysdate) between T.VD_DT_S and T.VD_DT_E and P.LOCALE_CODE = T.LOCALE_CODE)
   left join V_HLDTAX_MST HT
     on (P.COMPANY_CD = HT.COMPANY_CD and P.HLDTAX_TP = HT.HLDTAX_TP)
   left join BNKACC_MST BA2
     on (P.COMPANY_CD = BA2.COMPANY_CD and P.CHRG_BNKACC_CD = BA2.BNKACC_CD and BA2.DLT_FG = '0' and trunc(sysdate) between BA2.VD_DT_S and BA2.VD_DT_E)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'KbnPayNominal') O1
     on (P.COMPANY_CD = O1.CORPORATION_CODE and P.CRP_PRS_TP = O1.CODE and P.LOCALE_CODE = O1.LOCALE_CODE)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'KbnGrobal') O2
     on (P.COMPANY_CD = O2.CORPORATION_CODE and P.DMS_ABR_TP = O2.CODE and P.LOCALE_CODE = O2.LOCALE_CODE)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'HLD_TRT_TP') O3
     on (PB.COMPANY_CD = O3.CORPORATION_CODE and PB.HLD_TRT_TP = O3.CODE and P.LOCALE_CODE = O3.LOCALE_CODE)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'KbnOrdPayMth') O4
     on (P.COMPANY_CD = O4.CORPORATION_CODE and P.PAY_MTH = O4.CODE and P.LOCALE_CODE = O4.LOCALE_CODE)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'ADVPAY_TP') O6
     on (P.COMPANY_CD = O6.CORPORATION_CODE and P.ADVPAY_TP = O6.CODE and P.LOCALE_CODE = O6.LOCALE_CODE)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'TaxUnit') O7
     on (P.COMPANY_CD = O7.CORPORATION_CODE and P.TAX_UNT = O7.CODE and P.LOCALE_CODE = O7.LOCALE_CODE)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'PAY_APPL_TP') O9
     on (P.COMPANY_CD = O9.CORPORATION_CODE and P.PAY_APPL_TP = O9.CODE and P.LOCALE_CODE = O9.LOCALE_CODE)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'PAY_CMM_OBL_TP') O10
     on (P.COMPANY_CD = O10.CORPORATION_CODE and P.PAY_CMM_OBL_TP = O10.CODE and P.LOCALE_CODE = O10.LOCALE_CODE)
   inner join WFM_USER_V U
     on (
       P.COMPANY_CD = U.CORPORATION_CODE
       and P.SBMTR_CD = U.USER_CODE
       and P.LOCALE_CODE = U.LOCALE_CODE
     )
   left join MWM_LOOKUP L
     on (
       L.CORPORATION_CODE = U.CORPORATION_CODE
       and L.LOOKUP_GROUP_ID = 'USER_LOCATION'
       and L.LOOKUP_ID = U.EXTENDED_INFO_01
       and L.LOCALE_CODE = U.LOCALE_CODE
     )
 where P.COMPANY_CD = ?
   and P.PAY_NO = ?

#支払明細情報取得
PY0031_02: |+
 select /* PY0031_02 */
   D.*
   , case when D.RCVINSP_NO is not null then D.RCVINSP_NO || '-' || lpad(D.RCVINSP_DTL_NO, 4, '0') else null end as DISP_RCVINSP_NO
   , I1.ITMEXPS_NM as ITMEXPS_NM1
   , I2.ITMEXPS_NM as ITMEXPS_NM2
   , nvl(D.PAY_AMT_JPY, D.PAY_AMT_FC) as PAY_AMT
   , case P.MNY_CD when 'JPY' then D.PAY_AMT_JPY_INCTAX else D.PAY_AMT_FC end as PAY_AMT_INCTAX
   , nvl(D.ADVPAY_APLY_AMT_JPY, D.ADVPAY_APLY_AMT_FC) as ADVPAY_APLY_AMT
   , T.TAX_FG_CHG_NM
   , T.TAX_TP
   , T.TAX_RTO
   , nvl(RD.RCVINSP_AMT_JPY, RD.RCVINSP_AMT_FC) as RCVINSP_AMT
   , IT.IPT_NM_FG
   , O1.LABEL as INV_COMPANY_NM
   , IC.SLP_GRP_GL
   , IC.CST_TP
   , BF.BND_FLR_NM
   , case when P.MNY_CD is null or P.MNY_CD = 'JPY' then '1' else '2' end MNY_TP
   , bm.BUMON_NM
 from (
   select P.*, L.LOCALE_CODE from PAY_INF P inner join WFM_LOCALE L on (L.LOCALE_CODE = ?)
 ) P
   inner join PAYDTL_INF D
     on (P.COMPANY_CD = D.COMPANY_CD and P.PAY_NO = D.PAY_NO)
   inner join ITMEXPS_MST I1
     on (D.COMPANY_CD = I1.COMPANY_CD and D.ITMEXPS_CD1 = I1.ITMEXPS_CD)
   inner join ITMEXPS_MST I2
     on (D.COMPANY_CD = I2.COMPANY_CD and D.ITMEXPS_CD2 = I2.ITMEXPS_CD)
   left join V_ITM_MST IT
     on (P.COMPANY_CD = IT.COMPANY_CD and P.ORGNZ_CD = IT.ORGNZ_CD_SRCH and D.ITM_CD = IT.ITM_CD and IT.DLT_FG = '0')
   left join V_TAX_FG_CHG T
     on (D.COMPANY_CD = T.COMPANY_CD and T.MNY_TP = case when P.MNY_CD is null or P.MNY_CD = 'JPY' then '1' else '2' end and D.TAX_SBJ_TP = T.TAX_SBJ_TP and D.TAX_KND_CD = T.TAX_KND_CD and D.TAX_FG_CHG = T.TAX_FG_CHG and trunc(sysdate) between T.VD_DT_S and T.VD_DT_E and P.LOCALE_CODE = T.LOCALE_CODE)
   left join RCVINSPDTL_INF RD
     on (D.COMPANY_CD = RD.COMPANY_CD and D.RCVINSP_NO = RD.RCVINSP_NO and D.RCVINSP_DTL_NO = RD.RCVINSP_DTL_NO)
   left join (select * from MWV_OPTION_ITEM where OPTION_CODE = 'INV_COMPANY_CD') O1
     on (P.COMPANY_CD = O1.CORPORATION_CODE and D.INV_COMPANY_CD = O1.CODE and P.LOCALE_CODE = O1.LOCALE_CODE)
   inner join ITMEXPS1_CHRMST IC
     on (D.COMPANY_CD = IC.COMPANY_CD and D.ITMEXPS_CD1 = IC.ITMEXPS_CD1 and D.ITMEXPS_CD2 = IC.ITMEXPS_CD2 and IC.DLT_FG = '0')
   left join BND_FLR_MST BF
     on (D.COMPANY_CD = BF.COMPANY_CD and D.BND_FLR_CD = BF.BND_FLR_CD)
   left join BUMON_MST bm
     on D.COMPANY_CD = bm.COMPANY_CD
     and D.BUMON_CD = bm.BUMON_CD
     and bm.DLT_FG = '0'
 where P.COMPANY_CD = ?
   and P.PAY_NO = ?
 order by D.PAY_DTL_NO

#振込先銀行口座コード（SuperStream）チェック
PY0031_03: |+
 select /* PY0031_03 */ count(*)
 from PAYEE_BNKACC_MST
 where COMPANY_CD = ?
   and PAYEE_BNKACC_CD = ?
   and to_date(?, 'YYYY/MM/DD') between VD_DT_S and VD_DT_E
   and DLT_FG = '0'
   and PAYEE_BNKACC_CD_SS is not null

#前払金残高の超過チェック
PY0031_04: |+
 select /* PY0031_04 */ AM.*
 from ADVPAY_MAT_INF AM
 where
  AM.COMPANY_CD = ?
  and AM.ADVPAY_NO = ?
  and AM.DLT_FG = '0'

#前払一覧
PY0060_01: |+
 select /* PY0060_01 */
   ${REPLACE}
 from
   (
     select T.*, L.LOCALE_CODE from PAY_INF T
     inner join WFM_LOCALE L on (L.LOCALE_CODE = ?)
   ) P
   left join (
     select * from MWV_OPTION_ITEM
     where OPTION_CODE = 'kbnMny' and DELETE_FLAG = '0'
   ) O1
     on (
       P.COMPANY_CD = O1.CORPORATION_CODE
       and P.MNY_TP = O1.CODE
       and P.LOCALE_CODE = O1.LOCALE_CODE
     )
   left join (
     select * from MWM_LOOKUP
     where LOOKUP_GROUP_ID = 'PAY_STS' and DELETE_FLAG = '0'
   ) L1
     on (
       P.COMPANY_CD = L1.CORPORATION_CODE
       and P.PAY_STS = L1.LOOKUP_ID
       and P.LOCALE_CODE = L1.LOCALE_CODE
     )
 where
   exists (
     select 'x' from (%SUBQUERY%) PS where P.COMPANY_CD = PS.CORPORATION_CODE and P.PAY_NO = PS.APPLICATION_NO
   )
   /* 前払申請以外のレコードを取得 */
   and exists (
     select 'x' from ADVPAY_INF T
     where T.COMPANY_CD = P.COMPANY_CD and T.PAY_NO = P.PAY_NO
   )

#前払一覧のSELECT句
PY0060_02: |+
   P.COMPANY_CD
   , P.PAY_NO
   , P.PAY_STS
   , L1.LOOKUP_NAME as PAY_STS_NM
   , P.PAY_NM
   , P.SPLR_CD
   , P.SPLR_NM_KJ
   , P.SPLR_NM_KN
   , P.PAY_AMT_EXCTAX
   , P.PAY_AMT_INCTAX
   , P.PAY_RQST_DT
   , P.PAY_PLN_DT
   , O1.LABEL as MNY_TP_NM
   , 'SCR0075' as SCREEN_CODE

#申請中の発注申請の存在チェック
PY0060_03: |+
 select /* PY0060_03 */ count(*)
 from WFT_PROCESS
 where CORPORATION_CODE = ?
   and APPLICATION_NO = ?
   and PROCESS_STATUS in ('start', 'wait', 'run')

#申請中の発注申請の存在チェック
PY0060_04: |+
 select max(SPD.SCREEN_PROCESS_ID)
 from MWM_SCREEN S
   inner join MWM_SCREEN_PROCESS_DEF SPD
     on (S.SCREEN_ID = SPD.SCREEN_ID)
 where S.CORPORATION_CODE = ?
   and S.SCREEN_CODE = ?
   and SPD.DELETE_FLAG = '0'
   and trunc(SYSDATE) BETWEEN SPD.VALID_START_DATE and SPD.VALID_END_DATE

#支払Noから前払金情報を取得
PY0060_05: |+
 select /* PY0060_05 */ * from ADVPAY_INF where COMPANY_CD = ? and PAY_NO = ?

#買掛残高
PY0070_01: |+
  select /* PY0070_01 */
    ${REPLACE}
  from
    (
      select
        TRD.COMPANY_CD,
        CMP.CORPORATION_NAME as COMPANY_NM,
        TRD.SPLR_CD,
        TRD.SPLR_NM_KJ,
        ? AS ADD_YM_S,
        ? AS ADD_YM_E,
        ACC.ACC_CD,
        ACC.ACC_NM,
        NVL(BAL.PRV_CRROVR_AMT_JPY,0) AS PRV_BAL_AMT_JPY,
        NVL(JRN.DBT_AMT_JPY,0) AS DBT_AMT_JPY,
        NVL(JRN.CDT_AMT_JPY,0) AS CDT_AMT_JPY,
        NVL(BAL.PRV_CRROVR_AMT_JPY,0)+
          decode(ACC.DC_TP,'D',NVL(JRN.DBT_AMT_JPY,0),NVL(JRN.CDT_AMT_JPY,0))-
            decode(ACC.DC_TP,'D',NVL(JRN.CDT_AMT_JPY,0),NVL(JRN.DBT_AMT_JPY,0)) as NXT_BAL_AMT_JPY,
        NVL(JRN_CNT, 0) AS JRN_CNT
      from
        SPLR_MST TRD
        left join ACC_MST ACC
          on  ACC.COMPANY_CD = TRD.COMPANY_CD
          and ACC.ACC_CD = ?
          and trunc(sysdate) between ACC.VD_DT_S and ACC.VD_DT_E
        left join (
            select
              COMPANY_CD,SPLR_CD,ACC_CD,
              SUM(DECODE(DC_TP,'D',AMT_JPY,0)) AS DBT_AMT_JPY,
              SUM(DECODE(DC_TP,'C',AMT_JPY,0)) AS CDT_AMT_JPY,
              COUNT(1) AS JRN_CNT
            from
              JRN_INF
            where
                DLT_FG = '0'
            and JRNSLP_STS = '0'
            and ACC_CD = ?
            and ACC_BRKDWN_CD = decode(ACC_CD,'1410','30',ACC_BRKDWN_CD)
            and ADD_DT >= ?
            and ADD_DT <  ?
            and ACC_CD in (
                  select I.CODE
                   from MWM_OPTION O
                        inner join MWM_OPTION_ITEM I on I.OPTION_ID = O.OPTION_ID and I.DELETE_FLAG = '0'
                   where O.OPTION_CODE = 'PAYABLE_BALANCE_ACC' and O.DELETE_FLAG = '0'
                )
            group by COMPANY_CD, SPLR_CD, ACC_CD
          ) JRN
          on  JRN.COMPANY_CD = TRD.COMPANY_CD
          and JRN.SPLR_CD = TRD.SPLR_CD
          and JRN.ACC_CD = ACC.ACC_CD
        left join (
            select
              COMPANY_CD,
              ADD_YM,
              ACC_CD,
              SPLR_CD,
              sum(NXT_CRROVR_AMT_FC) as PRV_CRROVR_AMT_FC,
              sum(NXT_CRROVR_AMT_JPY) as PRV_CRROVR_AMT_JPY
            from BAL_INF
            where ACC_BRKDWN_CD = decode(ACC_CD,'1410','30',ACC_BRKDWN_CD)
            group by COMPANY_CD, ADD_YM, ACC_CD, SPLR_CD
          ) BAL
          on  BAL.COMPANY_CD = TRD.COMPANY_CD
          and BAL.ADD_YM = ?
          and BAL.ACC_CD = ACC.ACC_CD
          and BAL.SPLR_CD = TRD.SPLR_CD
        left join WFM_CORPORATION CMP
          on  CMP.CORPORATION_CODE = TRD.COMPANY_CD
      where
        TRD.DLT_FG = '0'
      order by TRD.COMPANY_CD, TRD.SPLR_CD
    )
  where 1 = 1

#買掛残高のSELECT句
PY0070_02: |+
    ROWNUM as ID,
    COMPANY_CD,
    COMPANY_NM,
    SPLR_CD,
    SPLR_NM_KJ,
    ADD_YM_S,
    ADD_YM_E,
    ACC_CD,
    ACC_NM,
    PRV_BAL_AMT_JPY,
    DBT_AMT_JPY,
    CDT_AMT_JPY,
    NXT_BAL_AMT_JPY,
    JRN_CNT

#買掛残高詳細
PY0071_01: |+
  select /* PY0071_01 */
    ${REPLACE}
  from
    JRN_INF JRN
    left join ACC_MST ACC
      on  ACC.COMPANY_CD = JRN.COMPANY_CD
      and ACC.ACC_CD = JRN.ACC_CD
      and ACC.SQNO = JRN.ACC_X
    left join ACC_BRKDWN_MST BRK
      on  BRK.COMPANY_CD = JRN.COMPANY_CD
      and BRK.ACC_CD = JRN.ACC_CD
      and BRK.ACC_BRKDWN_CD = JRN.ACC_BRKDWN_CD
      and BRK.SQNO = JRN.ACC_BRKDWN_X
    left join ACC_MST PAC
      on  PAC.COMPANY_CD = JRN.COMPANY_CD
      and PAC.ACC_CD = JRN.PRTN_ACC_CD
      and PAC.SQNO = JRN.PRTN_ACC_X
    left join ACC_BRKDWN_MST PBR
      on  PBR.COMPANY_CD = JRN.COMPANY_CD
      and PBR.ACC_CD = JRN.PRTN_ACC_CD
      and PBR.ACC_BRKDWN_CD = JRN.PRTN_ACC_BRKDWN_CD
      and PBR.SQNO = JRN.PRTN_ACC_BRKDWN_X
    left join MNY_MST MNY
      on  MNY.COMPANY_CD = JRN.COMPANY_CD
      and MNY.MNY_CD = JRN.MNY_CD
    left join SPLR_MST TRD
      on  TRD.COMPANY_CD = JRN.COMPANY_CD
      and TRD.SPLR_CD = JRN.SPLR_CD
      and TRD.DLT_FG = '0'
      and trunc(JRN.ADD_DT) BETWEEN TRD.VD_DT_S and TRD.VD_DT_E
    left join WFM_CORPORATION CMP
      on  CMP.CORPORATION_CODE = JRN.COMPANY_CD
  where
    JRN.ACC_CD in (
      select I.CODE from MWM_OPTION O inner join MWM_OPTION_ITEM I on I.OPTION_ID = O.OPTION_ID and I.DELETE_FLAG = '0'
       where O.OPTION_CODE = 'PAYABLE_BALANCE_ACC' and O.DELETE_FLAG = '0'
    )
   and JRN.ACC_BRKDWN_CD = decode(JRN.ACC_CD,'1410','30',JRN.ACC_BRKDWN_CD)

#買掛残高詳細のSELECT句
PY0071_02: |+
    ROWNUM as ID,
    JRN.COMPANY_CD,
    CMP.CORPORATION_NAME as COMPANY_NM,
    JRN.JRNSLP_NO,
    JRN.JRNSLP_DTL_NO,
    JRN.MK_SYS,
    JRN.JRN_TP,
    JRN.RB_TP,
    JRN.ADD_DT,
    JRN.DC_TP,
    JRN.ACC_DPT_CD,
    JRN.SPLR_CD,
    TRD.SPLR_NM_KJ,
    JRN.ACC_CD,
    JRN.ACC_X,
    ACC.ACC_NM as ACC_NM,
    JRN.ACC_BRKDWN_CD,
    JRN.ACC_BRKDWN_X,
    BRK.ACC_BRKDWN_NM as ACC_BRKDWN_NM,
    JRN.PRTN_ACC_CD,
    JRN.PRTN_ACC_X,
    PAC.ACC_NM as PRTN_ACC_NM,
    JRN.PRTN_ACC_BRKDWN_CD,
    JRN.PRTN_ACC_BRKDWN_X,
    PBR.ACC_BRKDWN_NM as PRTN_ACC_BRKDWN_NM,
    JRN.MNY_CD,
    decode(JRN.DC_TP,'D',JRN.AMT_FC,0) as DBT_AMT_FC,
    decode(JRN.DC_TP,'D',JRN.AMT_JPY,0) as DBT_AMT_JPY,
    decode(JRN.DC_TP,'C',JRN.AMT_FC,0) as CDT_AMT_FC,
    decode(JRN.DC_TP,'C',JRN.AMT_JPY,0) as CDT_AMT_JPY,
    trim(JRN.ABST1) as ABST1,
    trim(JRN.ABST2) as ABST2,
    trim(JRN.ABST1)||decode(trim(JRN.ABST1),null,'',decode(trim(JRN.ABST2),null,'',chr(10)))||trim(JRN.ABST2) as ABST

#前払残高一覧
PY0080_01: |+
 select /* PY0080_01 */
   ${REPLACE}
 from
   (
     select T.*, L.LOCALE_CODE from ADVPAY_INF T
     inner join WFM_LOCALE L on (L.LOCALE_CODE = ?)
   ) A
   inner join PAY_INF P
     on (
       A.COMPANY_CD = P.COMPANY_CD
       and A.PAY_NO = P.PAY_NO
     )
   left join (
     select * from MWM_LOOKUP
     where LOOKUP_GROUP_ID = 'ADVPAY_STS' and DELETE_FLAG = '0'
   ) L1
     on (
       A.COMPANY_CD = L1.CORPORATION_CODE
       and A.ADVPAY_STS = L1.LOOKUP_ID
       and A.LOCALE_CODE = L1.LOCALE_CODE
     )
   left join MNY_MST_V M
     on (
       A.COMPANY_CD = M.COMPANY_CD
       and A.MNY_CD = M.MNY_CD
       and P.SBMT_DPT_DT between M.VD_DT_S and M.VD_DT_E
     )
 where 1 = 1

#前払残高一覧のSELECT句
PY0080_02: |+
   A.COMPANY_CD
   , A.ADVPAY_NO
   , A.PAY_NO
   , A.ADVPAY_STS
   , L1.LOOKUP_NAME as ADVPAY_STS_NM
   , P.PAY_NM
   , A.SPLR_CD
   , A.SPLR_NM_KJ
   , A.SPLR_NM_KN
   , A.MNY_CD
   , M.MNY_NM
   , case when A.MNY_CD = 'JPY' then A.PAY_AMT_JPY_INCTAX else A.PAY_AMT_FC end PAY_AMT
   , case when A.MNY_CD = 'JPY' then A.PAY_AMT_JPY_INCTAX - A.RMN_AMT_JPY else A.PAY_AMT_FC - A.RMN_AMT_FC end ADVPAY_APLY_AMT
   , case when A.MNY_CD = 'JPY' then A.RMN_AMT_JPY else A.RMN_AMT_FC end RMN_AMT
   , 'SCR0075' as SCREEN_CODE
