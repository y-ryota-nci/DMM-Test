#WF発注情報⇒発注情報を生成
PO0000_01: |+
 merge into /* PO0000_01 */ PURORD_INF O
 using (
  select
   PO.COMPANY_CD, PO.PURORD_NO, '10' as PURORD_STS, PO.PURRQST_NO
   , PO.CNTRCT_NO, PO.PURORD_NM, PO.PURORD_TP
   , PO.SBMTR_CD, PO.SBMT_DPT_CD, PO.SBMT_DPT_NM, PO.SBMT_DPT_DT
   , PO.SPLR_CD, PO.SPLR_NM_KJ, PO.SPLR_NM_KN
   , PO.PURORD_AMT_EXCTAX, PO.PURORD_AMT_INCTAX
   , null as PURORD_RQST_DT, PO.DLV_PLN_DT, PO.PAY_PLN_DT, null as DLV_DT
   , RCVINSP_YM_S, RCVINSP_YM_E, PO.PAY_MTH, PO.PURORD_RQST_CONT
   , PO.DLV_LC, PO.INSP_COMP_DT, null as ABST_IN, null as NTFY_TO
   , PO.SPRT_TP, PO.SPRT_CNT, PO.CMPT_ESTM_TP, PO.SLCT_RSN
   , case PO.MNY_CD when 'JPY' then '1' else '2' end as MNY_TP, PO.MNY_CD, PO.IN_RTO as ADD_RTO
   , PO.STMP_TP, PO.PRD_PURORD_TP, ?  as PRD_PURORD_NO, PO.ORGNZ_CD
   , null LOT_NO, PO.PAY_SITE_CD, PO.PAY_APPL_CD, PO.ADVPAY_TP
   , PO.PURORD_RCPTSHT_TP, PO.PURORD_RCPTSHT_RSN
   , PO.TAX_UNT, PO.TAX_FG, PO.TAX_CD
   , PO.HLDTAX_TP, PO.HLDTAX_RTO, PO.HLDTAX_SBJ_AMT, PO.HLDTAX_AMT
   , PO.BKBND_CHG_TP, PO.MAIL_TP, PO.MAIL_RMK
   , PO.SHT_TO_ZIP_CD, PO.SHT_ADR_PRF_CD, PO.SHT_ADR_PRF
   , PO.SHT_ADR1, PO.SHT_ADR2, PO.SHT_ADR3
   , PO.SHT_PIC_NM, PO.SHT_DPT_NM, PO.SHT_MLADR, PO.SHT_TEL_NO, PO.ADVCST_MRK
   , PO.TAX_SBJ_TP, PO.TAX_KND_CD, PO.TAX_FG_CHG
   , PO.TTLAMT_EXCTAX1, PO.TTLAMT_TAX1, PO.TTLAMT_INCTAX1
   , PO.TTLAMT_EXCTAX2, PO.TTLAMT_TAX2, PO.TTLAMT_INCTAX2
   , PO.TTLAMT_EXCTAX3, PO.TTLAMT_TAX3, PO.TTLAMT_INCTAX3
   , '0' as DLT_FG
   , ? as CORPORATION_CODE_CREATED, ? as USER_CODE_CREATED, ? as IP_CREATED, sysdate as TIMESTAMP_CREATED
   , ? as CORPORATION_CODE_UPDATED, ? as USER_CODE_UPDATED, ? as IP_UPDATED, sysdate as TIMESTAMP_UPDATED
  from MWT_PURCHASE_ORDER PO
  where RUNTIME_ID = ?
 ) X
  on (O.COMPANY_CD = X.COMPANY_CD and O.PURORD_NO = X.PURORD_NO)
 when not matched then
  insert (
   COMPANY_CD, PURORD_NO, PURORD_STS, PURRQST_NO
   , CNTRCT_NO, PURORD_NM, PURORD_TP
   , SBMTR_CD, SBMT_DPT_CD, SBMT_DPT_NM, SBMT_DPT_DT
   , SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN
   , PURORD_AMT_EXCTAX, PURORD_AMT_INCTAX
   , PURORD_AMT_FC_EXCTAX, PURORD_AMT_FC_INCTAX
   , PURORD_RQST_DT, DLV_PLN_DT, PAY_PLN_DT, DLV_DT
   , RCVINSP_YM_S, RCVINSP_YM_E
   , PAY_MTH, PURORD_RQST_CONT, DLV_LC, INSP_COMP_DT
   , ABST_IN, NTFY_TO, SPRT_TP, SPRT_CNT, CMPT_ESTM_TP
   , SLCT_RSN, MNY_TP, MNY_CD, ADD_RTO
   , STMP_TP, PRD_PURORD_TP, PRD_PURORD_NO, ORGNZ_CD
   , LOT_NO, PAY_SITE_CD, PAY_APPL_CD, ADVPAY_TP
   , PURORD_RCPTSHT_TP, PURORD_RCPTSHT_RSN
   , TAX_UNT, TAX_FG, TAX_CD
   , HLDTAX_TP, HLDTAX_RTO, HLDTAX_SBJ_AMT, HLDTAX_AMT
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK
   , SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF
   , SHT_ADR1, SHT_ADR2, SHT_ADR3
   , SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO, ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , TTLAMT_EXCTAX1, TTLAMT_TAX1, TTLAMT_INCTAX1
   , TTLAMT_EXCTAX2, TTLAMT_TAX2, TTLAMT_INCTAX2
   , TTLAMT_EXCTAX3, TTLAMT_TAX3, TTLAMT_INCTAX3
   , TTLAMT_FC_EXCTAX1, TTLAMT_FC_TAX1, TTLAMT_FC_INCTAX1
   , TTLAMT_FC_EXCTAX3, TTLAMT_FC_TAX3, TTLAMT_FC_INCTAX3
   , DLT_FG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED
  )
  values (
   X.COMPANY_CD, X.PURORD_NO, X.PURORD_STS, X.PURRQST_NO
   , X.CNTRCT_NO, X.PURORD_NM, X.PURORD_TP
   , X.SBMTR_CD, X.SBMT_DPT_CD, X.SBMT_DPT_NM, X.SBMT_DPT_DT
   , X.SPLR_CD, X.SPLR_NM_KJ, X.SPLR_NM_KN
   , decode(X.MNY_CD, 'JPY', X.PURORD_AMT_EXCTAX, null), decode(X.MNY_CD, 'JPY', X.PURORD_AMT_INCTAX, null)
   , decode(X.MNY_CD, 'JPY', null, X.PURORD_AMT_EXCTAX), decode(X.MNY_CD, 'JPY', null, X.PURORD_AMT_INCTAX)
   , X.PURORD_RQST_DT, X.DLV_PLN_DT, X.PAY_PLN_DT, X.DLV_DT
   , X.RCVINSP_YM_S, X.RCVINSP_YM_E
   , X.PAY_MTH, X.PURORD_RQST_CONT, X.DLV_LC, X.INSP_COMP_DT
   , X.ABST_IN, X.NTFY_TO, X.SPRT_TP, X.SPRT_CNT, X.CMPT_ESTM_TP
   , X.SLCT_RSN, X.MNY_TP, X.MNY_CD, X.ADD_RTO
   , X.STMP_TP, X.PRD_PURORD_TP, X.PRD_PURORD_NO, X.ORGNZ_CD
   , X.LOT_NO, X.PAY_SITE_CD, X.PAY_APPL_CD, X.ADVPAY_TP
   , X.PURORD_RCPTSHT_TP, X.PURORD_RCPTSHT_RSN
   , X.TAX_UNT, X.TAX_FG, X.TAX_CD
   , X.HLDTAX_TP, X.HLDTAX_RTO, X.HLDTAX_SBJ_AMT, X.HLDTAX_AMT
   , X.BKBND_CHG_TP, X.MAIL_TP, X.MAIL_RMK
   , X.SHT_TO_ZIP_CD, X.SHT_ADR_PRF_CD, X.SHT_ADR_PRF
   , X.SHT_ADR1, X.SHT_ADR2, X.SHT_ADR3
   , X.SHT_PIC_NM, X.SHT_DPT_NM, X.SHT_MLADR, X.SHT_TEL_NO, X.ADVCST_MRK
   , X.TAX_SBJ_TP, X.TAX_KND_CD, X.TAX_FG_CHG
   , decode(X.MNY_CD, 'JPY', X.TTLAMT_EXCTAX1, null), decode(X.MNY_CD, 'JPY', X.TTLAMT_TAX1, null), decode(X.MNY_CD, 'JPY', X.TTLAMT_INCTAX1, null)
   , decode(X.MNY_CD, 'JPY', X.TTLAMT_EXCTAX2, null), decode(X.MNY_CD, 'JPY', X.TTLAMT_TAX2, null), decode(X.MNY_CD, 'JPY', X.TTLAMT_INCTAX2, null)
   , decode(X.MNY_CD, 'JPY', X.TTLAMT_EXCTAX3, null), decode(X.MNY_CD, 'JPY', X.TTLAMT_TAX3, null), decode(X.MNY_CD, 'JPY', X.TTLAMT_INCTAX3, null)
   , decode(X.MNY_CD, 'JPY', null, X.TTLAMT_EXCTAX1), decode(X.MNY_CD, 'JPY', null, X.TTLAMT_TAX1), decode(X.MNY_CD, 'JPY', null, X.TTLAMT_INCTAX1)
   , decode(X.MNY_CD, 'JPY', null, X.TTLAMT_EXCTAX3), decode(X.MNY_CD, 'JPY', null, X.TTLAMT_TAX3), decode(X.MNY_CD, 'JPY', null, X.TTLAMT_INCTAX3)
   , X.DLT_FG
   , X.CORPORATION_CODE_CREATED, X.USER_CODE_CREATED, X.IP_CREATED, X.TIMESTAMP_CREATED
   , X.CORPORATION_CODE_UPDATED, X.USER_CODE_UPDATED, X.IP_UPDATED, X.TIMESTAMP_UPDATED
  )
 when matched then
  update set
   PURORD_STS = X.PURORD_STS
   , PURRQST_NO = X.PURRQST_NO
   , CNTRCT_NO = X.CNTRCT_NO
   , PURORD_NM = X.PURORD_NM
   , PURORD_TP = X.PURORD_TP
   , SBMTR_CD = X.SBMTR_CD
   , SBMT_DPT_CD = X.SBMT_DPT_CD
   , SBMT_DPT_NM = X.SBMT_DPT_NM
   , SBMT_DPT_DT = X.SBMT_DPT_DT
   , SPLR_CD = X.SPLR_CD
   , SPLR_NM_KJ = X.SPLR_NM_KJ
   , SPLR_NM_KN = X.SPLR_NM_KN
   , PURORD_AMT_EXCTAX = decode(X.MNY_CD, 'JPY', X.PURORD_AMT_EXCTAX, null)
   , PURORD_AMT_INCTAX = decode(X.MNY_CD, 'JPY', X.PURORD_AMT_INCTAX, null)
   , PURORD_AMT_FC_EXCTAX = decode(X.MNY_CD, 'JPY', null, X.PURORD_AMT_EXCTAX)
   , PURORD_AMT_FC_INCTAX = decode(X.MNY_CD, 'JPY', null, X.PURORD_AMT_INCTAX)
   , PURORD_RQST_DT = X.PURORD_RQST_DT
   , DLV_PLN_DT = X.DLV_PLN_DT
   , PAY_PLN_DT = X.PAY_PLN_DT
   , DLV_DT = X.DLV_DT
   , RCVINSP_YM_S = X.RCVINSP_YM_S
   , RCVINSP_YM_E = X.RCVINSP_YM_E
   , PAY_MTH = X.PAY_MTH
   , PURORD_RQST_CONT = X.PURORD_RQST_CONT
   , DLV_LC = X.DLV_LC
   , INSP_COMP_DT = X.INSP_COMP_DT
   , ABST_IN = X.ABST_IN
   , NTFY_TO = X.NTFY_TO
   , SPRT_TP = X.SPRT_TP
   , SPRT_CNT = X.SPRT_CNT
   , CMPT_ESTM_TP = X.CMPT_ESTM_TP
   , SLCT_RSN = X.SLCT_RSN
   , MNY_TP = X.MNY_TP
   , MNY_CD = X.MNY_CD
   , ADD_RTO = X.ADD_RTO
   , STMP_TP = X.STMP_TP
   , PRD_PURORD_TP = X.PRD_PURORD_TP
   , PRD_PURORD_NO = X.PRD_PURORD_NO
   , ORGNZ_CD = X.ORGNZ_CD
   , LOT_NO = X.LOT_NO
   , PAY_SITE_CD = X.PAY_SITE_CD
   , PAY_APPL_CD = X.PAY_APPL_CD
   , ADVPAY_TP = X.ADVPAY_TP
   , PURORD_RCPTSHT_TP = X.PURORD_RCPTSHT_TP
   , PURORD_RCPTSHT_RSN = X.PURORD_RCPTSHT_RSN
   , TAX_UNT = X.TAX_UNT
   , TAX_FG = X.TAX_FG
   , TAX_CD = X.TAX_CD
   , HLDTAX_TP = X.HLDTAX_TP
   , HLDTAX_RTO = X.HLDTAX_RTO
   , HLDTAX_SBJ_AMT = X.HLDTAX_SBJ_AMT
   , HLDTAX_AMT = X.HLDTAX_AMT
   , BKBND_CHG_TP = X.BKBND_CHG_TP
   , MAIL_TP = X.MAIL_TP
   , MAIL_RMK = X.MAIL_RMK
   , SHT_TO_ZIP_CD = X.SHT_TO_ZIP_CD
   , SHT_ADR_PRF_CD = X.SHT_ADR_PRF_CD
   , SHT_ADR_PRF = X.SHT_ADR_PRF
   , SHT_ADR1 = X.SHT_ADR1
   , SHT_ADR2 = X.SHT_ADR2
   , SHT_ADR3 = X.SHT_ADR3
   , SHT_PIC_NM = X.SHT_PIC_NM
   , SHT_DPT_NM = X.SHT_DPT_NM
   , SHT_MLADR = X.SHT_MLADR
   , SHT_TEL_NO = X.SHT_TEL_NO
   , ADVCST_MRK = X.ADVCST_MRK
   , TAX_SBJ_TP = X.TAX_SBJ_TP
   , TAX_KND_CD = X.TAX_KND_CD
   , TAX_FG_CHG = X.TAX_FG_CHG
   , TTLAMT_EXCTAX1 = decode(X.MNY_CD, 'JPY', X.TTLAMT_EXCTAX1, null)
   , TTLAMT_TAX1 = decode(X.MNY_CD, 'JPY', X.TTLAMT_TAX1, null)
   , TTLAMT_INCTAX1 = decode(X.MNY_CD, 'JPY', X.TTLAMT_INCTAX1, null)
   , TTLAMT_EXCTAX2 = decode(X.MNY_CD, 'JPY', X.TTLAMT_EXCTAX2, null)
   , TTLAMT_TAX2 = decode(X.MNY_CD, 'JPY', X.TTLAMT_TAX2, null)
   , TTLAMT_INCTAX2 = decode(X.MNY_CD, 'JPY', X.TTLAMT_INCTAX2, null)
   , TTLAMT_EXCTAX3 = decode(X.MNY_CD, 'JPY', X.TTLAMT_EXCTAX3, null)
   , TTLAMT_TAX3 = decode(X.MNY_CD, 'JPY', X.TTLAMT_TAX3, null)
   , TTLAMT_INCTAX3 = decode(X.MNY_CD, 'JPY', X.TTLAMT_INCTAX3, null)
   , TTLAMT_FC_EXCTAX1 = decode(X.MNY_CD, 'JPY', null, X.TTLAMT_EXCTAX1)
   , TTLAMT_FC_TAX1 = decode(X.MNY_CD, 'JPY', null, X.TTLAMT_TAX1)
   , TTLAMT_FC_INCTAX1 = decode(X.MNY_CD, 'JPY', null, X.TTLAMT_INCTAX1)
   , TTLAMT_FC_EXCTAX3 = decode(X.MNY_CD, 'JPY', null, X.TTLAMT_EXCTAX3)
   , TTLAMT_FC_TAX3 = decode(X.MNY_CD, 'JPY', null, X.TTLAMT_TAX3)
   , TTLAMT_FC_INCTAX3 = decode(X.MNY_CD, 'JPY', null, X.TTLAMT_INCTAX3)
   , DLT_FG = X.DLT_FG
   , CORPORATION_CODE_UPDATED = X.CORPORATION_CODE_UPDATED
   , USER_CODE_UPDATED = X.USER_CODE_UPDATED
   , IP_UPDATED = X.IP_UPDATED
   , TIMESTAMP_UPDATED = X.TIMESTAMP_UPDATED

#WF発注明細情報⇒発注明細情報を生成
PO0000_02: |+
 insert into /* PO0000_02 */ PURORDDTL_INF(
  COMPANY_CD, PURORD_NO, PURORD_DTL_NO, ORGNZ_CD, ITMEXPS_CD1, ITMEXPS_CD2
  , ITM_CD, ITM_NM, BUMON_CD, ANLYS_CD, ASST_TP, PURORD_QNT, RCVINSP_QNT
  , PURORD_UC_JPY, PURORD_AMT_JPY, PURORD_AMT_JPY_INCTAX, MNY_CD, PURORD_UC_FC, PURORD_AMT_FC
  , TAX_FG, TAX_CD, PURORD_SMRY, APPL_CONT, CTRCT_TP, BRKDWN_TP
  , APPL_PRD_S_DT, APPL_PRD_E_DT, INV_COMPANY_CD
  , DVC_CD, BND_FLR_CD, FRT_PNT_CD, MSR_TOOL_CD, MDA_ID
  , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
  , DLT_FG
  , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
  , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED
 )
 select
  D.COMPANY_CD, ? as PURORD_NO, ? as PURORD_DTL_NO, D.ORGNZ_CD, D.ITMEXPS_CD1, D.ITMEXPS_CD2
  , D.ITM_CD, D.ITM_NM, D.BUMON_CD, D.ANLYS_CD, D.ASST_TP, null as PURORD_QNT, null as RCVINSP_QNT
  , null as PURORD_UC_JPY, ? as PURORD_AMT_JPY, ? as PURORD_AMT_INTAX, ? as MNY_CD, null as PURORD_UC_FC, ? as PURORD_AMT_FC
  , D.TAX_FG, D.TAX_CD, D.PURORD_SMRY, null as APPL_CONT, null as CTRCT_TP, null as BRKDWN_TP
  , null as APPL_PRD_S_DT, null as APPL_PRD_E_DT, D.INV_COMPANY_CD
  , D.DVC_CD, D.BND_FLR_CD, D.FRT_PNT_CD, D.MSR_TOOL_CD, D.MDA_ID
  , D.TAX_SBJ_TP, D.TAX_KND_CD, D.TAX_FG_CHG
  , '0' as DLT_FG
  , ?, ?, ?, sysdate as TIMESTAMP_CREATED
  , ?, ?, ?, sysdate as TIMESTAMP_UPDATED
 from MWT_PURCHASE_ORDER_DETAIL D
 where D.RUNTIME_ID = ?

#WF発注（定期）情報⇒定期発注マスタを生成
PO0000_03: |+
 insert into /* PO0000_03 */ PRD_PURORD_MST(
  COMPANY_CD,PRD_PURORD_NO,PURORD_NO,SBMTR_CD,SBMT_DPT_CD,SBMT_DPT_NM,PRD_PAY_TP
  ,PRD_PAY_DAY,PRD_PAY_MTH,PAYEE_BNKACC_CD,ML_ADD_TP,PAY_START_TIME,PAY_END_TIME
  ,PRD_PURORDR_CD,PRD_PURORDR_DPT_CD,PRD_PURORDR_DPT_NM,PAY_SITE_CD,DLT_FG
  ,CORPORATION_CODE_CREATED,USER_CODE_CREATED,IP_CREATED,TIMESTAMP_CREATED
  ,CORPORATION_CODE_UPDATED,USER_CODE_UPDATED,IP_UPDATED,TIMESTAMP_UPDATED
 )
 select
  T.CORPORATION_CODE,?,P.APPLICATION_NO,P.USER_CODE_PROXY_START,P.ORGANIZATION_CODE_START
  ,P.ORGANIZATION_NAME_START,T.PRD_PAY_TP,null as PRD_PAY_DAY,null as PRD_PAY_MTH,null as PAYEE_BNKACC_CD
  ,null as ML_ADD_TP,replace(T.PAY_START_TIME, '/', ''), replace(T.PAY_END_TIME, '/', '')
  ,H.SBMTR_CD,H.SBMT_DPT_CD
  ,H.SBMT_DPT_NM,null as PAY_SITE_CD,'0',?,?,?,sysdate,?,?,?,sysdate
 from MWT_PURCHASE_ORDER H
  inner join MWT_PRD_PURORD T
   on T.CORPORATION_CODE = H.CORPORATION_CODE and T.PROCESS_ID = H.PROCESS_ID
  inner join WFT_PROCESS P
   on P.CORPORATION_CODE = T.CORPORATION_CODE and P.PROCESS_ID = T.PROCESS_ID
 where
  T.CORPORATION_CODE = ? and T.PROCESS_ID = ?

#WF発注（定期）情報⇒定期発注予定マスタを生成
PO0000_05: |+
 insert into /* PO0000_05 */ PRD_PURORD_PLN_MST(
  COMPANY_CD, PRD_PURORD_NO, PURORD_NO, SQNO, PRD_PAY_CNT, PRD_PAY_DT, PRD_IOV_DT_P
  , PRD_IOV_DT_R, PRD_PAY_STS, DLT_FG, CORPORATION_CODE_CREATED, USER_CODE_CREATED
  , IP_CREATED, TIMESTAMP_CREATED, CORPORATION_CODE_UPDATED, USER_CODE_UPDATED
  , IP_UPDATED, TIMESTAMP_UPDATED
 )
 select
  D.CORPORATION_CODE, ?, H.PURORD_NO, rownum, rownum, D.PRD_PAY_DT, D.PRD_IOV_DT_P
  , D.PRD_IOV_DT_R, D.PRD_PAY_STS, '0', ?, ?, ?, sysdate, ?, ?, ?, sysdate
 from
  MWT_PURCHASE_ORDER H
   inner join MWT_PRD_PURORD_DETAIL D
    on D.CORPORATION_CODE = H.CORPORATION_CODE and D.PROCESS_ID = H.PROCESS_ID
 where
  D.CORPORATION_CODE = ? and D.PROCESS_ID = ? and D.PRD_PAY_DT is not null
 order by
  D.PARENT_RUNTIME_ID, D.SORT_ORDER

#定期発注NoをWF発注情報へ反映
PO0000_06: |+
 update /* PO0000_06 */ MWT_PRD_PURORD
 set PRD_PURORD_NO = ?, CORPORATION_CODE_UPDATED = ?, USER_CODE_UPDATED = ?, TIMESTAMP_UPDATED = sysdate
 where CORPORATION_CODE = ? and PROCESS_ID = ?

#自動起票済みの定期発注予定マスタを抽出
PO0000_07: |+
 select /* PO0000_07 */ *
 from PRD_PURORD_PLN_MST
 where COMPANY_CD = ? and PRD_PURORD_NO = ? and DLT_FG = '0' and PRD_PAY_STS = '20' and PRD_PAY_DT is not null
 order by PRD_PAY_DT

#発注Noに紐付く発注明細情報を削除
PO0000_08: |+
 delete /* PO0000_08 */ from PURORDDTL_INF where COMPANY_CD = ? and PURORD_NO = ?

#発注Noに紐付く定期発注マスタを論理削除
PO0000_09: |+
 update PRD_PURORD_MST /* PO0000_09 */
 set DLT_FG = '1', CORPORATION_CODE_UPDATED = ?, USER_CODE_UPDATED = ?, IP_UPDATED = ?, TIMESTAMP_UPDATED = systimestamp
 where COMPANY_CD = ? and PURORD_NO = ? and DLT_FG = '0'

#発注No(=申請番号)に紐付くプロセスインスタンスから文書IDを抽出
PO0000_10: |+
 select /* PO0000_10 */ DOC_ID
 from WFT_PROCESS
 where CORPORATION_CODE = ?
   and APPLICATION_NO = ?
   and PROCESS_STATUS = 'end'
   and DOC_ID is not null
 order by
   PROCESS_ID desc

#発注明細に紐付く検収明細情報を抽出
PO0000_11: |+
 select /* PO0000_11 */ D.*
 from RCVINSPDTL_INF D
 where D.COMPANY_CD = ? and D.PURORD_NO = ? and D.PURORD_DTL_NO = ?

#発注明細に紐付く支払明細情報を抽出
PO0000_12: |+
 select /* PO0000_12 */ P.*
 from RCVINSPDTL_INF R
  inner join PAYDTL_INF P
   on P.COMPANY_CD = R.COMPANY_CD and P.RCVINSP_NO = R.RCVINSP_NO and P.RCVINSP_DTL_NO = R.RCVINSP_DTL_NO
 where
  R.COMPANY_CD = ? and R.PURORD_NO = ? and R.PURORD_DTL_NO = ?

#発注明細情報を抽出
PO0000_13: |+
 select /* PO0000_13 */ D.*
 from PURORDDTL_INF D
 where D.COMPANY_CD = ? and D.PURORD_NO = ?

#取引先を抽出
PO0000_14: |+
 select /* PO0000_14 */ * from SPLR_MST
 where COMPANY_CD = ? and SPLR_CD = ? and trunc(?) between VD_DT_S and VD_DT_E and DLT_FG = '0'
 order by COMPANY_CD, SPLR_CD, SQNO desc

#未自動起票の定期発注予定マスタを削除
PO0000_15: |+
 delete /* PO0000_15 */ from PRD_PURORD_PLN_MST
 where COMPANY_CD = ? and PRD_PURORD_NO = ? and PRD_PAY_STS = '10'

#定期発注予定マスタの連番の最大値
PO0000_16: |+
 select /* PO0000_16 */ max(SQNO) from PRD_PURORD_PLN_MST where COMPANY_CD = ? and PRD_PURORD_NO = ?

#定期発注予定マスタの定期支払回数の最大値
PO0000_17: |+
 select /* PO0000_17 */ max(PRD_PAY_CNT) from PRD_PURORD_PLN_MST where COMPANY_CD = ? and PRD_PURORD_NO = ?

#発注一覧
PO0010_01: |+
 select /* PO0010_01 */
  ${REPLACE}
 from
  PURORD_INF O
  inner join WFM_LOCALE L
   on L.LOCALE_CODE = ?
  left join MWM_LOOKUP L1
   on L1.CORPORATION_CODE = O.COMPANY_CD
   and L1.LOOKUP_GROUP_ID = 'PURORD_STS'
   and L1.LOOKUP_ID = O.PURORD_STS
   and L1.LOCALE_CODE = L.LOCALE_CODE
   and L1.DELETE_FLAG = '0'
  left join MWM_OPTION OP
   on OP.OPTION_CODE = 'KbnOrder'
   and O.COMPANY_CD = OP.CORPORATION_CODE
   and OP.DELETE_FLAG = '0'
  left join MWM_OPTION_ITEM OPI
   on OPI.OPTION_ID = OP.OPTION_ID
   and OPI.CODE = O.PURORD_TP
   and OPI.DELETE_FLAG = '0'
 where
   exists (
     select 'x' from (%SUBQUERY%) PS where O.COMPANY_CD = PS.CORPORATION_CODE and O.PURORD_NO = PS.APPLICATION_NO
   )
   and O.PURORD_STS >= '10'

#発注一覧のSELECT句
PO0010_02: |+
  O.COMPANY_CD, O.PURORD_NO, O.PURORD_STS, L1.LOOKUP_NAME as PURORD_STS_NM
  , O.PURORD_NM, O.SPLR_CD, O.SPLR_NM_KJ, O.SPLR_NM_KN
  , O.PURORD_TP, O.PRD_PURORD_TP, OPI.LABEL as PURORD_TP_NM, O.PURORD_RQST_DT, O.DLV_DT, O.DLV_PLN_DT
  , O.PAY_PLN_DT, O.INSP_COMP_DT
  , decode(O.MNY_CD, 'JPY', O.PURORD_AMT_EXCTAX, O.PURORD_AMT_FC_EXCTAX) as PURORD_AMT_EXCTAX
  , decode(O.MNY_CD, 'JPY', O.PURORD_AMT_INCTAX, O.PURORD_AMT_FC_INCTAX) as PURORD_AMT_INCTAX
  , case O.PURORD_TP when '2' then 'SCR0057' when '3' then 'SCR0077' else 'SCR0038' end as SCREEN_CODE


#発注ステータスの更新（10:発注済のみ→20:検収済）
PO0010_03: |+
  update /* PO0010_03 */ PURORD_INF
  set
    PURORD_STS = '20'
    , CORPORATION_CODE_UPDATED = ?
    , USER_CODE_UPDATED = ?
    , IP_UPDATED = ?
    , TIMESTAMP_UPDATED = ?
  where
    COMPANY_CD = ?
    and PURORD_NO = ?
    and PURORD_STS = '10'

#画面プロセスID取得
PO0010_04: |+
   select /* PO0010_04 */
     max(SCREEN_PROCESS_ID)
   from MWM_SCREEN_PROCESS_DEF
   where CORPORATION_CODE = ?
   and PROCESS_DEF_CODE = ?
   and PROCESS_DEF_DETAIL_CODE = ?
   and DELETE_FLAG = '0'
   and trunc(SYSDATE) BETWEEN VALID_START_DATE and VALID_END_DATE

#申請中の検収申請の存在チェック
PO0010_05: |+
 select /* PO0010_05 */
   count(*)
 from
   MWT_RCVINSP_DETAIL D
   inner join WFT_PROCESS P
     on P.CORPORATION_CODE = D.CORPORATION_CODE
     and P.PROCESS_ID = D.PROCESS_ID
     and P.PROCESS_STATUS in ('start', 'wait', 'run')
 where
   D.CORPORATION_CODE = ?
   and D.PURORD_NO = ?

#申請中の発注申請の存在チェック
PO0010_06: |+
 select /* PO0010_06 */ count(*)
 from WFT_PROCESS
 where CORPORATION_CODE = ?
   and APPLICATION_NO = ?
   and PROCESS_STATUS in ('start', 'wait', 'run')

#画面プロセス定義
PO0010_07: |+
 select /* PO0010_07 */ * from MWM_SCREEN_PROCESS_DEF where CORPORATION_CODE = ? and SCREEN_PROCESS_CODE = ?

#変更申請_通常発注のみ申請可（削除予定処理）
PO0010_99: |+
 select /* PO0010_99 */
   count(0)
 from
   MWT_PURCHASE_ORDER
 where
   CORPORATION_CODE = ?
   AND PURORD_NO = ?

#UserDataLoaderService用の発注データ抽出
PO0011_01: |+
 select /* PO0011_01 */
  P.*,
  decode(P.MNY_CD, 'JPY', P.PURORD_AMT_EXCTAX, P.PURORD_AMT_FC_EXCTAX) as PURORD_AMT_EXCTAX,
  decode(P.MNY_CD, 'JPY', P.PURORD_AMT_INCTAX, P.PURORD_AMT_FC_INCTAX) as PURORD_AMT_INCTAX,
  P.ADD_RTO as IN_RTO,
  PSM.PAY_SITE_NM,
  PAM.PAY_APPL_NM,
  TM.TAX_NM, TM.TAX_RTO, TM.TAX_TP, TM.TAX_FG_CHG_NM,
  H.HLDTAX_NM,
  H.HLDTAX_FG,
  H.HLDTAX_RTO2,
  M.RDXPNT_GDT, M.MNY_NM,
  U.USER_NAME as SBMTR_NM, U.EXTENDED_INFO_01 as SBMTR_ADDR_CD,
  LK1.LOOKUP_NAME as SBMTR_ADDR,
  S.CRP_PRS_TP, S.DMS_ABR_TP,
  (decode(P.MNY_CD, 'JPY', P.PURORD_AMT_INCTAX, P.PURORD_AMT_FC_INCTAX) - nvl(P.HLDTAX_AMT, 0)) as PAY_AMT,
  decode(P.PRD_PURORD_TP, '1', '1', '2', '1', '0') as PURORD_RESERVE_FG,
  decode(P.MNY_CD, 'JPY', nvl(P.PURORD_AMT_INCTAX, 0) - nvl(P.PURORD_AMT_EXCTAX, 0), nvl(P.PURORD_AMT_FC_INCTAX, 0) - nvl(P.PURORD_AMT_FC_EXCTAX, 0)) as PURORD_AMT_TAX,
  case when P.TAX_UNT = '3' and exists (select 'x' from PURORDDTL_INF D where D.COMPANY_CD = P.COMPANY_CD and D.PURORD_NO = P.PURORD_NO and D.TAX_FG_CHG = '4') then '1' else '0' end TTLAMT_EXCTAX1_FG,
  case when P.TAX_UNT = '3' and exists (select 'x' from PURORDDTL_INF D where D.COMPANY_CD = P.COMPANY_CD and D.PURORD_NO = P.PURORD_NO and D.TAX_FG_CHG = '5') then '1' else '0' end TTLAMT_EXCTAX2_FG,
  case when P.TAX_UNT = '3' and exists (select 'x' from PURORDDTL_INF D where D.COMPANY_CD = P.COMPANY_CD and D.PURORD_NO = P.PURORD_NO and D.TAX_FG_CHG = '6') then '1' else '0' end TTLAMT_EXCTAX3_FG
 from
   PURORD_INF P
   inner join WFM_LOCALE L
    on L.LOCALE_CODE = ?
   left join PAY_SITE_MST PSM
    on PSM.COMPANY_CD = P.COMPANY_CD
    and PSM.PAY_SITE_CD = P.PAY_SITE_CD
   left join PAY_APPL_MST PAM
    on PAM.COMPANY_CD = P.COMPANY_CD
    and PAM.PAY_APPL_CD = P.PAY_APPL_CD
   left join V_TAX_FG_CHG TM
    on TM.COMPANY_CD = P.COMPANY_CD
    and TM.MNY_TP = case when P.MNY_CD is null or P.MNY_CD = 'JPY' then '1' else '2' end
    and TM.TAX_SBJ_TP = P.TAX_SBJ_TP
    and TM.TAX_KND_CD = P.TAX_KND_CD
    and TM.TAX_FG_CHG = P.TAX_FG_CHG
    and TM.LOCALE_CODE = 'ja'
    and trunc(sysdate) between TM.VD_DT_S and TM.VD_DT_E
   left join V_HLDTAX_MST H
     on H.COMPANY_CD = P.COMPANY_CD
     and H.HLDTAX_TP = P.HLDTAX_TP
     and H.DLT_FG = '0'
     and trunc(sysdate) between H.VD_DT_S and H.VD_DT_E
   left join MNY_MST M
    on M.COMPANY_CD = P.COMPANY_CD
    and M.MNY_CD = P.MNY_CD
    and M.DLT_FG = '0'
   left join WFM_USER_V U
    on U.CORPORATION_CODE = P.COMPANY_CD
    and U.USER_CODE = SBMTR_CD
    and U.DELETE_FLAG = '0'
    and U.LOCALE_CODE = L.LOCALE_CODE
   left join MWM_LOOKUP LK1
    on LK1.CORPORATION_CODE = U.CORPORATION_CODE
    and LK1.LOOKUP_GROUP_ID = 'USER_LOCATION'
    and LK1.LOOKUP_ID = U.EXTENDED_INFO_01
    and LK1.LOCALE_CODE = L.LOCALE_CODE
    and LK1.DELETE_FLAG = '0'
   left join SPLR_MST S
    on S.COMPANY_CD = P.COMPANY_CD
    and S.SPLR_CD = P.SPLR_CD
    and trunc(sysdate) between S.VD_DT_S and S.VD_DT_E
    and S.DLT_FG = '0'
 where
   P.COMPANY_CD = ?
   and P.PURORD_NO = ?

#発注明細情報
PO0011_02: |+
 select /* PO0011_02 */
   D.COMPANY_CD
   , D.PURORD_NO
   , D.PURORD_DTL_NO
   , D.ORGNZ_CD
   , D.ITMEXPS_CD1
   , I1.ITMEXPS_NM as ITMEXPS_NM1
   , D.ITMEXPS_CD2
   , I2.ITMEXPS_NM as ITMEXPS_NM2
   , D.ITM_CD
   , D.ITM_NM
   , D.BUMON_CD
   , bm.BUMON_NM
   , D.ANLYS_CD
   , nvl(D.PURORD_AMT_JPY, D.PURORD_AMT_FC) as PURORD_AMT
   , case T.TAX_TP
       when '2' then nvl(D.PURORD_AMT_JPY, D.PURORD_AMT_FC) / (100 + T.TAX_RTO) * 100
       else nvl(D.PURORD_AMT_JPY, D.PURORD_AMT_FC)
     end as PURORD_AMT_OUTTAX
   , nvl(D.PURORD_AMT_JPY_INCTAX, D.PURORD_AMT_FC) as PURORD_AMT_INTAX
   , D.MNY_CD
   , D.TAX_FG_CHG
   , T.TAX_FG_CHG_NM
   , D.TAX_CD
   , T.TAX_TP
   , T.TAX_RTO
   , D.TAX_SBJ_TP
   , D.TAX_KND_CD
   , D.PURORD_SMRY
   , IT.IPT_NM_FG
   , D.INV_COMPANY_CD
   , IC1.ASST_TP, IC1.SLP_GRP_GL, IC1.CST_TP
   , D.DVC_CD, D.BND_FLR_CD, D.FRT_PNT_CD, D.MSR_TOOL_CD, D.MDA_ID
   , B.BND_FLR_NM
   , case when P.MNY_CD is null or P.MNY_CD = 'JPY' then '1' else '2' end MNY_TP
   , D.DLT_FG
 from
   PURORD_INF P
   inner join PURORDDTL_INF D
     on P.COMPANY_CD = D.COMPANY_CD
     and P.PURORD_NO = D.PURORD_NO
   inner join ITMEXPS_MST I1
     on I1.COMPANY_CD = P.COMPANY_CD
     and I1.ITMEXPS_CD = D.ITMEXPS_CD1
   inner join ITMEXPS_MST I2
     on I2.COMPANY_CD = P.COMPANY_CD
     and I2.ITMEXPS_CD = D.ITMEXPS_CD2
   left join V_ITM_MST IT
     on IT.COMPANY_CD = P.COMPANY_CD
     and IT.ORGNZ_CD_SRCH = P.ORGNZ_CD
     and IT.ITM_CD = D.ITM_CD
     and IT.DLT_FG = '0'
    left join V_TAX_FG_CHG T
      on T.COMPANY_CD = D.COMPANY_CD
      and T.MNY_TP = case when P.MNY_CD is null or P.MNY_CD = 'JPY' then '1' else '2' end
      and T.TAX_SBJ_TP = D.TAX_SBJ_TP
      and T.TAX_KND_CD = D.TAX_KND_CD
      and T.TAX_FG_CHG = D.TAX_FG_CHG
      and T.LOCALE_CODE = 'ja'
      and trunc(sysdate) between T.VD_DT_S and T.VD_DT_E
    left join ITMEXPS1_CHRMST IC1
     on IC1.COMPANY_CD = D.COMPANY_CD
     and IC1.ITMEXPS_CD1 = D.ITMEXPS_CD1
     and IC1.ITMEXPS_CD2 = D.ITMEXPS_CD2
     and IC1.DLT_FG = '0'
    left join BND_FLR_MST B
     on B.COMPANY_CD = P.COMPANY_CD
     and B.BND_FLR_CD = D.BND_FLR_CD
     and B.DLT_FG = '0'
   left join BUMON_MST bm
      on D.COMPANY_CD = bm.COMPANY_CD
      and D.BUMON_CD = bm.BUMON_CD
      and bm.DLT_FG = '0'
 where
   P.COMPANY_CD = ?
   and P.PURORD_NO = ?

#発注修正画面選択肢リスト
PO0011_03: |+
 select /* PO0011_03 */
   B.*
 from
   MWM_OPTION A
   , MWM_OPTION_ITEM B
 where
   A.OPTION_ID = B.OPTION_ID
   and A.CORPORATION_CODE = ?
   and A.OPTION_CODE = ?
   and A.DELETE_FLAG = '0'
 order by
   B.SORT_ORDER

#消費税コードの選択肢リスト
PO0011_04: |+
  select /* PO0011_04 */
    *
  from
    TAX_MST
  where
    COMPANY_CD = ?
    and DLT_FG = '0'
    and trunc(sysdate) between VD_DT_S and VD_DT_E

#通貨コードの選択肢リスト
PO0011_05: |+
  select /* PO0011_05 */
    *
  from
    MNY_MST
  where
    COMPANY_CD = ? and DLT_FG = '0'

#定期発注マスタの抽出
PO0011_06: |+
  select /* PO0011_06 */
    P.PRD_PURORD_NO, O.CNTRCT_NO, O.SBMTR_CD, U.USER_NAME as SBMTR_NM, O.SBMT_DPT_NM
    , P.PRD_PAY_TP, OI1.LABEL as PRD_PAY_TP_NM
    , P.PRD_PAY_MTH, OI2.LABEL as PRD_PAY_MTH_NM
    , P.PRD_PAY_DAY, P.PRD_PAY_DAY as PRD_PAY_DAY_NM
    , case
      when P.PAY_START_TIME is null then null
      else  substr(P.PAY_START_TIME, 1, 4) || '/' || substr(P.PAY_START_TIME, 5, 6)
    end as PAY_START_TIME
    , case
      when P.PAY_END_TIME is null then null
      else substr(P.PAY_END_TIME, 1, 4) || '/' || substr(P.PAY_END_TIME, 5, 6)
    end as PAY_END_TIME
    , P.ML_ADD_TP, OI3.LABEL as ML_ADD_TP_NM
    , P.PAYEE_BNKACC_CD, PB.BNKACC_NM, PB.BNKACC_NM_KN, PB.BNKACC_NO
    , PB.BNK_CD, B.BNK_NM
    , PB.BNKBRC_CD, BB.BNKBRC_NM
    , OI4.LABEL as BNKACC_TP_NM
    , P.PAY_SITE_CD
    , PS.PAY_SITE_NM
    , O.SPLR_CD
  from PURORD_INF O
    inner join WFM_LOCALE L
      on L.LOCALE_CODE = ?
    inner join PRD_PURORD_MST P
      on P.COMPANY_CD = O.COMPANY_CD
      and P.PURORD_NO = O.PURORD_NO
    left join WFM_USER_V U
      on U.CORPORATION_CODE = O.COMPANY_CD
      and U.USER_CODE = O.SBMTR_CD
      and U.LOCALE_CODE = L.LOCALE_CODE
    /* 振込先銀行口座マスタ */
    left join PAYEE_BNKACC_MST PB
      on PB.COMPANY_CD = P.COMPANY_CD
      and PB.PAYEE_BNKACC_CD = P.PAYEE_BNKACC_CD
      and PB.DLT_FG = '0'
      and ((PB.VD_DT_S is null) or (trunc(sysdate) between PB.VD_DT_S and PB.VD_DT_E))
    /* 銀行マスタ */
    left join BNK_MST B
      on B.COMPANY_CD = PB.COMPANY_CD
      and B.BNK_CD = PB.BNK_CD
    /* 銀行支店マスタ */
    left join BNKBRC_MST BB
      on BB.COMPANY_CD = PB.COMPANY_CD
      and BB.BNK_CD = PB.BNK_CD
      and BB.BNKBRC_CD = PB.BNKBRC_CD
    /* 支払サイトマスタ */
    left join PAY_SITE_MST PS
      on PS.COMPANY_CD = P.COMPANY_CD
      and PS.PAY_SITE_CD = P.PAY_SITE_CD
    /* 支払区分（発注定期） */
    left join MWV_OPTION_ITEM OI1
      on OI1.CORPORATION_CODE = P.COMPANY_CD
      and OI1.OPTION_CODE = 'KbnPrdPayTp'
      and OI1.CODE = P.PRD_PAY_TP
      and OI1.LOCALE_CODE = L.LOCALE_CODE
    /* 支払方法（発注定期） */
    left join MWV_OPTION_ITEM OI2
      on OI2.CORPORATION_CODE = P.COMPANY_CD
      and OI2.OPTION_CODE = 'KbnPrdPayMth'
      and OI2.CODE = P.PRD_PAY_MTH
      and OI2.LOCALE_CODE = L.LOCALE_CODE
    /* 月次計上区分（発注定期） */
    left join MWV_OPTION_ITEM OI3
      on OI3.CORPORATION_CODE = P.COMPANY_CD
      and OI3.OPTION_CODE = 'KbnMlAddTp'
      and OI3.CODE = P.ML_ADD_TP
      and OI3.LOCALE_CODE = L.LOCALE_CODE
    /* 銀行口座種別 */
    left join MWV_OPTION_ITEM OI4
      on OI4.CORPORATION_CODE = P.COMPANY_CD
      and OI4.OPTION_CODE = 'KbnBnkaccTp'
      and OI4.CODE = PB.BNKACC_TP
      and OI4.LOCALE_CODE = L.LOCALE_CODE
  where
    (P.COMPANY_CD, P.PRD_PURORD_NO) in (
      select P.COMPANY_CD, max(P.PRD_PURORD_NO)
      from PRD_PURORD_MST
      where P.COMPANY_CD = ? and P.PURORD_NO = ? and P.DLT_FG = '0'
    )

#定期発注予定マスタの抽出
PO0011_07: |+
  select /* PO0011_07 */
    P.COMPANY_CD, P.PRD_PURORD_NO, P.SQNO, P.PRD_PAY_CNT, P.PRD_PAY_DT, P.PRD_IOV_DT_P, P.PRD_IOV_DT_R
  , P.PRD_PAY_STS, OI.LABEL as PRD_PAY_STS_NM
  from PRD_PURORD_PLN_MST P
    inner join WFM_LOCALE L
    on L.LOCALE_CODE = ?
    left join MWV_OPTION_ITEM OI
      on OI.CORPORATION_CODE = P.COMPANY_CD
      and OI.OPTION_CODE = 'PRD_PAY_STS'
      and OI.CODE = P.PRD_PAY_STS
      and OI.DELETE_FLAG = '0'
    and OI.LOCALE_CODE = L.LOCALE_CODE
  where
    (P.COMPANY_CD, P.PRD_PURORD_NO) in (
      select X.COMPANY_CD, max(X.PRD_PURORD_NO)
      from PRD_PURORD_MST X
      where X.COMPANY_CD = ? and X.PURORD_NO = ?
      group by X.COMPANY_CD
    )
  order by
    P.COMPANY_CD, P.PRD_PURORD_NO, P.PRD_PAY_CNT, P.SQNO

#管理_定期発注マスタ一覧の抽出
PO0020_01: |+
 select /* PO0020_01 */ ${REPLACE}
 from PURORD_INF O
  inner join PRD_PURORD_MST P
   on P.COMPANY_CD = O.COMPANY_CD
   and P.PURORD_NO = O.PURORD_NO
   and P.DLT_FG = '0'
  left join MWM_OPTION OP
   on OP.CORPORATION_CODE = O.COMPANY_CD
   and OP.OPTION_CODE = 'KbnMlAddTp'
   and OP.DELETE_FLAG = '0'
  left join MWM_OPTION_ITEM OPI
   on OPI.OPTION_ID = OP.OPTION_ID
   and OPI.CODE = P.ML_ADD_TP
   and OPI.DELETE_FLAG = '0'
 where
   exists (
     select 'x' from (%SUBQUERY%) PS where O.COMPANY_CD = PS.CORPORATION_CODE and O.PURORD_NO = PS.APPLICATION_NO
   )
   and O.PURORD_STS >= '10'

PO0020_02: |+
  O.COMPANY_CD, O.PURORD_NO, O.PRD_PURORD_NO, O.SPLR_CD, O.SPLR_NM_KJ, O.CNTRCT_NO, O.PURORD_NM
  , P.ML_ADD_TP, OPI.LABEL as ML_ADD_TP_NM, P.PAY_START_TIME, P.PAY_END_TIME
  , ROWNUM as ID

#部門コード一覧の抽出
PO0040_01: |+
 select /* PO0040_01 */ *
 from BUMON_MST
 where COMPANY_CD = ? and DLT_FG = '0'

#消費税コード一覧の抽出
PO0040_02: |+
 select /* PO0040_02 */ *
 from TAX_MST
 where COMPANY_CD = ? and DLT_FG = '0'

#取引先マスタの件数取得
PO0040_03: |+
 select /* PO0040_03 */ count(*)
 from SPLR_MST
 where COMPANY_CD = ?
 and SPLR_CD = ?
 and trunc(sysdate) between VD_DT_S and VD_DT_E
 and DLT_FG = '0'

#振込先銀行口座マスタの抽出
PO0040_04: |+
 select /* PO0040_04 */ *
 from PAYEE_BNKACC_MST_V
 where COMPANY_CD = ?
 and SPLR_CD = ?
 and last_day(add_months(?, 1)) between VD_DT_S and VD_DT_E

#ロットNoによるkintone情報の件数取得
PO0040_05: |+
 select /* PO0040_05 */ count(*)
 from KNTN_INF
 where COMPANY_CD = ? and LOT_NO = ?

#支払依頼申請WF情報の件数取得
PO0040_06: |+
 select /* PO0040_06 */ count(A.PROCESS_ID)
 from WFT_PROCESS A
 where exists (
   select 1
   from MWT_PAY B
   where B.CORPORATION_CODE = A.CORPORATION_CODE
   and B.PROCESS_ID = A.PROCESS_ID
   and B.CORPORATION_CODE = ?
   and B.LOT_NO = rpad(?, 7)
   )

#kintone情報から企業コード、検収Noを抽出
PO0040_07: |+
 select /* PO0040_07 */ COMPANY_CD, RCVINSP_NO
 from KNTN_INF
 where COMPANY_CD = ? and LOT_NO = ?
 group by COMPANY_CD, RCVINSP_NO

#データ取込のロック
PO0040_08: |+
 merge into WFM_CORP_PROP_MASTER CP
 using (select ? as PROPERTY_CODE from DUAL) X
  on (CP.PROPERTY_CODE = X.PROPERTY_CODE)
 when not matched then
  insert (PROPERTY_CODE, DEFAULT_VALUE, SORT_ORDER, ID, CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED, CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
  values (X.PROPERTY_CODE, '1', null, GET_NEXTMASTERID('WFM_CORP_PROP_MASTER'), '---', '---', '---', systimestamp, '---', '---', '---', systimestamp)
 when matched then
  update set DEFAULT_VALUE = '1', TIMESTAMP_UPDATED = systimestamp

#データ取込のアンロック
PO0040_09: |+
 update WFM_CORP_PROP_MASTER
 set DEFAULT_VALUE = '0', TIMESTAMP_UPDATED = systimestamp
 where PROPERTY_CODE = ? and TIMESTAMP_UPDATED = ?

#パーツ採番形式IDの取得
PO0040_10: |+
 select /* PO0040_10 */ PARTS_NUMBERING_FORMAT_ID
 from MWM_PARTS_NUMBERING_FORMAT
 where CORPORATION_CODE = ? and PARTS_NUMBERING_FORMAT_CODE = ?

#kintone情報へのインサート
PO0040_11: |+
 INSERT INTO /* PO0040_11 */ KNTN_INF( COMPANY_CD, LOT_NO, SQNO
   , REC_NO, EVNT_NO, KNTN_STS, EXHB_DT, EVNT_MNG_NO, EVNT_CONT
   , KNTN_HLL_ID, HLL_NM, PRDCT_ID, PRDCT_NM, TLNT_NM, SPLR_CD
   , BASE_AMT, ADJ_BASE_AMT, TRNSP_EXP_AMT, ADJ_TRNSP_EXP_AMT, MNSCR_EXP_AMT, INV_AMT
   , BUMON_CD, ANLYS_CD, SMRY, TAX_UNT, TAX_FG, TAX_CD
   , PURORD_NO, RCVINSP_NO, BUY_NO, EXHB_YM, ITMEXPS_CD1, ITMEXPS_CD2
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG, DLT_FG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 VALUES (?, ?, ?
   , ?, ?, ?, ?, ?, ?
   , ?, ?, ?, ?, ?, ?
   , nvl(?, 0), nvl(?, 0), nvl(?, 0), nvl(?, 0), nvl(?, 0), nvl(?, 0)
   , ?, ?, ?, ?, ?, ?
   , ?, ?, ?, to_char(to_date(?, 'YYYY/MM/DD'), 'YYYYMM'), ?, ?
   , ?, ?, ?, '0'
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3))

#発注情報の一括インサート
PO0040_12: |+
 insert into /* PO0040_12 */ PURORD_INF (
   COMPANY_CD, PURORD_NO, PURORD_STS, PURRQST_NO, CNTRCT_NO, PURORD_NM, PURORD_TP, PUR_TP1, PUR_TP2, ASST_TP
   , SBMTR_CD, SBMT_DPT_CD, SBMT_DPT_NM, SBMT_DPT_DT, BUMON_CD, ANLYS_CD, PURORDR, SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN
   , PURORD_AMT_EXCTAX, PURORD_AMT_INCTAX, PURORD_RQST_DT, PURORD_PLN_DT, DLV_PLN_DT, PAY_PLN_DT, DLV_DT, RCVINSP_YM, RCVINSP_YM_S, RCVINSP_YM_E
   , PAY_MTH, PURORDSHT_FRMT, DOC_MAIL_TP, PURORD_RQST_CONT, PURPS, PURORDSHT_TO_ZIP_CD, PURORDSHT_TO_ADR, PURORDSHT_TO_COMPANY_NM, PURORDSHT_TO_DPT_NM, PURORDSHT_TO_PIC_NM
   , PURORDSHT_TO_TEL_NO, DLV_LC, RMK, INSP_COMP_DT, DLV_OBJ, ABST_IN, NTFY_TO, SPRT_TP, SPRT_CNT, CMPT_ESTM_TP
   , SLCT_RSN, INV_EVD_TP, PAY_COND_CD, PAY_COND_NM, PRL_PURORD_DT, OWN_COMPANY_COMPANY_NM, OWN_COMPANY_ADR, OWN_COMPANY_PIC_NM, OTH_PRTY_COMPANY_NM, OTH_PRTY_ADR
   , OTH_PRTY_PIC_NM, PURORDSHT_SP_INSTR, PURORD_RCPTSHT_SP_INSTR, MNY_TP, MNY_CD, ADD_RTO, STMP_TP, PRD_PURORD_TP, PRD_PURORD_NO, ORGNZ_CD, LOT_NO
   , PAY_SITE_CD, PAY_APPL_CD, ADVPAY_TP, PURORD_RCPTSHT_TP, PURORD_RCPTSHT_RSN, TAX_UNT, TAX_FG, TAX_CD
   , HLDTAX_TP, HLDTAX_RTO, HLDTAX_SBJ_AMT, HLDTAX_AMT
   , IMP_TAX_TP, CHRG_BNKACC_CD, PAY_APPL_TP, DLT_FG
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK, SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF, SHT_ADR1, SHT_ADR2, SHT_ADR3, SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO, ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , TTLAMT_EXCTAX1, TTLAMT_TAX1, TTLAMT_INCTAX1
   , TTLAMT_EXCTAX2, TTLAMT_TAX2, TTLAMT_INCTAX2
   , TTLAMT_EXCTAX3, TTLAMT_TAX3, TTLAMT_INCTAX3
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   KNTN.COMPANY_CD, KNTN.PURORD_NO, '20', NULL, NULL, substr('20' || substr(LOT_NO, 2) || KNTN.PRDCT_NM, 1, 30), '1', NULL, NULL, NULL
   , ?, ?, ?, trunc(SYSDATE), NULL, NULL, NULL, KNTN.SPLR_CD, SPLR.SPLR_NM_KJ, SPLR.SPLR_NM_KN
   , KNTN.TTL_AMT_EXCTAX, (KNTN.TTLAMT_INCTAX1 + KNTN.TTLAMT_INCTAX2 + KNTN.TTLAMT_INCTAX3 + KNTN.TTLAMT_INCTAX4), trunc(add_months(trunc(KNTN.EXHB_DT), -1), 'MONTH'), NULL, KNTN.EXHB_DT, last_day(add_months(trunc(KNTN.EXHB_DT), 1)), last_day(trunc(KNTN.EXHB_DT)), to_char(KNTN.EXHB_DT, 'YYYYMM'), to_char(KNTN.EXHB_DT, 'YYYYMM'), to_char(KNTN.EXHB_DT, 'YYYYMM')
   , '10', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, KNTN.EXHB_DT, NULL, NULL, NULL, NULL, NULL, '0'
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, '1', 'JPY', 1, '9', '0', NULL, ?, KNTN.LOT_NO
   , '990199', APPL.PAY_APPL_CD, '0', '0', NULL, KNTN.TAX_UNT, NULL, NULL
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_TP else NULL end
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_RTO1 else NULL end
   , case when SPLR.CRP_PRS_TP = '2' then KNTN.TTL_AMT_EXCTAX else NULL end
   , case
      when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX <= 1000000 then trunc(KNTN.TTL_AMT_EXCTAX * HLDTAX.HLDTAX_RTO1 / 100)
      when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX > 1000000 then trunc((KNTN.TTL_AMT_EXCTAX - 1000000) * HLDTAX.HLDTAX_RTO2 / 100) + 102100
      else NULL
     end
   , NULL, NULL, NULL, '0'
   , '1', '1', NULL, SPLR.ZIP_CD, SPLR.ADR_PRF_CD, SPLR.ADR_PRF, SPLR.ADR1, SPLR.ADR2, SPLR.ADR3, NULL, NULL, NULL, NULL, '0'
   , NULL, NULL, NULL
   , KNTN.TTLAMT_EXCTAX1, (KNTN.TTLAMT_INCTAX1 - KNTN.TTLAMT_EXCTAX1), KNTN.TTLAMT_INCTAX1
   , KNTN.TTLAMT_EXCTAX2, (KNTN.TTLAMT_INCTAX2 - KNTN.TTLAMT_EXCTAX2), KNTN.TTLAMT_INCTAX2
   , KNTN.TTLAMT_EXCTAX3, (KNTN.TTLAMT_INCTAX3 - KNTN.TTLAMT_EXCTAX3), KNTN.TTLAMT_INCTAX3
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
     KNTN1.COMPANY_CD, KNTN1.LOT_NO, KNTN1.EXHB_YM, KNTN1.SPLR_CD, KNTN1.PRDCT_NM, KNTN1.TAX_UNT, KNTN1.PURORD_NO, KNTN1.EXHB_DT
     , KNTN2.TTL_AMT_EXCTAX, KNTN2.TTL_AMT_INCTAX, KNTN2.TTLAMT_EXCTAX1, KNTN2.TTLAMT_EXCTAX2, KNTN2.TTLAMT_EXCTAX3
     , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX1 * 110 / 100) else KNTN2.TTLAMT_INCTAX1 end as TTLAMT_INCTAX1
     , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX2 * 108 / 100) else KNTN2.TTLAMT_INCTAX2 end as TTLAMT_INCTAX2
     , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX3 * 108 / 100) else KNTN2.TTLAMT_INCTAX3 end as TTLAMT_INCTAX3
     , KNTN2.TTLAMT_EXCTAX4, KNTN2.TTLAMT_INCTAX4
   from
     (select
        COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, PRDCT_NM, TAX_UNT, PURORD_NO, max(EXHB_DT) AS EXHB_DT
      from
        KNTN_INF
      where
        COMPANY_CD = ? and LOT_NO = ?
      group by
        COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, PRDCT_NM, TAX_UNT, PURORD_NO
     ) KNTN1
     inner join
       (select
          COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, sum(TTL_AMT) as TTL_AMT, sum(TTL_AMT_EXCTAX) as TTL_AMT_EXCTAX, sum(TTL_AMT_INCTAX) as TTL_AMT_INCTAX
          , sum(case TAX_FG_CHG when '1' then TTL_AMT_EXCTAX when '4' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX1
          , sum(case TAX_FG_CHG when '1' then TTL_AMT_INCTAX when '4' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX1
          , sum(case TAX_FG_CHG when '2' then TTL_AMT_EXCTAX when '5' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX2
          , sum(case TAX_FG_CHG when '2' then TTL_AMT_INCTAX when '5' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX2
          , sum(case TAX_FG_CHG when '3' then TTL_AMT_EXCTAX when '6' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX3
          , sum(case TAX_FG_CHG when '3' then TTL_AMT_INCTAX when '6' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX3
          , sum(case TAX_FG_CHG when '7' then TTL_AMT_EXCTAX when '8' then TTL_AMT_EXCTAX when '9' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX4
          , sum(case TAX_FG_CHG when '7' then TTL_AMT_INCTAX when '8' then TTL_AMT_INCTAX when '9' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX4
        from
          (select
             A.COMPANY_CD, A.LOT_NO, A.EXHB_YM, A.SPLR_CD, A.TTL_AMT, A.TAX_FG_CHG
             , case A.TAX_FG when '1' then ROUND(A.TTL_AMT / (B.TAX_RTO + 100) * 100) else A.TTL_AMT end as TTL_AMT_EXCTAX
             , case A.TAX_FG when '2' then ROUND(A.TTL_AMT * (B.TAX_RTO + 100) / 100) else A.TTL_AMT end as TTL_AMT_INCTAX
           from
             (select
                sum(INV_AMT + TRNSP_EXP_AMT + ADJ_TRNSP_EXP_AMT) as TTL_AMT
                , COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, TAX_CD, TAX_FG, TAX_FG_CHG, max(EXHB_DT) AS EXHB_DT
              from
                KNTN_INF
              group by
                COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, TAX_FG, TAX_FG_CHG
             ) A
             inner join TAX_MST B
               on B.COMPANY_CD = A.COMPANY_CD and B.TAX_CD = A.TAX_CD and trunc(A.EXHB_DT) between B.VD_DT_S and B.VD_DT_E and B.DLT_FG = '0'
          ) C
        group by
          COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD
       ) KNTN2
       on KNTN1.COMPANY_CD = KNTN2.COMPANY_CD and KNTN1.LOT_NO = KNTN2.LOT_NO and KNTN1.EXHB_YM = KNTN2.EXHB_YM and KNTN1.SPLR_CD = KNTN2.SPLR_CD
   ) KNTN
   inner join SPLR_MST SPLR
     on SPLR.COMPANY_CD = KNTN.COMPANY_CD and SPLR.SPLR_CD = KNTN.SPLR_CD and SPLR.DLT_FG = '0' and trunc(SYSDATE) between SPLR.VD_DT_S and SPLR.VD_DT_E
   left join WFM_ORGANIZATION ORG
     on ORG.CORPORATION_CODE = ? and ORG.ORGANIZATION_CODE = ?
   left join PAY_APPL_MST APPL
     on APPL.COMPANY_CD = ORG.CORPORATION_CODE and APPL.PAY_APPL_CD = ORG.EXTENDED_INFO_01 and APPL.DLT_FG = '0'
   left join HLDTAX_MST HLDTAX
     on HLDTAX.COMPANY_CD = KNTN.COMPANY_CD and HLDTAX.HLDTAX_TP = '017'

#発注明細情報の一括インサート
PO0040_13: |+
 insert into /* PO0040_13 */ PURORDDTL_INF (
   COMPANY_CD, PURORD_NO, PURORD_DTL_NO, PURORD_DTL_TP, ORGNZ_CD, ITMEXPS_CD1, ITMEXPS_CD2, ITM_TP1, ITM_TP2, ITM_TP3
   , ITM_CD, ITM_NM, BUMON_CD, ANLYS_CD, ASST_TP, PURORD_QNT, RCVINSP_QNT, UNT_CD, PURORD_UC_JPY, PURORD_AMT_JPY, PURORD_AMT_JPY_INCTAX
   , MNY_CD, PURORD_UC_FC, PURORD_AMT_FC, TAX_FG, TAX_CD, PURORD_SMRY, APPL_CONT, CTRCT_TP, BRKDWN_TP, APPL_PRD_S_DT
   , APPL_PRD_E_DT, HLDTAX_TP, HLDTAX_RTO, HLDTAX_AMT, INV_COMPANY_CD, DLT_FG
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   KNTN.COMPANY_CD, KNTN.PURORD_NO, KNTN.PURORD_DTL_NO, NULL, ?, KNTN.ITMEXPS_CD1, KNTN.ITMEXPS_CD2, NULL, NULL, NULL
   , KNTN.EVNT_MNG_NO, KNTN.EVNT_CONT, KNTN.BUMON_CD, KNTN.ANLYS_CD, '0', NULL, NULL, NULL, NULL, KNTN.TTL_AMT_EXCTAX, KNTN.TTL_AMT_INCTAX
   , 'JPY', NULL, NULL, NULL, KNTN.TAX_CD, KNTN.SMRY, NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, NULL, NULL, '0'
   , KNTN.TAX_SBJ_TP, KNTN.TAX_KND_CD, KNTN.TAX_FG_CHG
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      A.COMPANY_CD, A.PURORD_NO, A.PURORD_DTL_NO, A.ITMEXPS_CD1, A.ITMEXPS_CD2
      , A.EVNT_MNG_NO, A.EVNT_CONT, A.BUMON_CD, A.ANLYS_CD, A.SMRY, A.TAX_CD, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG, A.TTL_AMT as TTL_AMT_EXCTAX
      , case A.TAX_FG when '2' then ROUND(A.TTL_AMT * (B.TAX_RTO + 100) / 100) else A.TTL_AMT end as TTL_AMT_INCTAX
    from
      (select
         row_number() over (partition by COMPANY_CD, EXHB_YM, SPLR_CD order by COMPANY_CD, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2) PURORD_DTL_NO
         , sum(INV_AMT + TRNSP_EXP_AMT + ADJ_TRNSP_EXP_AMT) as TTL_AMT
         , COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, EVNT_CONT, BUMON_CD, ANLYS_CD, SMRY, ITMEXPS_CD1, ITMEXPS_CD2, PURORD_NO
         , TAX_FG, TAX_CD, TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG, max(EXHB_DT) AS EXHB_DT
       from
         KNTN_INF
       where
         COMPANY_CD = ? and LOT_NO = ?
       group by
         COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, EVNT_CONT, BUMON_CD, ANLYS_CD, SMRY, ITMEXPS_CD1, ITMEXPS_CD2, PURORD_NO
         , TAX_FG, TAX_CD, TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
      ) A
      inner join TAX_MST B
        on B.COMPANY_CD = A.COMPANY_CD and B.TAX_CD = A.TAX_CD and trunc(A.EXHB_DT) between B.VD_DT_S and B.VD_DT_E and B.DLT_FG = '0'
   ) KNTN

#検収情報の一括インサート
PO0040_14: |+
 insert into /* PO0040_14 */ RCVINSP_INF (
   COMPANY_CD, RCVINSP_NO, RCVINSP_STS, BUY_NO_R_RCNT, BUY_NO_B_RCNT, RCVINSP_NM, PURORD_TP, SBMTR_CD, SBMT_DPT_CD, SBMT_DPT_NM, SBMT_DPT_DT
   , BUMON_CD, ANLYS_CD, RCVINSPR, SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN, RCVINSP_AMT_EXCTAX, RCVINSP_AMT_INCTAX, DLV_DT, RCVINSP_DT
   , RCVINSP_YM, CST_ADD_YM, RCVINSP_YM_S, RCVINSP_YM_E, PAY_PLN_DT, RCVINSPSHT_ISS_DT, PAY_MTH, RCVINSPSHT_FRMT, RCVINSP_STMP, RCVINSP_CONT
   , RCVINSPSHT_TO_ZIP_CD, RCVINSPSHT_TO_ADR, RCVINSPSHT_TO_COMPANY_NM, RCVINSPSHT_TO_DPT_NM, RCVINSPSHT_TO_PIC_NM, RCVINSPSHT_TO_TEL_NO, RMK, RCVINSPSHT_COMPANY_NM, RCVINSPSHT_ADR, RCVINSPSHT_PIC_NM
   , RCVINSPSHT_RMK, PURPS, DLV_LC, INSP_COMP_DT, DLV_OBJ, ABST_IN, PAY_COND_CD, PAY_COND_NM, PAY_COND_CHGRSN, MNY_TP
   , MNY_CD, ADD_RTO, STMP_TP, PRD_PURORD_TP, PRD_PURORD_NO, ORGNZ_CD, LOT_NO, PAY_SITE_CD, PAY_APPL_CD, ADVPAY_TP, TAX_UNT, TAX_FG, TAX_CD
   , HLDTAX_TP, HLDTAX_RTO, HLDTAX_SBJ_AMT, HLDTAX_AMT
   , IMP_TAX_TP, CHRG_BNKACC_CD, PAY_APPL_TP, DLT_FG
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK, SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF, SHT_ADR1, SHT_ADR2, SHT_ADR3, SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO, ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , TTLAMT_EXCTAX1, TTLAMT_TAX1, TTLAMT_INCTAX1
   , TTLAMT_EXCTAX2, TTLAMT_TAX2, TTLAMT_INCTAX2
   , TTLAMT_EXCTAX3, TTLAMT_TAX3, TTLAMT_INCTAX3
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   KNTN.COMPANY_CD, KNTN.RCVINSP_NO, '10', NULL, KNTN.BUY_NO, substr('20' || substr(LOT_NO, 2) || KNTN.PRDCT_NM, 1, 30), '1', ?, ?, ?, trunc(SYSDATE)
   , NULL, NULL, NULL, KNTN.SPLR_CD, SPLR.SPLR_NM_KJ, SPLR.SPLR_NM_KN, KNTN.TTL_AMT_EXCTAX, (KNTN.TTLAMT_INCTAX1 + KNTN.TTLAMT_INCTAX2 + KNTN.TTLAMT_INCTAX3 + KNTN.TTLAMT_INCTAX4), last_day(trunc(KNTN.EXHB_DT)), KNTN.EXHB_DT
   , to_char(KNTN.EXHB_DT, 'YYYYMM')
   , case
       when trunc(KNTN.EXHB_DT, 'MONTH') < trunc(SYSDATE, 'MONTH') then
         case CLND.STL_TP_PUR when '1' then to_char(add_months(SYSDATE, -1), 'YYYYMM') else to_char(SYSDATE, 'YYYYMM') end
       else
         case CLND.STL_TP_PUR when '1' then to_char(SYSDATE, 'YYYYMM') else to_char(SYSDATE, 'YYYYMM') end
     end
   , to_char(KNTN.EXHB_DT, 'YYYYMM'), to_char(KNTN.EXHB_DT, 'YYYYMM'), last_day(add_months(trunc(KNTN.EXHB_DT), 1)), last_day(trunc(KNTN.EXHB_DT)), '10', NULL, NULL, NULL
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '1'
   , 'JPY', 1, '9', '0', NULL, ?, KNTN.LOT_NO, '990199', APPL.PAY_APPL_CD, '0', KNTN.TAX_UNT, NULL, NULL
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_TP else NULL end
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_RTO1 else NULL end
   , case when SPLR.CRP_PRS_TP = '2' then KNTN.TTL_AMT_EXCTAX else NULL end
   , case
      when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX <= 1000000 then trunc(KNTN.TTL_AMT_EXCTAX * HLDTAX.HLDTAX_RTO1 / 100)
      when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX > 1000000 then trunc((KNTN.TTL_AMT_EXCTAX - 1000000) * HLDTAX.HLDTAX_RTO2 / 100) + 102100
      else NULL
     end
   , NULL, NULL, NULL, '0'
   , '1', '1', NULL, SPLR.ZIP_CD, SPLR.ADR_PRF_CD, SPLR.ADR_PRF, SPLR.ADR1, SPLR.ADR2, SPLR.ADR3, NULL, NULL, NULL, NULL, '0'
   , NULL, NULL, NULL
   , KNTN.TTLAMT_EXCTAX1, (KNTN.TTLAMT_INCTAX1 - KNTN.TTLAMT_EXCTAX1), KNTN.TTLAMT_INCTAX1
   , KNTN.TTLAMT_EXCTAX2, (KNTN.TTLAMT_INCTAX2 - KNTN.TTLAMT_EXCTAX2), KNTN.TTLAMT_INCTAX2
   , KNTN.TTLAMT_EXCTAX3, (KNTN.TTLAMT_INCTAX3 - KNTN.TTLAMT_EXCTAX3), KNTN.TTLAMT_INCTAX3
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      KNTN1.COMPANY_CD, KNTN1.LOT_NO, KNTN1.EXHB_YM, KNTN1.SPLR_CD, KNTN1.PRDCT_NM, KNTN1.TAX_UNT, KNTN1.RCVINSP_NO, KNTN1.BUY_NO, KNTN1.EXHB_DT
      , KNTN2.TTL_AMT_EXCTAX, KNTN2.TTL_AMT_INCTAX, KNTN2.TTLAMT_EXCTAX1, KNTN2.TTLAMT_EXCTAX2, KNTN2.TTLAMT_EXCTAX3
      , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX1 * 110 / 100) else KNTN2.TTLAMT_INCTAX1 end as TTLAMT_INCTAX1
      , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX2 * 108 / 100) else KNTN2.TTLAMT_INCTAX2 end as TTLAMT_INCTAX2
      , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX3 * 108 / 100) else KNTN2.TTLAMT_INCTAX3 end as TTLAMT_INCTAX3
      , KNTN2.TTLAMT_EXCTAX4, KNTN2.TTLAMT_INCTAX4
   from
     (select
        COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, PRDCT_NM, TAX_UNT, RCVINSP_NO, BUY_NO, max(EXHB_DT) AS EXHB_DT
      from
        KNTN_INF
      where
        COMPANY_CD = ? and LOT_NO = ?
      group by
        COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, PRDCT_NM, TAX_UNT, RCVINSP_NO, BUY_NO
     ) KNTN1
     inner join
       (select
          COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, sum(TTL_AMT) as TTL_AMT, sum(TTL_AMT_EXCTAX) as TTL_AMT_EXCTAX, sum(TTL_AMT_INCTAX) as TTL_AMT_INCTAX
          , sum(case TAX_FG_CHG when '1' then TTL_AMT_EXCTAX when '4' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX1
          , sum(case TAX_FG_CHG when '1' then TTL_AMT_INCTAX when '4' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX1
          , sum(case TAX_FG_CHG when '2' then TTL_AMT_EXCTAX when '5' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX2
          , sum(case TAX_FG_CHG when '2' then TTL_AMT_INCTAX when '5' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX2
          , sum(case TAX_FG_CHG when '3' then TTL_AMT_EXCTAX when '6' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX3
          , sum(case TAX_FG_CHG when '3' then TTL_AMT_INCTAX when '6' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX3
          , sum(case TAX_FG_CHG when '7' then TTL_AMT_EXCTAX when '8' then TTL_AMT_EXCTAX when '9' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX4
          , sum(case TAX_FG_CHG when '7' then TTL_AMT_INCTAX when '8' then TTL_AMT_INCTAX when '9' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX4
        from
          (select
             A.COMPANY_CD, A.LOT_NO, A.EXHB_YM, A.SPLR_CD, A.TTL_AMT, A.TAX_FG_CHG
             , case A.TAX_FG when '1' then ROUND(A.TTL_AMT / (B.TAX_RTO + 100) * 100) else A.TTL_AMT end as TTL_AMT_EXCTAX
             , case A.TAX_FG when '2' then ROUND(A.TTL_AMT * (B.TAX_RTO + 100) / 100) else A.TTL_AMT end as TTL_AMT_INCTAX
           from
             (select
                sum(INV_AMT + TRNSP_EXP_AMT + ADJ_TRNSP_EXP_AMT) as TTL_AMT
                , COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, TAX_CD, TAX_FG, TAX_FG_CHG, max(EXHB_DT) AS EXHB_DT
              from
                KNTN_INF
              group by
                COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, TAX_FG, TAX_FG_CHG
             ) A
             inner join TAX_MST B
               on B.COMPANY_CD = A.COMPANY_CD and B.TAX_CD = A.TAX_CD and trunc(A.EXHB_DT) between B.VD_DT_S and B.VD_DT_E and B.DLT_FG = '0'
          ) C
        group by
          COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD
       ) KNTN2
       on KNTN1.COMPANY_CD = KNTN2.COMPANY_CD and KNTN1.LOT_NO = KNTN2.LOT_NO and KNTN1.EXHB_YM = KNTN2.EXHB_YM and KNTN1.SPLR_CD = KNTN2.SPLR_CD
   ) KNTN
   inner join SPLR_MST SPLR
     on SPLR.COMPANY_CD = KNTN.COMPANY_CD and SPLR.SPLR_CD = KNTN.SPLR_CD and SPLR.DLT_FG = '0' and trunc(SYSDATE) between SPLR.VD_DT_S and SPLR.VD_DT_E
   inner join ACC_CLND_MST CLND
     on CLND.COMPANY_CD = KNTN.COMPANY_CD and CLND.CLND_DT = trunc(SYSDATE) and CLND.DLT_FG = '0'
   left join WFM_ORGANIZATION ORG
     on ORG.CORPORATION_CODE = ? and ORG.ORGANIZATION_CODE = ?
   left join PAY_APPL_MST APPL
     on APPL.COMPANY_CD = ORG.CORPORATION_CODE and APPL.PAY_APPL_CD = ORG.EXTENDED_INFO_01 and APPL.DLT_FG = '0'
   left join HLDTAX_MST HLDTAX
     on HLDTAX.COMPANY_CD = KNTN.COMPANY_CD and HLDTAX.HLDTAX_TP = '017'

#検収明細情報の一括インサート
PO0040_15: |+
 insert into /* PO0040_15 */ RCVINSPDTL_INF (
   COMPANY_CD, RCVINSP_NO, RCVINSP_DTL_NO, PURORD_NO, PURORD_DTL_NO, PURORD_DTL_TP, ORGNZ_CD, COM_CHG_ORGNZ_CD, ITMEXPS_CD1, ITMEXPS_CD2
   , ITM_TP1, ITM_TP2, ITM_TP3, ITM_CD, ITM_NM, BUMON_CD, ANLYS_CD, ASST_TP, PURORD_QNT, RCVINSP_QNT
   , UNT_CD, PURORD_UC_JPY, PURORD_AMT_JPY, PURORD_AMT_JPY_INCTAX, RCVINSP_UC_JPY, RCVINSP_AMT_JPY, RCVINSP_AMT_JPY_INCTAX, MNY_CD, ADD_RTO, PURORD_UC_FC, PURORD_AMT_FC, RCVINSP_UC_FC
   , RCVINSP_AMT_FC, TAX_FG, TAX_CD, RCVINSP_SMRY, APPL_CONT, CTRCT_TP, BRKDWN_TP, APPL_PRD_S_DT, APPL_PRD_E_DT, HLDTAX_TP
   , HLDTAX_RTO, HLDTAX_AMT, ADVPAY_NO, INV_COMPANY_CD, DLT_FG
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   KNTN.COMPANY_CD, KNTN.RCVINSP_NO, KNTN.RCVINSP_DTL_NO, KNTN.PURORD_NO, KNTN.PURORD_DTL_NO, NULL, ?, NULL, KNTN.ITMEXPS_CD1, KNTN.ITMEXPS_CD2
   , NULL, NULL, NULL, KNTN.EVNT_MNG_NO, KNTN.EVNT_CONT, KNTN.BUMON_CD, KNTN.ANLYS_CD, '0', NULL, NULL
   , NULL, NULL, KNTN.TTL_AMT_EXCTAX, KNTN.TTL_AMT_INCTAX, NULL, KNTN.TTL_AMT_EXCTAX, KNTN.TTL_AMT_INCTAX, 'JPY', 1, NULL, NULL, NULL
   , NULL, NULL, KNTN.TAX_CD, KNTN.SMRY, NULL, NULL, NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, NULL, '0'
   , KNTN.TAX_SBJ_TP, KNTN.TAX_KND_CD, KNTN.TAX_FG_CHG
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      A.COMPANY_CD, A.RCVINSP_NO, A.RCVINSP_DTL_NO, A.PURORD_NO, A.PURORD_DTL_NO, A.ITMEXPS_CD1, A.ITMEXPS_CD2
      , A.EVNT_MNG_NO, A.EVNT_CONT, A.BUMON_CD, A.ANLYS_CD, A.SMRY, A.TAX_CD, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG, A.TTL_AMT as TTL_AMT_EXCTAX
      , case A.TAX_FG when '2' then ROUND(A.TTL_AMT * (B.TAX_RTO + 100) / 100) else A.TTL_AMT end as TTL_AMT_INCTAX
    from
      (select
         row_number() over (partition by COMPANY_CD, EXHB_YM, SPLR_CD order by COMPANY_CD, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2) RCVINSP_DTL_NO
         , row_number() over (partition by COMPANY_CD, EXHB_YM, SPLR_CD order by COMPANY_CD, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2) PURORD_DTL_NO
         , sum(INV_AMT + TRNSP_EXP_AMT + ADJ_TRNSP_EXP_AMT) as TTL_AMT
         , COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, EVNT_CONT, BUMON_CD, ANLYS_CD, SMRY, ITMEXPS_CD1, ITMEXPS_CD2, RCVINSP_NO, PURORD_NO
         , TAX_FG, TAX_CD, TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG, max(EXHB_DT) AS EXHB_DT
       from
         KNTN_INF
       where
         COMPANY_CD = ? and LOT_NO = ?
       group by
         COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, EVNT_CONT, BUMON_CD, ANLYS_CD, SMRY, ITMEXPS_CD1, ITMEXPS_CD2, RCVINSP_NO, PURORD_NO
         , TAX_FG, TAX_CD, TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
      ) A
      inner join TAX_MST B
        on B.COMPANY_CD = A.COMPANY_CD and B.TAX_CD = A.TAX_CD and trunc(A.EXHB_DT) between B.VD_DT_S and B.VD_DT_E and B.DLT_FG = '0'
   ) KNTN

#仕入情報の一括インサート
PO0040_16: |+
 insert into /* PO0040_16 */ BUY_INF (
   COMPANY_CD, BUY_NO, RCVINSP_NO, RB_TP, BUY_NO_O, PURORD_TP, SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN, BUY_ADD_DT
   , RCVINSP_YM, CST_ADD_YM, RCVINSP_YM_S, RCVINSP_YM_E, PAY_MTH, PAY_COND_CD, PAY_COND_NM, PAY_COND, ABST_IN, RMK
   , PRD_PURORD_TP, PRD_PURORD_NO, RTN_PAY_NO, ORGNZ_CD, LOT_NO, PAY_SITE_CD, PAY_APPL_CD, ADVPAY_TP, TAX_UNT, TAX_FG, TAX_CD
   , HLDTAX_TP, HLDTAX_RTO, HLDTAX_SBJ_AMT, HLDTAX_AMT
   , BUY_AMT_EXCTAX, BUY_AMT_INCTAX, IMP_TAX_TP, MNY_TP, MNY_CD, ADD_RTO, CHRG_BNKACC_CD, PAY_APPL_TP, DLT_FG
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK, SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF, SHT_ADR1, SHT_ADR2, SHT_ADR3, SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO, ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , TTLAMT_EXCTAX1, TTLAMT_TAX1, TTLAMT_INCTAX1
   , TTLAMT_EXCTAX2, TTLAMT_TAX2, TTLAMT_INCTAX2
   , TTLAMT_EXCTAX3, TTLAMT_TAX3, TTLAMT_INCTAX3
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   KNTN.COMPANY_CD, KNTN.BUY_NO, KNTN.RCVINSP_NO, 'O', NULL, '1', KNTN.SPLR_CD, SPLR.SPLR_NM_KJ, SPLR.SPLR_NM_KN, EXHB_DT
   , to_char(KNTN.EXHB_DT, 'YYYYMM')
   , case
       when trunc(KNTN.EXHB_DT, 'MONTH') < trunc(SYSDATE, 'MONTH') then
         case CLND.STL_TP_PUR when '1' then to_char(add_months(SYSDATE, -1), 'YYYYMM') else to_char(SYSDATE, 'YYYYMM') end
       else
         case CLND.STL_TP_PUR when '1' then to_char(SYSDATE, 'YYYYMM') else to_char(SYSDATE, 'YYYYMM') end
     end
   , to_char(KNTN.EXHB_DT, 'YYYYMM'), to_char(KNTN.EXHB_DT, 'YYYYMM'), '10', NULL, NULL, NULL, NULL, NULL
   , '0', NULL, NULL, ?, KNTN.LOT_NO, '990199', APPL.PAY_APPL_CD, '0', KNTN.TAX_UNT, NULL, NULL
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_TP else NULL end
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_RTO1 else NULL end
   , case when SPLR.CRP_PRS_TP = '2' then KNTN.TTL_AMT_EXCTAX else NULL end
   , case
      when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX <= 1000000 then trunc(KNTN.TTL_AMT_EXCTAX * HLDTAX.HLDTAX_RTO1 / 100)
      when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX > 1000000 then trunc((KNTN.TTL_AMT_EXCTAX - 1000000) * HLDTAX.HLDTAX_RTO2 / 100) + 102100
      else NULL
     end
   , KNTN.TTL_AMT_EXCTAX, (KNTN.TTLAMT_INCTAX1 + KNTN.TTLAMT_INCTAX2 + KNTN.TTLAMT_INCTAX3 + KNTN.TTLAMT_INCTAX4), NULL, '1', 'JPY', 1, NULL, NULL, '0'
   , '1', '1', NULL, SPLR.ZIP_CD, SPLR.ADR_PRF_CD, SPLR.ADR_PRF, SPLR.ADR1, SPLR.ADR2, SPLR.ADR3, NULL, NULL, NULL, NULL, '0'
   , NULL, NULL, NULL
   , KNTN.TTLAMT_EXCTAX1, (KNTN.TTLAMT_INCTAX1 - KNTN.TTLAMT_EXCTAX1), KNTN.TTLAMT_INCTAX1
   , KNTN.TTLAMT_EXCTAX2, (KNTN.TTLAMT_INCTAX2 - KNTN.TTLAMT_EXCTAX2), KNTN.TTLAMT_INCTAX2
   , KNTN.TTLAMT_EXCTAX3, (KNTN.TTLAMT_INCTAX3 - KNTN.TTLAMT_EXCTAX3), KNTN.TTLAMT_INCTAX3
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      KNTN1.COMPANY_CD, KNTN1.LOT_NO, KNTN1.EXHB_YM, KNTN1.SPLR_CD, KNTN1.PRDCT_NM, KNTN1.TAX_UNT, KNTN1.BUY_NO, KNTN1.RCVINSP_NO, KNTN1.EXHB_DT
      , KNTN2.TTL_AMT_EXCTAX, KNTN2.TTL_AMT_INCTAX, KNTN2.TTLAMT_EXCTAX1, KNTN2.TTLAMT_EXCTAX2, KNTN2.TTLAMT_EXCTAX3
      , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX1 * 110 / 100) else KNTN2.TTLAMT_INCTAX1 end as TTLAMT_INCTAX1
      , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX2 * 108 / 100) else KNTN2.TTLAMT_INCTAX2 end as TTLAMT_INCTAX2
      , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX3 * 108 / 100) else KNTN2.TTLAMT_INCTAX3 end as TTLAMT_INCTAX3
      , KNTN2.TTLAMT_EXCTAX4, KNTN2.TTLAMT_INCTAX4
   from
     (select
        COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, PRDCT_NM, TAX_UNT, RCVINSP_NO, BUY_NO, max(EXHB_DT) AS EXHB_DT
      from
        KNTN_INF
      where
        COMPANY_CD = ? and LOT_NO = ?
      group by
        COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, PRDCT_NM, TAX_UNT, RCVINSP_NO, BUY_NO
     ) KNTN1
     inner join
       (select
          COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, sum(TTL_AMT) as TTL_AMT, sum(TTL_AMT_EXCTAX) as TTL_AMT_EXCTAX, sum(TTL_AMT_INCTAX) as TTL_AMT_INCTAX
          , sum(case TAX_FG_CHG when '1' then TTL_AMT_EXCTAX when '4' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX1
          , sum(case TAX_FG_CHG when '1' then TTL_AMT_INCTAX when '4' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX1
          , sum(case TAX_FG_CHG when '2' then TTL_AMT_EXCTAX when '5' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX2
          , sum(case TAX_FG_CHG when '2' then TTL_AMT_INCTAX when '5' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX2
          , sum(case TAX_FG_CHG when '3' then TTL_AMT_EXCTAX when '6' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX3
          , sum(case TAX_FG_CHG when '3' then TTL_AMT_INCTAX when '6' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX3
          , sum(case TAX_FG_CHG when '7' then TTL_AMT_EXCTAX when '8' then TTL_AMT_EXCTAX when '9' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX4
          , sum(case TAX_FG_CHG when '7' then TTL_AMT_INCTAX when '8' then TTL_AMT_INCTAX when '9' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX4
        from
          (select
             A.COMPANY_CD, A.LOT_NO, A.EXHB_YM, A.SPLR_CD, A.TTL_AMT, A.TAX_FG_CHG
             , case A.TAX_FG when '1' then ROUND(A.TTL_AMT / (B.TAX_RTO + 100) * 100) else A.TTL_AMT end as TTL_AMT_EXCTAX
             , case A.TAX_FG when '2' then ROUND(A.TTL_AMT * (B.TAX_RTO + 100) / 100) else A.TTL_AMT end as TTL_AMT_INCTAX
           from
             (select
                sum(INV_AMT + TRNSP_EXP_AMT + ADJ_TRNSP_EXP_AMT) as TTL_AMT
                , COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, TAX_CD, TAX_FG, TAX_FG_CHG, max(EXHB_DT) AS EXHB_DT
              from
                KNTN_INF
              group by
                COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, TAX_FG, TAX_FG_CHG
             ) A
             inner join TAX_MST B
               on B.COMPANY_CD = A.COMPANY_CD and B.TAX_CD = A.TAX_CD and trunc(A.EXHB_DT) between B.VD_DT_S and B.VD_DT_E and B.DLT_FG = '0'
          ) C
        group by
          COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD
       ) KNTN2
       on KNTN1.COMPANY_CD = KNTN2.COMPANY_CD and KNTN1.LOT_NO = KNTN2.LOT_NO and KNTN1.EXHB_YM = KNTN2.EXHB_YM and KNTN1.SPLR_CD = KNTN2.SPLR_CD
   ) KNTN
   inner join SPLR_MST SPLR
     on SPLR.COMPANY_CD = KNTN.COMPANY_CD and SPLR.SPLR_CD = KNTN.SPLR_CD and SPLR.DLT_FG = '0' and trunc(SYSDATE) between SPLR.VD_DT_S and SPLR.VD_DT_E
   inner join ACC_CLND_MST CLND
     on CLND.COMPANY_CD = KNTN.COMPANY_CD and CLND.CLND_DT = trunc(SYSDATE) and CLND.DLT_FG = '0'
   left join WFM_ORGANIZATION ORG
     on ORG.CORPORATION_CODE = ? and ORG.ORGANIZATION_CODE = ?
   left join PAY_APPL_MST APPL
     on APPL.COMPANY_CD = ORG.CORPORATION_CODE and APPL.PAY_APPL_CD = ORG.EXTENDED_INFO_01 and APPL.DLT_FG = '0'
   left join HLDTAX_MST HLDTAX
     on HLDTAX.COMPANY_CD = KNTN.COMPANY_CD and HLDTAX.HLDTAX_TP = '017'

#仕入明細情報の一括インサート
PO0040_17: |+
 insert into /* PO0040_17 */ BUYDTL_INF (
   COMPANY_CD, BUY_NO, BUY_DTL_NO, RCVINSP_NO, RCVINSP_DTL_NO, JRNSLP_NO, JRNSLP_DTL_NO, PURORD_DTL_TP, ORGNZ_CD, ITMEXPS_CD1
   , ITMEXPS_CD2, ITM_TP1, ITM_TP2, ITM_TP3, ITM_CD, ITM_NM, BUMON_CD, ANLYS_CD, ASST_TP, PURORD_QNT
   , RCVINSP_QNT, UNT_CD, PURORD_UC_JPY, PURORD_AMT_JPY, PURORD_AMT_JPY_INCTAX, RCVINSP_UC_JPY, RCVINSP_AMT_JPY, RCVINSP_AMT_JPY_INCTAX, BUY_UC_JPY, BUY_AMT_JPY, BUY_AMT_JPY_INCTAX, MNY_CD, ADD_RTO
   , PURORD_UC_FC, PURORD_AMT_FC, RCVINSP_UC_FC, RCVINSP_AMT_FC, BUY_UC_FC, BUY_AMT_FC, TAX_FG, TAX_CD, RCVINSP_SMRY, APPL_CONT
   , CTRCT_TP, BRKDWN_TP, APPL_PRD_S_DT, APPL_PRD_E_DT, HLDTAX_TP, HLDTAX_RTO, HLDTAX_AMT, ADVPAY_NO, INV_COMPANY_CD, DLT_FG
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   KNTN.COMPANY_CD, KNTN.BUY_NO, KNTN.BUY_DTL_NO, KNTN.RCVINSP_NO, KNTN.RCVINSP_DTL_NO, NULL, NULL, NULL, ?, KNTN.ITMEXPS_CD1
   , KNTN.ITMEXPS_CD2, NULL, NULL, NULL, KNTN.EVNT_MNG_NO, KNTN.EVNT_CONT, KNTN.BUMON_CD, KNTN.ANLYS_CD, '0', NULL
   , NULL, NULL, NULL, KNTN.TTL_AMT_EXCTAX, KNTN.TTL_AMT_INCTAX, NULL, KNTN.TTL_AMT_EXCTAX, KNTN.TTL_AMT_INCTAX, NULL, KNTN.TTL_AMT_EXCTAX, KNTN.TTL_AMT_INCTAX, 'JPY', 1
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, KNTN.TAX_CD, KNTN.SMRY, NULL
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '0'
   , KNTN.TAX_SBJ_TP, KNTN.TAX_KND_CD, KNTN.TAX_FG_CHG
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      A.COMPANY_CD, A.BUY_NO, A.BUY_DTL_NO, A.RCVINSP_NO, A.RCVINSP_DTL_NO, A.ITMEXPS_CD1, A.ITMEXPS_CD2
      , A.EVNT_MNG_NO, A.EVNT_CONT, A.BUMON_CD, A.ANLYS_CD, A.SMRY, A.TAX_CD, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG, A.TTL_AMT as TTL_AMT_EXCTAX
      , case A.TAX_FG when '2' then ROUND(A.TTL_AMT * (B.TAX_RTO + 100) / 100) else A.TTL_AMT end as TTL_AMT_INCTAX
    from
      (select
         row_number() over (partition by COMPANY_CD, EXHB_YM, SPLR_CD order by COMPANY_CD, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2) BUY_DTL_NO
         , row_number() over (partition by COMPANY_CD, EXHB_YM, SPLR_CD order by COMPANY_CD, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2) RCVINSP_DTL_NO
         , sum(INV_AMT + TRNSP_EXP_AMT + ADJ_TRNSP_EXP_AMT) as TTL_AMT
         , COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, EVNT_CONT, BUMON_CD, ANLYS_CD, SMRY, ITMEXPS_CD1, ITMEXPS_CD2, RCVINSP_NO, BUY_NO
         , TAX_FG, TAX_CD, TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG, max(EXHB_DT) AS EXHB_DT
       from
         KNTN_INF
       where
         COMPANY_CD = ? and LOT_NO = ?
       group by
         COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, EVNT_CONT, BUMON_CD, ANLYS_CD, SMRY, ITMEXPS_CD1, ITMEXPS_CD2, RCVINSP_NO, BUY_NO
         , TAX_FG, TAX_CD, TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
      ) A
      inner join TAX_MST B
        on B.COMPANY_CD = A.COMPANY_CD and B.TAX_CD = A.TAX_CD and trunc(A.EXHB_DT) between B.VD_DT_S and B.VD_DT_E and B.DLT_FG = '0'
   ) KNTN

#WF支払依頼へ設定するデータ抽出
PO0040_18: |+
 select /* PO0040_18 */
   KNTN.COMPANY_CD AS COMPANY_CD, NULL AS PAY_NO, '30' AS PAY_STS, NULL AS PAYHYS_NO_R_RCNT, NULL AS PAYHYS_NO_B_RCNT
   , NULL AS CONTRCT_NO, substr('20' || substr(LOT_NO, 2) || KNTN.PRDCT_NM, 1, 30) AS PAY_NM, '1' AS PURORD_TP, NULL AS PUR_TP1, NULL AS PUR_TP2
   , NULL AS ASST_TP, ? AS SBMTR_CD, ? AS SBMT_DPT_CD, ? AS SBMT_DPT_NM, NULL AS SBMT_DPT_DT
   , NULL AS BUMON_CD, NULL AS ANLYS_CD, KNTN.SPLR_CD AS SPLR_CD, SPLR.SPLR_NM_KJ AS SPLR_NM_KJ, SPLR.SPLR_NM_KN AS SPLR_NM_KN
   , SPLR.CRP_PRS_TP AS CRP_PRS_TP, SPLR.DMS_ABR_TP AS DMS_ABR_TP, BNKACC.PAYEE_BNKACC_CD AS PAYEE_BNKACC_CD, BNKACC.BNK_CD AS PAYEE_BNK_CD, BNKACC.BNKBRC_CD AS PAYEE_BNKBRC_CD
   , BNKACC.BNKACC_TP AS PAYEE_BNKACC_TP, BNKACC.BNKACC_NO AS PAYEE_BNKACC_NO, BNKACC.BNKACC_NM AS PAYEE_BNKACC_NM, BNKACC.BNKACC_NM_KN AS PAYEE_BNKACC_NM_KN, SITE.PAY_SITE_CD AS PAY_SITE_CD
   , NULL AS RCVINSP_USE_YM_S, NULL AS RCVINSP_USE_YM_E, to_char(KNTN.EXHB_DT, 'YYYY/MM') AS RCVINSP_YM, to_char(KNTN.EXHB_DT, 'YYYY/MM') AS RCVINSP_YM_S, to_char(KNTN.EXHB_DT, 'YYYY/MM') AS RCVINSP_YM_E
   , trunc(SYSDATE) AS PAY_RQST_DT, last_day(add_months(trunc(KNTN.EXHB_DT), 1)) AS PAY_PLN_DT, NULL AS PAY_RSLT_DT, KNTN.TTL_AMT_EXCTAX AS PAY_AMT_EXCTAX
   , (KNTN.TTLAMT_INCTAX1 + KNTN.TTLAMT_INCTAX2 + KNTN.TTLAMT_INCTAX3 + KNTN.TTLAMT_INCTAX4 - KNTN.TTL_AMT_EXCTAX) AS PAY_AMT_TAX
   , (KNTN.TTLAMT_INCTAX1 + KNTN.TTLAMT_INCTAX2 + KNTN.TTLAMT_INCTAX3 + KNTN.TTLAMT_INCTAX4) AS PAY_AMT_INCTAX
   , NULL AS MSG, '10' AS PAY_MTH, NULL AS PAY_COND_CD, NULL AS PAY_COND_NM, NULL AS PAY_COND_CHGRSN
   , '0' AS PRD_PURORD_TP, NULL AS PRD_PURORD_NO, NULL AS RTN_PAY_NO, ? AS ORGNZ_CD, KNTN.LOT_NO AS LOT_NO
   , NULL AS INVSHT_TP, BNKACC.SRC_BNKACC_CD AS BNKACC_CD, '1' AS MNY_TP, MNY.MNY_CD AS MNY_CD, 1 AS ADD_RTO
   , APPL.PAY_APPL_CD AS PAY_APPL_CD, '0' AS ADVPAY_TP, KNTN.TAX_UNT AS TAX_UNT, KNTN.TAX_FG AS TAX_FG, KNTN.TAX_CD AS TAX_CD
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_TP else NULL end AS HLDTAX_TP
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_RTO1 else NULL end AS HLDTAX_RTO
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_RTO2 else NULL end AS HLDTAX_RTO2
   , case when SPLR.CRP_PRS_TP = '2' then KNTN.TTL_AMT_EXCTAX else NULL end AS HLDTAX_SBJ_AMT
   , case
      when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX <= 1000000 then trunc(KNTN.TTL_AMT_EXCTAX * HLDTAX.HLDTAX_RTO1 / 100)
      when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX > 1000000 then trunc((KNTN.TTL_AMT_EXCTAX - 1000000) * HLDTAX.HLDTAX_RTO2 / 100) + 102100
      else NULL
     end AS HLDTAX_AMT
   , case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_FG else NULL end AS HLDTAX_FG
   , NULL AS IMP_TAX_TP, NULL AS CHRG_BNKACC_CD, NULL AS PAY_APPL_TP, 'NEW' AS NEW_FG, '0' AS ADVPAY_FG, ? AS SBMTR_NM, BNKACC.BNK_NM AS PAYEE_BNK_NM
   , BNKACC.BNKBRC_NM AS PAYEE_BNKBRC_NM, BNKACC.BNKACC_TP_NM AS PAYEE_BNKACC_TP_NM, BNKACC.PAY_CMM_OBL_TP AS PAY_CMM_OBL_TP, BNKACC.HLD_TRT_TP AS HLD_TRT_TP, SITE.PAY_SITE_NM AS PAY_SITE_NM
   , KNTN.TAX_NM AS TAX_NM, KNTN.TAX_TP AS TAX_TP, KNTN.TAX_RTO AS TAX_RTO, case when SPLR.CRP_PRS_TP = '2' then HLDTAX.HLDTAX_NM else NULL end AS HLDTAX_TP_NM, ? AS SBMTR_ADDR_CD, BNKACC.SRC_BNKACC_NM AS BNKACC_NM
   , ? AS SBMTR_ADDR, APPL.PAY_APPL_NM AS PAY_APPL_NM, MNY.MNY_NM AS MNY_NM, MNY.RDXPNT_GDT AS RDXPNT_GDT, '1' AS CPRT_FG
   , (KNTN.TTLAMT_INCTAX1 + KNTN.TTLAMT_INCTAX2 + KNTN.TTLAMT_INCTAX3 + KNTN.TTLAMT_INCTAX4) - (
     case
       when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX <= 1000000 then trunc(KNTN.TTL_AMT_EXCTAX * HLDTAX.HLDTAX_RTO1 / 100)
       when SPLR.CRP_PRS_TP = '2' and KNTN.TTL_AMT_EXCTAX > 1000000 then trunc((KNTN.TTL_AMT_EXCTAX - 1000000) * HLDTAX.HLDTAX_RTO2 / 100) + 102100
       else 0
     end) as PAY_AMT
   , '1' as BKBND_CHG_TP, '1' as MAIL_TP, NULL as MAIL_RMK, SPLR.ZIP_CD as SHT_TO_ZIP_CD, SPLR.ADR_PRF_CD as SHT_ADR_PRF_CD, SPLR.ADR_PRF as SHT_ADR_PRF
   , SPLR.ADR1 as SHT_ADR1, SPLR.ADR2 as SHT_ADR2, SPLR.ADR3 as SHT_ADR3,  NULL as SHT_PIC_NM, NULL as SHT_DPT_NM, NULL as SHT_MLADR, NULL as SHT_TEL_NO, '0' as ADVCST_MRK
   , NULL as TAX_SBJ_TP, NULL as TAX_KND_CD, NULL as TAX_FG_CHG
   , KNTN.TTLAMT_EXCTAX1 as TTLAMT_EXCTAX1, (KNTN.TTLAMT_INCTAX1 - KNTN.TTLAMT_EXCTAX1) as TTLAMT_TAX1, KNTN.TTLAMT_INCTAX1 as TTLAMT_INCTAX1
   , KNTN.TTLAMT_EXCTAX2 as TTLAMT_EXCTAX2, (KNTN.TTLAMT_INCTAX2 - KNTN.TTLAMT_EXCTAX2) as TTLAMT_TAX2, KNTN.TTLAMT_INCTAX2 as TTLAMT_INCTAX2
   , KNTN.TTLAMT_EXCTAX3 as TTLAMT_EXCTAX3, (KNTN.TTLAMT_INCTAX3 - KNTN.TTLAMT_EXCTAX3) as TTLAMT_TAX3, KNTN.TTLAMT_INCTAX3 as TTLAMT_INCTAX3
   , KNTN.TTLAMT_EXCTAX1_FG as TTLAMT_EXCTAX1_FG, KNTN.TTLAMT_EXCTAX2_FG as TTLAMT_EXCTAX2_FG, KNTN.TTLAMT_EXCTAX3_FG as TTLAMT_EXCTAX3_FG
 from
  (select
     KNTN1.COMPANY_CD, KNTN1.LOT_NO, KNTN1.EXHB_YM, KNTN1.SPLR_CD, KNTN1.PRDCT_NM, KNTN1.TAX_UNT, KNTN1.EXHB_DT
     , NULL as TAX_CD, NULL as TAX_NM, NULL as TAX_TP, NULL as TAX_RTO, NULL as TAX_FG
     , KNTN2.TTL_AMT_EXCTAX, KNTN2.TTL_AMT_INCTAX, KNTN2.TTLAMT_EXCTAX1, KNTN2.TTLAMT_EXCTAX2, KNTN2.TTLAMT_EXCTAX3
     , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX1 * 110 / 100) else KNTN2.TTLAMT_INCTAX1 end as TTLAMT_INCTAX1
     , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX2 * 108 / 100) else KNTN2.TTLAMT_INCTAX2 end as TTLAMT_INCTAX2
     , case KNTN1.TAX_UNT when '3' then ROUND(KNTN2.TTLAMT_EXCTAX3 * 108 / 100) else KNTN2.TTLAMT_INCTAX3 end as TTLAMT_INCTAX3
     , KNTN2.TTLAMT_EXCTAX4, KNTN2.TTLAMT_INCTAX4
     , case when KNTN1.TAX_UNT = '3' AND KNTN2.TTLAMT_EXCTAX1_FG_COUNT > 0 then '1' else '0' end as TTLAMT_EXCTAX1_FG
     , case when KNTN1.TAX_UNT = '3' AND KNTN2.TTLAMT_EXCTAX2_FG_COUNT > 0 then '1' else '0' end as TTLAMT_EXCTAX2_FG
     , case when KNTN1.TAX_UNT = '3' AND KNTN2.TTLAMT_EXCTAX3_FG_COUNT > 0 then '1' else '0' end as TTLAMT_EXCTAX3_FG
   from
     (select
        COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, PRDCT_NM, TAX_UNT, max(EXHB_DT) AS EXHB_DT
      from
        KNTN_INF
      where
        COMPANY_CD = ? and LOT_NO = ? and EXHB_YM = ? and SPLR_CD = ?
      group by
        COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, PRDCT_NM, TAX_UNT
     ) KNTN1
     inner join
       (select
          COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, sum(TTL_AMT) as TTL_AMT, sum(TTL_AMT_EXCTAX) as TTL_AMT_EXCTAX, sum(TTL_AMT_INCTAX) as TTL_AMT_INCTAX
          , sum(case TAX_FG_CHG when '1' then TTL_AMT_EXCTAX when '4' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX1
          , sum(case TAX_FG_CHG when '1' then TTL_AMT_INCTAX when '4' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX1
          , sum(case TAX_FG_CHG when '2' then TTL_AMT_EXCTAX when '5' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX2
          , sum(case TAX_FG_CHG when '2' then TTL_AMT_INCTAX when '5' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX2
          , sum(case TAX_FG_CHG when '3' then TTL_AMT_EXCTAX when '6' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX3
          , sum(case TAX_FG_CHG when '3' then TTL_AMT_INCTAX when '6' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX3
          , sum(case TAX_FG_CHG when '7' then TTL_AMT_EXCTAX when '8' then TTL_AMT_EXCTAX when '9' then TTL_AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX4
          , sum(case TAX_FG_CHG when '7' then TTL_AMT_INCTAX when '8' then TTL_AMT_INCTAX when '9' then TTL_AMT_INCTAX else 0 end) as TTLAMT_INCTAX4
          , sum(case TAX_FG_CHG when '4' then 1 else 0 end) as TTLAMT_EXCTAX1_FG_COUNT
          , sum(case TAX_FG_CHG when '5' then 1 else 0 end) as TTLAMT_EXCTAX2_FG_COUNT
          , sum(case TAX_FG_CHG when '6' then 1 else 0 end) as TTLAMT_EXCTAX3_FG_COUNT
        from
          (select
             A.COMPANY_CD, A.LOT_NO, A.EXHB_YM, A.SPLR_CD, A.TTL_AMT, A.TAX_FG_CHG
             , case A.TAX_FG when '1' then ROUND(A.TTL_AMT / (B.TAX_RTO + 100) * 100) else A.TTL_AMT end as TTL_AMT_EXCTAX
             , case A.TAX_FG when '2' then ROUND(A.TTL_AMT * (B.TAX_RTO + 100) / 100) else A.TTL_AMT end as TTL_AMT_INCTAX
           from
             (select
                sum(INV_AMT + TRNSP_EXP_AMT + ADJ_TRNSP_EXP_AMT) as TTL_AMT
                , COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, TAX_CD, TAX_FG, TAX_FG_CHG, max(EXHB_DT) AS EXHB_DT
              from
                KNTN_INF
              group by
                COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, TAX_FG, TAX_FG_CHG
             ) A
             inner join TAX_MST B
               on B.COMPANY_CD = A.COMPANY_CD and B.TAX_CD = A.TAX_CD and trunc(A.EXHB_DT) between B.VD_DT_S and B.VD_DT_E and B.DLT_FG = '0'
          ) C
        group by
          COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD
       ) KNTN2
       on KNTN1.COMPANY_CD = KNTN2.COMPANY_CD and KNTN1.LOT_NO = KNTN2.LOT_NO and KNTN1.EXHB_YM = KNTN2.EXHB_YM and KNTN1.SPLR_CD = KNTN2.SPLR_CD
  ) KNTN
   inner join SPLR_MST SPLR
     on SPLR.COMPANY_CD = KNTN.COMPANY_CD and SPLR.SPLR_CD = KNTN.SPLR_CD and SPLR.DLT_FG = '0' and trunc(SYSDATE) BETWEEN SPLR.VD_DT_S and SPLR.VD_DT_E
   inner join
     (select *
      from
        (select
           row_number() over (partition by COMPANY_CD, SPLR_CD order by COMPANY_CD, SPLR_CD, PAYEE_BNKACC_CD_SS ASC) AS ROWNO
           , COMPANY_CD, SPLR_CD, PAYEE_BNKACC_CD, BNK_CD, BNKBRC_CD, BNKACC_TP, BNKACC_NO, BNKACC_NM, BNKACC_NM_KN
           , BNK_NM, BNKBRC_NM, BNKACC_TP_NM, PAY_CMM_OBL_TP, HLD_TRT_TP, SRC_BNKACC_CD, SRC_BNKACC_NM
         from
           PAYEE_BNKACC_MST_V
         where
           last_day(add_months(to_date(?, 'yyyyMM'), 1)) between VD_DT_S and VD_DT_E
           and PAYEE_BNKACC_CD_SS is not null
        )
      where ROWNO = 1
     ) BNKACC
     on BNKACC.COMPANY_CD = SPLR.COMPANY_CD and BNKACC.SPLR_CD = SPLR.SPLR_CD
   inner join MNY_MST MNY
     on MNY.COMPANY_CD = KNTN.COMPANY_CD and MNY.MNY_CD = 'JPY'
   left join PAY_SITE_MST SITE
     on SITE.COMPANY_CD = KNTN.COMPANY_CD and SITE.PAY_SITE_CD = '990199' and SITE.DLT_FG = '0'
   left join WFM_ORGANIZATION ORG
     on ORG.CORPORATION_CODE = ? and ORG.ORGANIZATION_CODE = ?
   left join PAY_APPL_MST APPL
     on APPL.COMPANY_CD = ORG.CORPORATION_CODE and APPL.PAY_APPL_CD = ORG.EXTENDED_INFO_01 and APPL.DLT_FG = '0'
   left join V_HLDTAX_MST HLDTAX
     on HLDTAX.COMPANY_CD = KNTN.COMPANY_CD and HLDTAX.HLDTAX_TP = '017'

#WF支払依頼(明細)へ設定するデータ抽出
PO0040_19: |+
 select /* PO0040_19 */
   KNTN.COMPANY_CD AS COMPANY_CD, KNTN.RCVINSP_NO || '-' || lpad(KNTN.RCVINSP_DTL_NO, 4, '0') as DISP_RCVINSP_NO, KNTN.RCVINSP_NO AS RCVINSP_NO, KNTN.RCVINSP_DTL_NO AS RCVINSP_DTL_NO
   , ? AS ORGNZ_CD, ITMEXPS.ITMEXPS_CD1 AS ITMEXPS_CD1, ITMEXPS.ITMEXPS_NM1 AS ITMEXPS_NM1, ITMEXPS.ITMEXPS_CD2 AS ITMEXPS_CD2, ITMEXPS.ITMEXPS_NM2 AS ITMEXPS_NM2, KNTN.EVNT_MNG_NO AS ITM_CD, KNTN.EVNT_CONT AS ITM_NM
   , KNTN.BUMON_CD AS BUMON_CD, KNTN.ANLYS_CD AS ANLYS_CD, '0' AS ASST_TP
   , KNTN.TTL_AMT AS PAY_AMT, KNTN.TTL_AMT_EXCTAX AS PAY_AMT_EXCTAX, KNTN.TTL_AMT_INCTAX AS PAY_AMT_INCTAX
   , KNTN.TAX_FG AS TAX_FG, KNTN.TAX_CD AS TAX_CD, KNTN.TAX_NM AS TAX_NM, KNTN.TAX_TP AS TAX_TP, KNTN.TAX_RTO AS TAX_RTO
   , KNTN.SMRY AS PAY_SMRY, KNTN.TTL_AMT AS RCVINSP_AMT, '0' AS IPT_NM_FG, ITMEXPS.SLP_GRP_GL AS SLP_GRP_GL, ITMEXPS.CST_TP AS CST_TP
   , KNTN.TAX_SBJ_TP, KNTN.TAX_KND_CD, KNTN.TAX_FG_CHG, 'JPY' as MNY_CD, '1' as MNY_TP
 from
   (select
      A.COMPANY_CD, A.RCVINSP_NO, A.RCVINSP_DTL_NO, A.ITMEXPS_CD1, A.ITMEXPS_CD2
      , A.EVNT_MNG_NO, A.EVNT_CONT, A.BUMON_CD, A.ANLYS_CD, A.SMRY, A.TTL_AMT, A.TAX_CD, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
      , case A.TAX_FG when '1' then ROUND(A.TTL_AMT / (B.TAX_RTO + 100) * 100) else A.TTL_AMT end as TTL_AMT_EXCTAX
      , case A.TAX_FG when '2' then ROUND(A.TTL_AMT * (B.TAX_RTO + 100) / 100) else A.TTL_AMT end as TTL_AMT_INCTAX
      , B.TAX_NM, B.TAX_TP, B.TAX_RTO, NULL AS TAX_FG
    from
      (select
         row_number() over (partition by COMPANY_CD, EXHB_YM, SPLR_CD order by COMPANY_CD, EXHB_YM, SPLR_CD, EVNT_MNG_NO, ITMEXPS_CD1, ITMEXPS_CD2) RCVINSP_DTL_NO
         , sum(INV_AMT + TRNSP_EXP_AMT + ADJ_TRNSP_EXP_AMT) as TTL_AMT
         , COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, EVNT_CONT, BUMON_CD, ANLYS_CD, SMRY, ITMEXPS_CD1, ITMEXPS_CD2, RCVINSP_NO
         , TAX_FG, TAX_CD, TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG, max(EXHB_DT) AS EXHB_DT
       from
         KNTN_INF
       where
         COMPANY_CD = ? and LOT_NO = ? and EXHB_YM = ? and SPLR_CD = ?
       group by
         COMPANY_CD, LOT_NO, EXHB_YM, SPLR_CD, EVNT_MNG_NO, EVNT_CONT, BUMON_CD, ANLYS_CD, SMRY, ITMEXPS_CD1, ITMEXPS_CD2, RCVINSP_NO
         , TAX_FG, TAX_CD, TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
      ) A
      inner join V_TAX_FG_CHG B
        on B.COMPANY_CD = A.COMPANY_CD and B.TAX_SBJ_TP = A.TAX_SBJ_TP and B.TAX_KND_CD = A.TAX_KND_CD and B.TAX_FG_CHG = A.TAX_FG_CHG
        and trunc(A.EXHB_DT) between B.VD_DT_S and B.VD_DT_E and B.LOCALE_CODE = 'ja' and B.MNY_TP = '1'
   ) KNTN
   inner join ITMEXPS_CHRMST_V ITMEXPS
     on ITMEXPS.COMPANY_CD = KNTN.COMPANY_CD and ITMEXPS.ITMEXPS_CD1 = KNTN.ITMEXPS_CD1 and ITMEXPS.ITMEXPS_CD2 = KNTN.ITMEXPS_CD2 and ITMEXPS.ORGNZ_CD_SRCH = ? and ITMEXPS.DLT_FG = '0'
 order by
   KNTN.EVNT_MNG_NO, KNTN.ITMEXPS_CD1, KNTN.ITMEXPS_CD2

#画面プロセス定義の抽出
PO0040_20: |+
 select /* PO0040_20 */ *
 from MWM_SCREEN_PROCESS_DEF
 where CORPORATION_CODE = ?
   and SCREEN_PROCESS_CODE = ?
   and trunc(sysdate) between VALID_START_DATE and VALID_END_DATE
   and DELETE_FLAG = '0'

#発注情報の一括削除
PO0040_21: |+
 delete /* PO0040_21 */
 from PURORD_INF A
 where exists (
   select 1 from KNTN_INF B where B.COMPANY_CD = A.COMPANY_CD and B.PURORD_NO = A.PURORD_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#発注明細情報の一括削除
PO0040_22: |+
 delete /* PO0040_22 */
 from PURORDDTL_INF A
 where exists (
   select 1 from KNTN_INF B where B.COMPANY_CD = A.COMPANY_CD and B.PURORD_NO = A.PURORD_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#検収情報の一括削除
PO0040_23: |+
 delete /* PO0040_23 */
 from RCVINSP_INF A
 where exists (
   select 1 from KNTN_INF B where B.COMPANY_CD = A.COMPANY_CD and B.RCVINSP_NO = A.RCVINSP_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#検収明細情報の一括削除
PO0040_24: |+
 delete /* PO0040_24 */
 from RCVINSPDTL_INF A
 where exists (
   select 1 from KNTN_INF B where B.COMPANY_CD = A.COMPANY_CD and B.RCVINSP_NO = A.RCVINSP_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#仕入情報の一括削除(仕入Noではなく検収Noを使っての削除なので注意)
PO0040_25: |+
 delete /* PO0040_25 */
 from BUY_INF A
 where exists (
   select 1 from KNTN_INF B where B.COMPANY_CD = A.COMPANY_CD and B.RCVINSP_NO = A.RCVINSP_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#仕入明細情報の一括削除(仕入Noではなく検収Noを使っての削除なので注意)
PO0040_26: |+
 delete /* PO0040_26 */
 from BUYDTL_INF A
 where exists (
   select 1 from KNTN_INF B where B.COMPANY_CD = A.COMPANY_CD and B.RCVINSP_NO = A.RCVINSP_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#kintone情報の一括削除
PO0040_27: |+
 delete /* PO0040_27 */
 from KNTN_INF
 where COMPANY_CD = ? and LOT_NO = ?

#プロセスインスタンスの一括削除
PO0040_28: |+
 delete /* PO0040_28 */
 from WFT_PROCESS A
 where exists (
   select 1 from MWT_PAY B where A.CORPORATION_CODE = B.CORPORATION_CODE and B.PROCESS_ID = A.PROCESS_ID and B.COMPANY_CD = ? and B.LOT_NO = rpad(?, 7)
 )

#SS-GR連携処理
PO0040_29: |+
 {call PKG_SS_SEND_RCV.SS_SEND_MAIN(?,?,?,?,?,?,?)}

#検収取消処理
PO0040_30: |+
 {call PKG_RECEIVE_INSPECTION.CANCEL(?,?,?,?,?,?,?)}

#費目コード一覧の抽出
PO0040_31: |+
 select /* PO0040_31 */ *
 from ITMEXPS_MST
 where COMPANY_CD = ? and DLT_FG = '0'

#費目関連2マスタ一覧の抽出
PO0040_32: |+
 select /* PO0040_32 */ *
 from ITMEXPS2_CHRMST
 where COMPANY_CD = ? and ORGNZ_CD in ('##########', ?) and DLT_FG = '0'

#費目関連1マスタ一覧の抽出
PO0040_33: |+
 select /* PO0040_33 */ *
 from ITMEXPS1_CHRMST
 where COMPANY_CD = ? and DLT_FG = '0'

#仕入No採番
PO0040_34: |+
 {? = call PKG_SS_SEND_COMMON.GET_NEW_BUY_NO(?,?,?)}

#WF支払情報の一括削除
PO0040_35: |+
 delete /* PO0040_35 */
 from MWT_PAY
 where COMPANY_CD = ? and LOT_NO = rpad(?, 7)

#WF支払明細情報の一括削除
PO0040_36: |+
 delete /* PO0040_36 */
 from MWT_PAYDTL A
 where exists (
   select 1 from MWT_PAY B where A.PARENT_RUNTIME_ID = B.RUNTIME_ID and B.COMPANY_CD = ? and B.LOT_NO = rpad(?, 7)
 )

#会計カレンダマスタの存在チェック
PO0040_37: |+
 select /* PO0040_37 */ count(*)
 from ACC_CLND_MST
 where COMPANY_CD = ? and CLND_DT = trunc(SYSDATE) and DLT_FG = '0'

#WF発注情報作成処理
PO0040_38: |+
 {call PKG_CREATE_WF_APPLY.CREATE_WF_PURORD(?,?,?,?,?,?,?)}

#WF検収情報作成処理
PO0040_39: |+
 {call PKG_CREATE_WF_APPLY.CREATE_WF_RCVINSP(?,?,?,?,?,?,?)}

#WF発注情報の一括削除
PO0040_40: |+
 delete /* PO0040_40 */
 from MWT_PURCHASE_ORDER A
 where exists (
   select 1
   from WFT_PROCESS P inner join KNTN_INF B on B.PURORD_NO = P.APPLICATION_NO
   where P.CORPORATION_CODE = A.CORPORATION_CODE and P.PROCESS_ID = A.PROCESS_ID
     and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#WF発注明細情報の一括削除
PO0040_41: |+
 delete /* PO0040_41 */
 from MWT_PURCHASE_ORDER_DETAIL A
 where exists (
   select 1
   from WFT_PROCESS P inner join KNTN_INF B on B.PURORD_NO = P.APPLICATION_NO
   where P.CORPORATION_CODE = A.CORPORATION_CODE and P.PROCESS_ID = A.PROCESS_ID
     and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#WF検収情報の一括削除
PO0040_42: |+
 delete /* PO0040_42 */
 from MWT_RCVINSP A
 where exists (
   select 1
   from WFT_PROCESS P inner join KNTN_INF B on B.RCVINSP_NO = P.APPLICATION_NO
   where P.CORPORATION_CODE = A.CORPORATION_CODE and P.PROCESS_ID = A.PROCESS_ID
     and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#WF検収明細情報の一括削除
PO0040_43: |+
 delete /* PO0040_43 */
 from MWT_RCVINSP_DETAIL A
 where exists (
   select 1
   from WFT_PROCESS P inner join KNTN_INF B on B.RCVINSP_NO = P.APPLICATION_NO
   where P.CORPORATION_CODE = A.CORPORATION_CODE and P.PROCESS_ID = A.PROCESS_ID
     and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#WF発注申請のプロセスインスタンスの一括削除
PO0040_44: |+
 delete /* PO0040_44 */
 from WFT_PROCESS P
 where exists (
   select 1 from KNTN_INF B where B.PURORD_NO = P.APPLICATION_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#WF検収申請のプロセスインスタンスの一括削除
PO0040_45: |+
 delete /* PO0040_45 */
 from WFT_PROCESS P
 where exists (
   select 1 from KNTN_INF B where B.RCVINSP_NO = P.APPLICATION_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#消費税フラグ(税率変更)ビューの一覧取得
PO0040_46: |+
 select /* PO0040_46 */ rownum as ID, A.*
 from V_TAX_FG_CHG A
 where A.COMPANY_CD = ? and A.LOCALE_CODE = ? and A.MNY_TP = '1'

#ロットNoによる通販情報の件数取得
PO0050_01: |+
 select /* PO0050_01 */ count(*)
 from MLORD_INF
 where COMPANY_CD = ?
 and LOT_NO = ?

#通販情報へのインサート
PO0050_02: |+
 INSERT INTO /* PO0050_02 */ MLORD_INF( COMPANY_CD, LOT_NO, SQNO
  , SLP_NO, LN_NO, BUY_DT, BUY_CD, BUY_NM_KJ, ABST
  , CMMDT_CD, PRT_NO, CMMDT_TTL, QNT, UC, AMT
  , RMK, SPLR_CD, BUMON_CD, TAX_UNT, TAX_FG, TAX_CD
  , PURORD_NO, RCVINSP_NO, BUY_NO, PAY_NO, IN_YM, ITMEXPS_CD1, ITMEXPS_CD2
  , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG, DLT_FG
  , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
  , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 VALUES (?, ?, ?
  , ?, ?, to_date(?, 'yyyy/MM/dd'), ?, ?, ?
  , ?, ?, ?, nvl(?, 0), nvl(?, 0), nvl(?, 0)
  , ?, ?, ?, ?, ?, ?
  , ?, ?, ?, NULL, to_char(SYSDATE, 'YYYYMM'), ?, ?
  , ?, ?, ?, '0'
  , ?, ?, ?, systimestamp(3)
  , ?, ?, ?, systimestamp(3))

#発注情報の一括インサート
PO0050_03: |+
 insert into /* PO0050_03 */ PURORD_INF (
   COMPANY_CD, PURORD_NO, PURORD_STS, PURRQST_NO, CNTRCT_NO, PURORD_NM, PURORD_TP, PUR_TP1, PUR_TP2, ASST_TP
   , SBMTR_CD, SBMT_DPT_CD, SBMT_DPT_NM, SBMT_DPT_DT, BUMON_CD, ANLYS_CD, PURORDR, SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN
   , PURORD_AMT_EXCTAX, PURORD_AMT_INCTAX, PURORD_RQST_DT, PURORD_PLN_DT, DLV_PLN_DT, PAY_PLN_DT, DLV_DT, RCVINSP_YM, RCVINSP_YM_S, RCVINSP_YM_E
   , PAY_MTH, PURORDSHT_FRMT, DOC_MAIL_TP, PURORD_RQST_CONT, PURPS, PURORDSHT_TO_ZIP_CD, PURORDSHT_TO_ADR, PURORDSHT_TO_COMPANY_NM, PURORDSHT_TO_DPT_NM, PURORDSHT_TO_PIC_NM
   , PURORDSHT_TO_TEL_NO, DLV_LC, RMK, INSP_COMP_DT, DLV_OBJ, ABST_IN, NTFY_TO, SPRT_TP, SPRT_CNT, CMPT_ESTM_TP
   , SLCT_RSN, INV_EVD_TP, PAY_COND_CD, PAY_COND_NM, PRL_PURORD_DT, OWN_COMPANY_COMPANY_NM, OWN_COMPANY_ADR, OWN_COMPANY_PIC_NM, OTH_PRTY_COMPANY_NM, OTH_PRTY_ADR
   , OTH_PRTY_PIC_NM, PURORDSHT_SP_INSTR, PURORD_RCPTSHT_SP_INSTR, MNY_TP, MNY_CD, ADD_RTO, STMP_TP, PRD_PURORD_TP, PRD_PURORD_NO, ORGNZ_CD, LOT_NO
   , PAY_SITE_CD, PAY_APPL_CD, ADVPAY_TP, PURORD_RCPTSHT_TP, PURORD_RCPTSHT_RSN, TAX_UNT, TAX_FG, TAX_CD, HLDTAX_TP, HLDTAX_RTO
   , HLDTAX_SBJ_AMT, HLDTAX_AMT, IMP_TAX_TP, CHRG_BNKACC_CD, PAY_APPL_TP, DLT_FG
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK, SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF, SHT_ADR1, SHT_ADR2, SHT_ADR3, SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO, ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , TTLAMT_EXCTAX1, TTLAMT_TAX1, TTLAMT_INCTAX1
   , TTLAMT_EXCTAX2, TTLAMT_TAX2, TTLAMT_INCTAX2
   , TTLAMT_EXCTAX3, TTLAMT_TAX3, TTLAMT_INCTAX3
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   MLORD.COMPANY_CD, MLORD.PURORD_NO, '20', NULL, NULL, substr('20' || substr(LOT_NO, 2, 4) || SPLR.SPLR_NM_KJ, 1, 30), '1', NULL, NULL, NULL
   , ?, ?, ?, trunc(SYSDATE), NULL, NULL, NULL, MLORD.SPLR_CD, SPLR.SPLR_NM_KJ, SPLR.SPLR_NM_KN
   , MLORD.TTL_AMT_EXCTAX, MLORD.TTL_AMT_INCTAX, trunc(MLORD.TGT_YM, 'MONTH'), NULL, last_day(trunc(MLORD.TGT_YM)), last_day(add_months(trunc(MLORD.TGT_YM), 1)), last_day(trunc(MLORD.TGT_YM)), to_char(MLORD.TGT_YM, 'YYYYMM'), to_char(MLORD.TGT_YM, 'YYYYMM'), to_char(MLORD.TGT_YM, 'YYYYMM')
   , '10', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
   , NULL, '加賀倉庫（委託契約を除く）', NULL, last_day(trunc(SYSDATE)), NULL, NULL, NULL, NULL, NULL, '0'
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, '1', 'JPY', 1, '9', '0', NULL, ?, MLORD.LOT_NO
   , '990199', APPL.PAY_APPL_CD, '0', '0', NULL, '3', NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, NULL, NULL, '0'
   , '1', '1', NULL, SPLR.ZIP_CD, SPLR.ADR_PRF_CD, SPLR.ADR_PRF, SPLR.ADR1, SPLR.ADR2, SPLR.ADR3, NULL, NULL, NULL, NULL, '0'
   , NULL, NULL, NULL
   , MLORD.TTLAMT_EXCTAX1, (MLORD.TTLAMT_INCTAX1 - MLORD.TTLAMT_EXCTAX1), MLORD.TTLAMT_INCTAX1
   , MLORD.TTLAMT_EXCTAX2, (MLORD.TTLAMT_INCTAX2 - MLORD.TTLAMT_EXCTAX2), MLORD.TTLAMT_INCTAX2
   , MLORD.TTLAMT_EXCTAX3, (MLORD.TTLAMT_INCTAX3 - MLORD.TTLAMT_EXCTAX3), MLORD.TTLAMT_INCTAX3
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
     A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.PURORD_NO, to_date(substr(A.LOT_NO, 2, 4), 'yyMM') as TGT_YM
     , sum(AMT_EXCTAX) as TTL_AMT_EXCTAX, sum(A.AMT_INCTAX) as TTL_AMT_INCTAX
     , sum(case A.TAX_FG_CHG when '1' then AMT_EXCTAX when '4' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX1
     , sum(case A.TAX_FG_CHG when '1' then AMT_INCTAX when '4' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX1
     , sum(case A.TAX_FG_CHG when '2' then AMT_EXCTAX when '5' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX2
     , sum(case A.TAX_FG_CHG when '2' then AMT_INCTAX when '5' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX2
     , sum(case A.TAX_FG_CHG when '3' then AMT_EXCTAX when '6' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX3
     , sum(case A.TAX_FG_CHG when '3' then AMT_INCTAX when '6' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX3
    from
     (select
        A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.PURORD_NO, A.TAX_FG_CHG, B.ACC_CD
        , case B.ACC_CD when '1500' then 0 else nvl(A.AMT, 0) end as AMT_EXCTAX, nvl(A.AMT, 0) as AMT_INCTAX
      from
        MLORD_INF A
        inner join ITMEXPS1_CHRMST B
          on B.COMPANY_CD = A.COMPANY_CD and B.ITMEXPS_CD1 = A.ITMEXPS_CD1 and B.ITMEXPS_CD2 = A.ITMEXPS_CD2
      where
        A.COMPANY_CD = ? and A.LOT_NO = ?
     ) A
    group by
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.PURORD_NO
   ) MLORD
   inner join SPLR_MST SPLR
     on SPLR.COMPANY_CD = MLORD.COMPANY_CD and SPLR.SPLR_CD = MLORD.SPLR_CD and SPLR.DLT_FG = '0' and trunc(SYSDATE) between SPLR.VD_DT_S and SPLR.VD_DT_E
   left join WFM_ORGANIZATION ORG
     on ORG.CORPORATION_CODE = ? and ORG.ORGANIZATION_CODE = ?
   left join PAY_APPL_MST APPL
     on APPL.COMPANY_CD = ORG.CORPORATION_CODE and APPL.PAY_APPL_CD = ORG.EXTENDED_INFO_01 and APPL.DLT_FG = '0'

#発注明細情報の一括インサート
PO0050_04: |+
 insert into /* PO0050_04 */ PURORDDTL_INF (
   COMPANY_CD, PURORD_NO, PURORD_DTL_NO, PURORD_DTL_TP, ORGNZ_CD, ITMEXPS_CD1, ITMEXPS_CD2, ITM_TP1, ITM_TP2, ITM_TP3
   , ITM_CD, ITM_NM, BUMON_CD, ANLYS_CD, ASST_TP, PURORD_QNT, RCVINSP_QNT, UNT_CD, PURORD_UC_JPY, PURORD_AMT_JPY, PURORD_AMT_JPY_INCTAX
   , MNY_CD, PURORD_UC_FC, PURORD_AMT_FC, TAX_FG, TAX_CD, PURORD_SMRY, APPL_CONT, CTRCT_TP, BRKDWN_TP, APPL_PRD_S_DT
   , APPL_PRD_E_DT, HLDTAX_TP, HLDTAX_RTO, HLDTAX_AMT, INV_COMPANY_CD, DLT_FG
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   MLORD.COMPANY_CD, MLORD.PURORD_NO, MLORD.PURORD_DTL_NO, NULL, ?, MLORD.ITMEXPS_CD1, MLORD.ITMEXPS_CD2, NULL, NULL, NULL
   , NULL, NULL, MLORD.BUMON_CD, NULL, NULL, NULL, NULL, NULL, NULL
   , case MLORD.TAX_FG when '1' then ROUND(MLORD.TTL_AMT / (TAX.TAX_RTO + 100) * 100) else MLORD.TTL_AMT end
   , case MLORD.TAX_FG when '2' then ROUND(MLORD.TTL_AMT * (TAX.TAX_RTO + 100) / 100) else MLORD.TTL_AMT end
   , 'JPY', NULL, NULL, NULL, MLORD.TAX_CD, MLORD2.CMMDT_TTL || '等', NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, NULL, NULL, '0'
   , MLORD.TAX_SBJ_TP, MLORD.TAX_KND_CD, MLORD.TAX_FG_CHG
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      row_number() over (partition by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD order by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.TAX_CD) PURORD_DTL_NO
      , sum(nvl(A.AMT, 0)) as TTL_AMT
      , A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.PURORD_NO, A.TAX_CD
      , A.TAX_FG, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
    from
      MLORD_INF A
      inner join ITMEXPS1_CHRMST B
        on B.COMPANY_CD = A.COMPANY_CD and B.ITMEXPS_CD1 = A.ITMEXPS_CD1 and B.ITMEXPS_CD2 = A.ITMEXPS_CD2
    where
      A.COMPANY_CD = ? and A.LOT_NO = ? and B.ACC_CD <> '1500'
    group by
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.PURORD_NO, A.TAX_CD
      , A.TAX_FG, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
   ) MLORD
   inner join
     (select
        COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, CMMDT_TTL
      from
        (select
           row_number() over (partition by COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD order by AMT desc, LN_NO asc) ROW_NO
           , COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, CMMDT_TTL
         from
           MLORD_INF
         where
           COMPANY_CD = ? and LOT_NO = ?
        )
      where ROW_NO = 1
     ) MLORD2
     on MLORD2.COMPANY_CD = MLORD.COMPANY_CD and MLORD2.LOT_NO = MLORD.LOT_NO and MLORD2.IN_YM = MLORD.IN_YM and MLORD2.SPLR_CD = MLORD.SPLR_CD
     and MLORD2.BUMON_CD = MLORD.BUMON_CD and MLORD2.ITMEXPS_CD1 = MLORD.ITMEXPS_CD1 and MLORD2.ITMEXPS_CD2 = MLORD.ITMEXPS_CD2 and MLORD2.TAX_CD = MLORD.TAX_CD
   inner join TAX_MST TAX
     on TAX.COMPANY_CD = MLORD.COMPANY_CD and TAX.TAX_CD = MLORD.TAX_CD and trunc(SYSDATE) between TAX.VD_DT_S and TAX.VD_DT_E and TAX.DLT_FG = '0'

#検収情報の一括インサート
PO0050_05: |+
 insert into /* PO0050_05 */ RCVINSP_INF (
   COMPANY_CD, RCVINSP_NO, RCVINSP_STS, BUY_NO_R_RCNT, BUY_NO_B_RCNT, RCVINSP_NM, PURORD_TP, SBMTR_CD, SBMT_DPT_CD, SBMT_DPT_NM, SBMT_DPT_DT
   , BUMON_CD, ANLYS_CD, RCVINSPR, SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN, RCVINSP_AMT_EXCTAX, RCVINSP_AMT_INCTAX, DLV_DT, RCVINSP_DT
   , RCVINSP_YM, CST_ADD_YM, RCVINSP_YM_S, RCVINSP_YM_E, PAY_PLN_DT, RCVINSPSHT_ISS_DT, PAY_MTH, RCVINSPSHT_FRMT, RCVINSP_STMP, RCVINSP_CONT
   , RCVINSPSHT_TO_ZIP_CD, RCVINSPSHT_TO_ADR, RCVINSPSHT_TO_COMPANY_NM, RCVINSPSHT_TO_DPT_NM, RCVINSPSHT_TO_PIC_NM, RCVINSPSHT_TO_TEL_NO, RMK, RCVINSPSHT_COMPANY_NM, RCVINSPSHT_ADR, RCVINSPSHT_PIC_NM
   , RCVINSPSHT_RMK, PURPS, DLV_LC, INSP_COMP_DT, DLV_OBJ, ABST_IN, PAY_COND_CD, PAY_COND_NM, PAY_COND_CHGRSN, MNY_TP
   , MNY_CD, ADD_RTO, STMP_TP, PRD_PURORD_TP, PRD_PURORD_NO, ORGNZ_CD, LOT_NO, PAY_SITE_CD, PAY_APPL_CD, ADVPAY_TP, TAX_UNT, TAX_FG, TAX_CD
   , HLDTAX_TP, HLDTAX_RTO, HLDTAX_SBJ_AMT, HLDTAX_AMT, IMP_TAX_TP, CHRG_BNKACC_CD, PAY_APPL_TP, DLT_FG
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK, SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF, SHT_ADR1, SHT_ADR2, SHT_ADR3, SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO, ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , TTLAMT_EXCTAX1, TTLAMT_TAX1, TTLAMT_INCTAX1
   , TTLAMT_EXCTAX2, TTLAMT_TAX2, TTLAMT_INCTAX2
   , TTLAMT_EXCTAX3, TTLAMT_TAX3, TTLAMT_INCTAX3
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   MLORD.COMPANY_CD, MLORD.RCVINSP_NO, '10', NULL, MLORD.BUY_NO, substr('20' || substr(LOT_NO, 2, 4) || SPLR.SPLR_NM_KJ, 1, 30), '1', ?, ?, ?, trunc(SYSDATE)
   , NULL, NULL, NULL, MLORD.SPLR_CD, SPLR.SPLR_NM_KJ, SPLR.SPLR_NM_KN, MLORD.TTL_AMT_EXCTAX, MLORD.TTL_AMT_INCTAX, last_day(trunc(SYSDATE)), last_day(trunc(SYSDATE))
   , to_char(MLORD.TGT_YM, 'YYYYMM')
   , case
       when trunc(MLORD.TGT_YM, 'MONTH') < trunc(SYSDATE, 'MONTH') then
         case CLND.STL_TP_PUR when '1' then to_char(add_months(SYSDATE, -1), 'YYYYMM') else to_char(SYSDATE, 'YYYYMM') end
       else
         case CLND.STL_TP_PUR when '1' then to_char(SYSDATE, 'YYYYMM') else to_char(SYSDATE, 'YYYYMM') end
     end
   , to_char(MLORD.TGT_YM, 'YYYYMM'), to_char(MLORD.TGT_YM, 'YYYYMM'), last_day(add_months(trunc(MLORD.TGT_YM), 1)), last_day(trunc(MLORD.TGT_YM)), '10', NULL, NULL, NULL
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
   , NULL, NULL, '加賀倉庫（委託契約を除く）', NULL, NULL, NULL, NULL, NULL, NULL, '1'
   , 'JPY', 1, '9', '0', NULL, ?, MLORD.LOT_NO, '990199', APPL.PAY_APPL_CD, '0', '3', NULL, NULL
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, '0'
   , '1', '1', NULL, SPLR.ZIP_CD, SPLR.ADR_PRF_CD, SPLR.ADR_PRF, SPLR.ADR1, SPLR.ADR2, SPLR.ADR3, NULL, NULL, NULL, NULL, '0'
   , NULL, NULL, NULL
   , MLORD.TTLAMT_EXCTAX1, (MLORD.TTLAMT_INCTAX1 - MLORD.TTLAMT_EXCTAX1), MLORD.TTLAMT_INCTAX1
   , MLORD.TTLAMT_EXCTAX2, (MLORD.TTLAMT_INCTAX2 - MLORD.TTLAMT_EXCTAX2), MLORD.TTLAMT_INCTAX2
   , MLORD.TTLAMT_EXCTAX3, (MLORD.TTLAMT_INCTAX3 - MLORD.TTLAMT_EXCTAX3), MLORD.TTLAMT_INCTAX3
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.RCVINSP_NO, A.BUY_NO, to_date(substr(A.LOT_NO, 2, 4), 'yyMM') as TGT_YM
      , sum(AMT_EXCTAX) as TTL_AMT_EXCTAX, sum(A.AMT_INCTAX) as TTL_AMT_INCTAX
      , sum(case A.TAX_FG_CHG when '1' then AMT_EXCTAX when '4' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX1
      , sum(case A.TAX_FG_CHG when '1' then AMT_INCTAX when '4' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX1
      , sum(case A.TAX_FG_CHG when '2' then AMT_EXCTAX when '5' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX2
      , sum(case A.TAX_FG_CHG when '2' then AMT_INCTAX when '5' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX2
      , sum(case A.TAX_FG_CHG when '3' then AMT_EXCTAX when '6' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX3
      , sum(case A.TAX_FG_CHG when '3' then AMT_INCTAX when '6' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX3
    from
      (select
         A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.RCVINSP_NO, A.BUY_NO, A.TAX_FG_CHG, B.ACC_CD
         , case B.ACC_CD when '1500' then 0 else nvl(A.AMT, 0) end as AMT_EXCTAX, nvl(A.AMT, 0) as AMT_INCTAX
       from
         MLORD_INF A
         inner join ITMEXPS1_CHRMST B
           on B.COMPANY_CD = A.COMPANY_CD and B.ITMEXPS_CD1 = A.ITMEXPS_CD1 and B.ITMEXPS_CD2 = A.ITMEXPS_CD2
       where
         A.COMPANY_CD = ? and A.LOT_NO = ?
      ) A
    group by
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.RCVINSP_NO, A.BUY_NO
   ) MLORD
   inner join SPLR_MST SPLR
     on SPLR.COMPANY_CD = MLORD.COMPANY_CD and SPLR.SPLR_CD = MLORD.SPLR_CD and SPLR.DLT_FG = '0' and trunc(SYSDATE) between SPLR.VD_DT_S and SPLR.VD_DT_E
   inner join ACC_CLND_MST CLND
     on CLND.COMPANY_CD = MLORD.COMPANY_CD and CLND.CLND_DT = trunc(SYSDATE) and CLND.DLT_FG = '0'
   left join WFM_ORGANIZATION ORG
     on ORG.CORPORATION_CODE = ? and ORG.ORGANIZATION_CODE = ?
   left join PAY_APPL_MST APPL
     on APPL.COMPANY_CD = ORG.CORPORATION_CODE and APPL.PAY_APPL_CD = ORG.EXTENDED_INFO_01 and APPL.DLT_FG = '0'

#検収明細情報の一括インサート
PO0050_06: |+
 insert into /* PO0050_06 */ RCVINSPDTL_INF (
   COMPANY_CD, RCVINSP_NO, RCVINSP_DTL_NO, PURORD_NO, PURORD_DTL_NO, PURORD_DTL_TP, ORGNZ_CD, COM_CHG_ORGNZ_CD, ITMEXPS_CD1, ITMEXPS_CD2
   , ITM_TP1, ITM_TP2, ITM_TP3, ITM_CD, ITM_NM, BUMON_CD, ANLYS_CD, ASST_TP, PURORD_QNT, RCVINSP_QNT, UNT_CD
   , PURORD_UC_JPY, PURORD_AMT_JPY, PURORD_AMT_JPY_INCTAX
   , RCVINSP_UC_JPY, RCVINSP_AMT_JPY, RCVINSP_AMT_JPY_INCTAX
   , MNY_CD, ADD_RTO, PURORD_UC_FC, PURORD_AMT_FC, RCVINSP_UC_FC
   , RCVINSP_AMT_FC, TAX_FG, TAX_CD, RCVINSP_SMRY, APPL_CONT, CTRCT_TP, BRKDWN_TP, APPL_PRD_S_DT, APPL_PRD_E_DT, HLDTAX_TP
   , HLDTAX_RTO, HLDTAX_AMT, ADVPAY_NO, INV_COMPANY_CD, DLT_FG
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   MLORD.COMPANY_CD, MLORD.RCVINSP_NO, MLORD.RCVINSP_DTL_NO, MLORD.PURORD_NO, MLORD.PURORD_DTL_NO, NULL, ?, NULL, MLORD.ITMEXPS_CD1, MLORD.ITMEXPS_CD2
   , NULL, NULL, NULL, NULL, NULL, MLORD.BUMON_CD, NULL, '0', NULL, NULL, NULL
   , NULL, case MLORD.TAX_FG when '1' then ROUND(MLORD.TTL_AMT / (TAX.TAX_RTO + 100) * 100) else MLORD.TTL_AMT end, case MLORD.TAX_FG when '2' then ROUND(MLORD.TTL_AMT * (TAX.TAX_RTO + 100) / 100) else MLORD.TTL_AMT end
   , NULL, case MLORD.TAX_FG when '1' then ROUND(MLORD.TTL_AMT / (TAX.TAX_RTO + 100) * 100) else MLORD.TTL_AMT end, case MLORD.TAX_FG when '2' then ROUND(MLORD.TTL_AMT * (TAX.TAX_RTO + 100) / 100) else MLORD.TTL_AMT end
   , 'JPY', 1, NULL, NULL, NULL
   , NULL, NULL, MLORD.TAX_CD, MLORD2.CMMDT_TTL || '等', NULL, NULL, NULL, NULL, NULL, NULL
   , NULL, NULL, NULL, NULL, '0'
   , MLORD.TAX_SBJ_TP, MLORD.TAX_KND_CD, MLORD.TAX_FG_CHG
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      row_number() over (partition by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD order by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.TAX_CD) RCVINSP_DTL_NO
      , row_number() over (partition by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD order by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.TAX_CD) PURORD_DTL_NO
      , sum(nvl(A.AMT, 0)) as TTL_AMT
      , A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.RCVINSP_NO, A.PURORD_NO, A.TAX_CD
      , A.TAX_FG, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
    from
      MLORD_INF A
      inner join ITMEXPS1_CHRMST B
        on B.COMPANY_CD = A.COMPANY_CD and B.ITMEXPS_CD1 = A.ITMEXPS_CD1 and B.ITMEXPS_CD2 = A.ITMEXPS_CD2
    where
      A.COMPANY_CD = ? and A.LOT_NO = ? and B.ACC_CD <> '1500'
    group by
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.RCVINSP_NO, A.PURORD_NO, A.TAX_CD
      , A.TAX_FG, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
   ) MLORD
   inner join
     (select
        COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, CMMDT_TTL
      from
        (select
           row_number() over (partition by COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD order by AMT desc, LN_NO asc) ROW_NO
           , COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, CMMDT_TTL
         from
           MLORD_INF
         where
           COMPANY_CD = ? and LOT_NO = ?
        )
      where ROW_NO = 1
     ) MLORD2
     on MLORD2.COMPANY_CD = MLORD.COMPANY_CD and MLORD2.LOT_NO = MLORD.LOT_NO and MLORD2.IN_YM = MLORD.IN_YM and MLORD2.SPLR_CD = MLORD.SPLR_CD
     and MLORD2.BUMON_CD = MLORD.BUMON_CD and MLORD2.ITMEXPS_CD1 = MLORD.ITMEXPS_CD1 and MLORD2.ITMEXPS_CD2 = MLORD.ITMEXPS_CD2 and MLORD2.TAX_CD = MLORD.TAX_CD
   inner join TAX_MST TAX
     on TAX.COMPANY_CD = MLORD.COMPANY_CD and TAX.TAX_CD = MLORD.TAX_CD and trunc(SYSDATE) between TAX.VD_DT_S and TAX.VD_DT_E and TAX.DLT_FG = '0'

#仕入情報の一括インサート
PO0050_07: |+
 insert into /* PO0050_07 */ BUY_INF (
   COMPANY_CD, BUY_NO, RCVINSP_NO, RB_TP, BUY_NO_O, PURORD_TP, SPLR_CD, SPLR_NM_KJ, SPLR_NM_KN, BUY_ADD_DT
   , RCVINSP_YM, CST_ADD_YM, RCVINSP_YM_S, RCVINSP_YM_E, PAY_MTH, PAY_COND_CD, PAY_COND_NM, PAY_COND, ABST_IN, RMK
   , PRD_PURORD_TP, PRD_PURORD_NO, RTN_PAY_NO, ORGNZ_CD, LOT_NO, PAY_SITE_CD, PAY_APPL_CD, ADVPAY_TP, TAX_UNT, TAX_FG, TAX_CD
   , HLDTAX_TP, HLDTAX_RTO, HLDTAX_SBJ_AMT, HLDTAX_AMT
   , BUY_AMT_EXCTAX, BUY_AMT_INCTAX, IMP_TAX_TP, MNY_TP, MNY_CD, ADD_RTO, CHRG_BNKACC_CD, PAY_APPL_TP, DLT_FG
   , BKBND_CHG_TP, MAIL_TP, MAIL_RMK, SHT_TO_ZIP_CD, SHT_ADR_PRF_CD, SHT_ADR_PRF, SHT_ADR1, SHT_ADR2, SHT_ADR3, SHT_PIC_NM, SHT_DPT_NM, SHT_MLADR, SHT_TEL_NO, ADVCST_MRK
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , TTLAMT_EXCTAX1, TTLAMT_TAX1, TTLAMT_INCTAX1
   , TTLAMT_EXCTAX2, TTLAMT_TAX2, TTLAMT_INCTAX2
   , TTLAMT_EXCTAX3, TTLAMT_TAX3, TTLAMT_INCTAX3
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   MLORD.COMPANY_CD, MLORD.BUY_NO, MLORD.RCVINSP_NO, 'O', NULL, '1', MLORD.SPLR_CD, SPLR.SPLR_NM_KJ, SPLR.SPLR_NM_KN, trunc(SYSDATE)
   , to_char(MLORD.TGT_YM, 'YYYYMM')
   , case
       when trunc(MLORD.TGT_YM, 'MONTH') < trunc(SYSDATE, 'MONTH') then
         case CLND.STL_TP_PUR when '1' then to_char(add_months(SYSDATE, -1), 'YYYYMM') else to_char(SYSDATE, 'YYYYMM') end
       else
         case CLND.STL_TP_PUR when '1' then to_char(SYSDATE, 'YYYYMM') else to_char(SYSDATE, 'YYYYMM') end
     end
   , to_char(MLORD.TGT_YM, 'YYYYMM'), to_char(MLORD.TGT_YM, 'YYYYMM'), '10', NULL, NULL, NULL, NULL, NULL
   , '0', NULL, NULL, ?, MLORD.LOT_NO, '990199', APPL.PAY_APPL_CD, '0', '3', NULL, NULL
   , NULL, NULL, NULL, NULL
   , MLORD.TTL_AMT_EXCTAX, MLORD.TTL_AMT_INCTAX, NULL, '1', 'JPY', 1, NULL, NULL, '0'
   , '1', '1', NULL, SPLR.ZIP_CD, SPLR.ADR_PRF_CD, SPLR.ADR_PRF, SPLR.ADR1, SPLR.ADR2, SPLR.ADR3, NULL, NULL, NULL, NULL, '0'
   , NULL, NULL, NULL
   , MLORD.TTLAMT_EXCTAX1, (MLORD.TTLAMT_INCTAX1 - MLORD.TTLAMT_EXCTAX1), MLORD.TTLAMT_INCTAX1
   , MLORD.TTLAMT_EXCTAX2, (MLORD.TTLAMT_INCTAX2 - MLORD.TTLAMT_EXCTAX2), MLORD.TTLAMT_INCTAX2
   , MLORD.TTLAMT_EXCTAX3, (MLORD.TTLAMT_INCTAX3 - MLORD.TTLAMT_EXCTAX3), MLORD.TTLAMT_INCTAX3
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.RCVINSP_NO, A.BUY_NO, to_date(substr(A.LOT_NO, 2, 4), 'yyMM') as TGT_YM
      , sum(AMT_EXCTAX) as TTL_AMT_EXCTAX, sum(A.AMT_INCTAX) as TTL_AMT_INCTAX
      , sum(case A.TAX_FG_CHG when '1' then AMT_EXCTAX when '4' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX1
      , sum(case A.TAX_FG_CHG when '1' then AMT_INCTAX when '4' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX1
      , sum(case A.TAX_FG_CHG when '2' then AMT_EXCTAX when '5' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX2
      , sum(case A.TAX_FG_CHG when '2' then AMT_INCTAX when '5' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX2
      , sum(case A.TAX_FG_CHG when '3' then AMT_EXCTAX when '6' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX3
      , sum(case A.TAX_FG_CHG when '3' then AMT_INCTAX when '6' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX3
    from
      (select
         A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.RCVINSP_NO, A.BUY_NO, nvl(A.AMT, 0) as AMT, A.TAX_FG_CHG, B.ACC_CD
         , case B.ACC_CD when '1500' then 0 else nvl(A.AMT, 0) end as AMT_EXCTAX, nvl(A.AMT, 0) as AMT_INCTAX
       from
         MLORD_INF A
         inner join ITMEXPS1_CHRMST B
           on B.COMPANY_CD = A.COMPANY_CD and B.ITMEXPS_CD1 = A.ITMEXPS_CD1 and B.ITMEXPS_CD2 = A.ITMEXPS_CD2
       where
         A.COMPANY_CD = ? and A.LOT_NO = ?
      ) A
    group by
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.RCVINSP_NO, A.BUY_NO
   ) MLORD
   inner join SPLR_MST SPLR
     on SPLR.COMPANY_CD = MLORD.COMPANY_CD and SPLR.SPLR_CD = MLORD.SPLR_CD and SPLR.DLT_FG = '0' and trunc(SYSDATE) between SPLR.VD_DT_S and SPLR.VD_DT_E
   inner join ACC_CLND_MST CLND
     on CLND.COMPANY_CD = MLORD.COMPANY_CD and CLND.CLND_DT = trunc(SYSDATE) and CLND.DLT_FG = '0'
   left join WFM_ORGANIZATION ORG
     on ORG.CORPORATION_CODE = ? and ORG.ORGANIZATION_CODE = ?
   left join PAY_APPL_MST APPL
     on APPL.COMPANY_CD = ORG.CORPORATION_CODE and APPL.PAY_APPL_CD = ORG.EXTENDED_INFO_01 and APPL.DLT_FG = '0'

#仕入明細情報の一括インサート
PO0050_08: |+
 insert into /* PO0050_08 */ BUYDTL_INF (
   COMPANY_CD, BUY_NO, BUY_DTL_NO, RCVINSP_NO, RCVINSP_DTL_NO, JRNSLP_NO, JRNSLP_DTL_NO, PURORD_DTL_TP, ORGNZ_CD, ITMEXPS_CD1
   , ITMEXPS_CD2, ITM_TP1, ITM_TP2, ITM_TP3, ITM_CD, ITM_NM, BUMON_CD, ANLYS_CD, ASST_TP, PURORD_QNT
   , RCVINSP_QNT, UNT_CD
   , PURORD_UC_JPY, PURORD_AMT_JPY, PURORD_AMT_JPY_INCTAX
   , RCVINSP_UC_JPY, RCVINSP_AMT_JPY, RCVINSP_AMT_JPY_INCTAX
   , BUY_UC_JPY, BUY_AMT_JPY, BUY_AMT_JPY_INCTAX
   , MNY_CD, ADD_RTO
   , PURORD_UC_FC, PURORD_AMT_FC, RCVINSP_UC_FC, RCVINSP_AMT_FC, BUY_UC_FC, BUY_AMT_FC, TAX_FG, TAX_CD, RCVINSP_SMRY, APPL_CONT
   , CTRCT_TP, BRKDWN_TP, APPL_PRD_S_DT, APPL_PRD_E_DT, HLDTAX_TP, HLDTAX_RTO, HLDTAX_AMT, ADVPAY_NO, INV_COMPANY_CD, DLT_FG
   , TAX_SBJ_TP, TAX_KND_CD, TAX_FG_CHG
   , CORPORATION_CODE_CREATED, USER_CODE_CREATED, IP_CREATED, TIMESTAMP_CREATED
   , CORPORATION_CODE_UPDATED, USER_CODE_UPDATED, IP_UPDATED, TIMESTAMP_UPDATED)
 select
   MLORD.COMPANY_CD, MLORD.BUY_NO, MLORD.BUY_DTL_NO, MLORD.RCVINSP_NO, MLORD.RCVINSP_DTL_NO, NULL, NULL, NULL, ?, MLORD.ITMEXPS_CD1
   , MLORD.ITMEXPS_CD2, NULL, NULL, NULL, NULL, NULL, MLORD.BUMON_CD, NULL, '0', NULL
   , NULL, NULL
   , NULL, case MLORD.TAX_FG when '1' then ROUND(MLORD.TTL_AMT / (TAX.TAX_RTO + 100) * 100) else MLORD.TTL_AMT end, case MLORD.TAX_FG when '2' then ROUND(MLORD.TTL_AMT * (TAX.TAX_RTO + 100) / 100) else MLORD.TTL_AMT end
   , NULL, case MLORD.TAX_FG when '1' then ROUND(MLORD.TTL_AMT / (TAX.TAX_RTO + 100) * 100) else MLORD.TTL_AMT end, case MLORD.TAX_FG when '2' then ROUND(MLORD.TTL_AMT * (TAX.TAX_RTO + 100) / 100) else MLORD.TTL_AMT end
   , NULL, case MLORD.TAX_FG when '1' then ROUND(MLORD.TTL_AMT / (TAX.TAX_RTO + 100) * 100) else MLORD.TTL_AMT end, case MLORD.TAX_FG when '2' then ROUND(MLORD.TTL_AMT * (TAX.TAX_RTO + 100) / 100) else MLORD.TTL_AMT end
   , 'JPY', 1
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, MLORD.TAX_CD, MLORD2.CMMDT_TTL || '等', NULL
   , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '0'
   , MLORD.TAX_SBJ_TP, MLORD.TAX_KND_CD, MLORD.TAX_FG_CHG
   , ?, ?, ?, systimestamp(3)
   , ?, ?, ?, systimestamp(3)
 from
   (select
      row_number() over (partition by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD order by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.TAX_CD) BUY_DTL_NO
      , row_number() over (partition by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD order by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.TAX_CD) RCVINSP_DTL_NO
      , sum(A.AMT) as TTL_AMT
      , A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.RCVINSP_NO, A.BUY_NO, A.TAX_CD
      , A.TAX_FG, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
    from
      MLORD_INF A
      inner join ITMEXPS1_CHRMST B
        on B.COMPANY_CD = A.COMPANY_CD and B.ITMEXPS_CD1 = A.ITMEXPS_CD1 and B.ITMEXPS_CD2 = A.ITMEXPS_CD2
    where
      A.COMPANY_CD = ? and A.LOT_NO = ? and B.ACC_CD <> '1500'
    group by
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.RCVINSP_NO, A.BUY_NO, A.TAX_CD
      , A.TAX_FG, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
   ) MLORD
   inner join
     (select
        COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, CMMDT_TTL
      from
        (select
           row_number() over (partition by COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD order by AMT desc, LN_NO asc) ROW_NO
           , COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, CMMDT_TTL
         from
           MLORD_INF
         where
           COMPANY_CD = ? and LOT_NO = ?
        )
      where ROW_NO = 1
     ) MLORD2
     on MLORD2.COMPANY_CD = MLORD.COMPANY_CD and MLORD2.LOT_NO = MLORD.LOT_NO and MLORD2.IN_YM = MLORD.IN_YM and MLORD2.SPLR_CD = MLORD.SPLR_CD
     and MLORD2.BUMON_CD = MLORD.BUMON_CD and MLORD2.ITMEXPS_CD1 = MLORD.ITMEXPS_CD1 and MLORD2.ITMEXPS_CD2 = MLORD.ITMEXPS_CD2 and MLORD2.TAX_CD = MLORD.TAX_CD
   inner join TAX_MST TAX
     on TAX.COMPANY_CD = MLORD.COMPANY_CD and TAX.TAX_CD = MLORD.TAX_CD and trunc(SYSDATE) between TAX.VD_DT_S and TAX.VD_DT_E and TAX.DLT_FG = '0'

#WF支払依頼へ設定するデータ抽出
PO0050_09: |+
 select /* PO0050_09 */
   MLORD.COMPANY_CD AS COMPANY_CD, NULL AS PAY_NO, '30' AS PAY_STS, NULL AS PAYHYS_NO_R_RCNT, NULL AS PAYHYS_NO_B_RCNT
   , NULL AS CONTRCT_NO, substr('20' || substr(LOT_NO, 2, 4) || SPLR.SPLR_NM_KJ, 1, 30) AS PAY_NM, '1' AS PURORD_TP, NULL AS PUR_TP1, NULL AS PUR_TP2
   , NULL AS ASST_TP, ? AS SBMTR_CD, ? AS SBMT_DPT_CD, ? AS SBMT_DPT_NM, NULL AS SBMT_DPT_DT
   , NULL AS BUMON_CD, NULL AS ANLYS_CD, MLORD.SPLR_CD AS SPLR_CD, SPLR.SPLR_NM_KJ AS SPLR_NM_KJ, SPLR.SPLR_NM_KN AS SPLR_NM_KN
   , SPLR.CRP_PRS_TP AS CRP_PRS_TP, SPLR.DMS_ABR_TP AS DMS_ABR_TP, BNKACC.PAYEE_BNKACC_CD AS PAYEE_BNKACC_CD, BNKACC.BNK_CD AS PAYEE_BNK_CD, BNKACC.BNKBRC_CD AS PAYEE_BNKBRC_CD
   , BNKACC.BNKACC_TP AS PAYEE_BNKACC_TP, BNKACC.BNKACC_NO AS PAYEE_BNKACC_NO, BNKACC.BNKACC_NM AS PAYEE_BNKACC_NM, BNKACC.BNKACC_NM_KN AS PAYEE_BNKACC_NM_KN, SITE.PAY_SITE_CD AS PAY_SITE_CD
   , NULL AS RCVINSP_USE_YM_S, NULL AS RCVINSP_USE_YM_E, to_char(MLORD.TGT_YM, 'YYYY/MM') AS RCVINSP_YM, to_char(MLORD.TGT_YM, 'YYYY/MM') AS RCVINSP_YM_S, to_char(MLORD.TGT_YM, 'YYYY/MM') AS RCVINSP_YM_E
   , trunc(SYSDATE) AS PAY_RQST_DT, last_day(add_months(trunc(MLORD.TGT_YM), 1)) AS PAY_PLN_DT, NULL AS PAY_RSLT_DT, MLORD.TTL_AMT_EXCTAX AS PAY_AMT_EXCTAX, (MLORD.TTL_AMT_INCTAX - MLORD.TTL_AMT_EXCTAX) AS PAY_AMT_TAX, MLORD.TTL_AMT_INCTAX AS PAY_AMT_INCTAX
   , NULL AS MSG, '10' AS PAY_MTH, NULL AS PAY_COND_CD, NULL AS PAY_COND_NM, NULL AS PAY_COND_CHGRSN
   , '0' AS PRD_PURORD_TP, NULL AS PRD_PURORD_NO, NULL AS RTN_PAY_NO, ? AS ORGNZ_CD, MLORD.LOT_NO AS LOT_NO
   , NULL AS INVSHT_TP, BNKACC.SRC_BNKACC_CD AS BNKACC_CD, '1' AS MNY_TP, MNY.MNY_CD AS MNY_CD, 1 AS ADD_RTO
   , APPL.PAY_APPL_CD AS PAY_APPL_CD, '0' AS ADVPAY_TP, '3' AS TAX_UNT, NULL AS TAX_FG, NULL AS TAX_CD
   , NULL AS HLDTAX_TP, NULL AS HLDTAX_RTO, NULL AS HLDTAX_SBJ_AMT, NULL AS HLDTAX_AMT, NULL AS IMP_TAX_TP, NULL AS HLDTAX_FG
   , NULL AS CHRG_BNKACC_CD, '1' AS PAY_APPL_TP, 'NEW' AS NEW_FG, '0' AS ADVPAY_FG, ? AS SBMTR_NM, BNKACC.BNK_NM AS PAYEE_BNK_NM
   , BNKACC.BNKBRC_NM AS PAYEE_BNKBRC_NM, BNKACC.BNKACC_TP_NM AS PAYEE_BNKACC_TP_NM, BNKACC.PAY_CMM_OBL_TP AS PAY_CMM_OBL_TP, BNKACC.HLD_TRT_TP AS HLD_TRT_TP, SITE.PAY_SITE_NM AS PAY_SITE_NM
   , NULL AS TAX_NM, NULL AS TAX_TP, NULL AS TAX_RTO, NULL AS HLDTAX_TP_NM, ? AS SBMTR_ADDR_CD, BNKACC.SRC_BNKACC_NM AS BNKACC_NM
   , ? AS SBMTR_ADDR, APPL.PAY_APPL_NM AS PAY_APPL_NM, MNY.MNY_NM AS MNY_NM, MNY.RDXPNT_GDT AS RDXPNT_GDT, '2' AS CPRT_FG
   , MLORD.TTL_AMT_INCTAX as PAY_AMT
   , '1' as BKBND_CHG_TP, '1' as MAIL_TP, NULL as MAIL_RMK, SPLR.ZIP_CD as SHT_TO_ZIP_CD, SPLR.ADR_PRF_CD as SHT_ADR_PRF_CD, SPLR.ADR_PRF as SHT_ADR_PRF
   , SPLR.ADR1 as SHT_ADR1, SPLR.ADR2 as SHT_ADR2, SPLR.ADR3 as SHT_ADR3,  NULL as SHT_PIC_NM, NULL as SHT_DPT_NM, NULL as SHT_MLADR, NULL as SHT_TEL_NO, '0' as ADVCST_MRK
   , NULL as TAX_SBJ_TP, NULL as TAX_KND_CD, NULL as TAX_FG_CHG
   , MLORD.TTLAMT_EXCTAX1 as TTLAMT_EXCTAX1, (MLORD.TTLAMT_INCTAX1 - MLORD.TTLAMT_EXCTAX1) as TTLAMT_TAX1, MLORD.TTLAMT_INCTAX1 as TTLAMT_INCTAX1
   , MLORD.TTLAMT_EXCTAX2 as TTLAMT_EXCTAX2, (MLORD.TTLAMT_INCTAX2 - MLORD.TTLAMT_EXCTAX2) as TTLAMT_TAX2, MLORD.TTLAMT_INCTAX2 as TTLAMT_INCTAX2
   , MLORD.TTLAMT_EXCTAX3 as TTLAMT_EXCTAX3, (MLORD.TTLAMT_INCTAX3 - MLORD.TTLAMT_EXCTAX3) as TTLAMT_TAX3, MLORD.TTLAMT_INCTAX3 as TTLAMT_INCTAX3
   , case when MLORD.TTLAMT_EXCTAX1_FG_COUNT > 0 then '1' else '0' end as TTLAMT_EXCTAX1_FG
   , case when MLORD.TTLAMT_EXCTAX2_FG_COUNT > 0 then '1' else '0' end as TTLAMT_EXCTAX2_FG
   , case when MLORD.TTLAMT_EXCTAX3_FG_COUNT > 0 then '1' else '0' end as TTLAMT_EXCTAX3_FG
 from
   (select
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, to_date(substr(A.LOT_NO, 2, 4), 'yyMM') as TGT_YM
      , sum(AMT_EXCTAX) as TTL_AMT_EXCTAX, sum(A.AMT_INCTAX) as TTL_AMT_INCTAX
      , sum(case A.TAX_FG_CHG when '1' then AMT_EXCTAX when '4' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX1
      , sum(case A.TAX_FG_CHG when '1' then AMT_INCTAX when '4' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX1
      , sum(case A.TAX_FG_CHG when '2' then AMT_EXCTAX when '5' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX2
      , sum(case A.TAX_FG_CHG when '2' then AMT_INCTAX when '5' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX2
      , sum(case A.TAX_FG_CHG when '3' then AMT_EXCTAX when '6' then AMT_EXCTAX else 0 end) as TTLAMT_EXCTAX3
      , sum(case A.TAX_FG_CHG when '3' then AMT_INCTAX when '6' then AMT_INCTAX else 0 end) as TTLAMT_INCTAX3
      , sum(case A.TAX_FG_CHG when '4' then 1 else 0 end) as TTLAMT_EXCTAX1_FG_COUNT
      , sum(case A.TAX_FG_CHG when '5' then 1 else 0 end) as TTLAMT_EXCTAX2_FG_COUNT
      , sum(case A.TAX_FG_CHG when '6' then 1 else 0 end) as TTLAMT_EXCTAX3_FG_COUNT
    from
      (select
         A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.TAX_FG_CHG
         , case B.ACC_CD when '1500' then 0 else nvl(A.AMT, 0) end as AMT_EXCTAX, nvl(A.AMT, 0) as AMT_INCTAX
       from
         MLORD_INF A
         inner join ITMEXPS1_CHRMST B
           on B.COMPANY_CD = A.COMPANY_CD and B.ITMEXPS_CD1 = A.ITMEXPS_CD1 and B.ITMEXPS_CD2 = A.ITMEXPS_CD2
       where
         A.COMPANY_CD = ? and A.LOT_NO = ? and IN_YM = ? and SPLR_CD = ?
      ) A
    group by
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD
   ) MLORD
   inner join SPLR_MST SPLR
     on SPLR.COMPANY_CD = MLORD.COMPANY_CD and SPLR.SPLR_CD = MLORD.SPLR_CD and SPLR.DLT_FG = '0' and trunc(SYSDATE) BETWEEN SPLR.VD_DT_S and SPLR.VD_DT_E
   inner join
     (select *
      from
        (select
           row_number() over (partition by COMPANY_CD, SPLR_CD order by COMPANY_CD, SPLR_CD, PAYEE_BNKACC_CD_SS ASC) AS ROWNO
           , COMPANY_CD, SPLR_CD, PAYEE_BNKACC_CD, BNK_CD, BNKBRC_CD, BNKACC_TP, BNKACC_NO, BNKACC_NM, BNKACC_NM_KN
           , BNK_NM, BNKBRC_NM, BNKACC_TP_NM, PAY_CMM_OBL_TP, HLD_TRT_TP, SRC_BNKACC_CD, SRC_BNKACC_NM
         from
           PAYEE_BNKACC_MST_V
         where
           last_day(add_months(trunc(SYSDATE), 1)) between VD_DT_S and VD_DT_E
           and PAYEE_BNKACC_CD_SS is not null
        )
      where ROWNO = 1
     ) BNKACC
     on BNKACC.COMPANY_CD = SPLR.COMPANY_CD and BNKACC.SPLR_CD = SPLR.SPLR_CD
   inner join MNY_MST MNY
     on MNY.COMPANY_CD = MLORD.COMPANY_CD and MNY.MNY_CD = 'JPY'
   left join PAY_SITE_MST SITE
     on SITE.COMPANY_CD = MLORD.COMPANY_CD and SITE.PAY_SITE_CD = '990199' and SITE.DLT_FG = '0'
   left join WFM_ORGANIZATION ORG
     on ORG.CORPORATION_CODE = ? and ORG.ORGANIZATION_CODE = ?
   left join PAY_APPL_MST APPL
     on APPL.COMPANY_CD = ORG.CORPORATION_CODE and APPL.PAY_APPL_CD = ORG.EXTENDED_INFO_01 and APPL.DLT_FG = '0'

#WF支払依頼(明細)へ設定するデータ抽出
PO0050_10: |+
 select /* PO0050_10 */
   MLORD.COMPANY_CD AS COMPANY_CD, MLORD.RCVINSP_NO || '-' || lpad(MLORD.RCVINSP_DTL_NO, 4, '0') as DISP_RCVINSP_NO, MLORD.RCVINSP_NO AS RCVINSP_NO, MLORD.RCVINSP_DTL_NO AS RCVINSP_DTL_NO
   , ? AS ORGNZ_CD, ITMEXPS.ITMEXPS_CD1 AS ITMEXPS_CD1, ITMEXPS.ITMEXPS_NM1 AS ITMEXPS_NM1, ITMEXPS.ITMEXPS_CD2 AS ITMEXPS_CD2, ITMEXPS.ITMEXPS_NM2 AS ITMEXPS_NM2, NULL AS ITM_CD, NULL AS ITM_NM
   , MLORD.BUMON_CD AS BUMON_CD, NULL AS ANLYS_CD, '0' AS ASST_TP
   , MLORD.TTL_AMT AS PAY_AMT
   , case MLORD.TAX_FG when '1' then ROUND(MLORD.TTL_AMT / (TAX.TAX_RTO + 100) * 100) else MLORD.TTL_AMT end AS PAY_AMT_EXCTAX
   , case MLORD.TAX_FG when '2' then ROUND(MLORD.TTL_AMT * (TAX.TAX_RTO + 100) / 100) else MLORD.TTL_AMT end AS PAY_AMT_INCTAX
   , NULL AS TAX_FG, TAX.TAX_CD AS TAX_CD, TAX.TAX_NM AS TAX_NM, TAX.TAX_TP AS TAX_TP, TAX.TAX_RTO AS TAX_RTO
   , MLORD2.CMMDT_TTL || '等' AS PAY_SMRY, MLORD.TTL_AMT AS RCVINSP_AMT, '0' AS IPT_NM_FG, ITMEXPS.SLP_GRP_GL AS SLP_GRP_GL, ITMEXPS.CST_TP AS CST_TP
   , MLORD.TAX_SBJ_TP, MLORD.TAX_KND_CD, MLORD.TAX_FG_CHG, 'JPY' as MNY_CD, '1' as MNY_TP
 from
   (select
      row_number() over (partition by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD order by A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.TAX_CD) RCVINSP_DTL_NO
      , sum(nvl(A.AMT, 0)) as TTL_AMT
      , A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.RCVINSP_NO, A.TAX_CD
      , A.TAX_FG, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
    from
      MLORD_INF A
      inner join ITMEXPS1_CHRMST B
        on B.COMPANY_CD = A.COMPANY_CD and B.ITMEXPS_CD1 = A.ITMEXPS_CD1 and B.ITMEXPS_CD2 = A.ITMEXPS_CD2
    where
      A.COMPANY_CD = ? and A.LOT_NO = ? and IN_YM = ? and SPLR_CD = ? and B.ACC_CD <> '1500'
    group by
      A.COMPANY_CD, A.LOT_NO, A.IN_YM, A.SPLR_CD, A.BUMON_CD, A.ITMEXPS_CD1, A.ITMEXPS_CD2, A.RCVINSP_NO, A.TAX_CD
      , A.TAX_FG, A.TAX_SBJ_TP, A.TAX_KND_CD, A.TAX_FG_CHG
   ) MLORD
   inner join
     (select
        COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, CMMDT_TTL
      from
        (select
           row_number() over (partition by COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD order by AMT desc, LN_NO asc) ROW_NO
           , COMPANY_CD, LOT_NO, IN_YM, SPLR_CD, BUMON_CD, ITMEXPS_CD1, ITMEXPS_CD2, TAX_CD, CMMDT_TTL
         from
           MLORD_INF
         where
           COMPANY_CD = ? and LOT_NO = ? and IN_YM = ? and SPLR_CD = ?
        )
      where ROW_NO = 1
     ) MLORD2
     on MLORD2.COMPANY_CD = MLORD.COMPANY_CD and MLORD2.LOT_NO = MLORD.LOT_NO and MLORD2.IN_YM = MLORD.IN_YM and MLORD2.SPLR_CD = MLORD.SPLR_CD
     and MLORD2.BUMON_CD = MLORD.BUMON_CD and MLORD2.ITMEXPS_CD1 = MLORD.ITMEXPS_CD1 and MLORD2.ITMEXPS_CD2 = MLORD.ITMEXPS_CD2 and MLORD2.TAX_CD = MLORD.TAX_CD
   inner join ITMEXPS_CHRMST_V ITMEXPS
     on ITMEXPS.COMPANY_CD = MLORD.COMPANY_CD and ITMEXPS.ITMEXPS_CD1 = MLORD.ITMEXPS_CD1 and ITMEXPS.ITMEXPS_CD2 = MLORD.ITMEXPS_CD2 and ITMEXPS.ORGNZ_CD_SRCH = ? and ITMEXPS.DLT_FG = '0'
   inner join V_TAX_FG_CHG TAX
     on TAX.COMPANY_CD = MLORD.COMPANY_CD and TAX.TAX_SBJ_TP = MLORD.TAX_SBJ_TP and TAX.TAX_KND_CD = MLORD.TAX_KND_CD and TAX.TAX_FG_CHG = MLORD.TAX_FG_CHG
     and trunc(SYSDATE) between TAX.VD_DT_S and TAX.VD_DT_E and TAX.LOCALE_CODE = 'ja' and TAX.MNY_TP = '1'
 order by
   MLORD.COMPANY_CD, MLORD.IN_YM, MLORD.SPLR_CD, MLORD.BUMON_CD, MLORD.ITMEXPS_CD1, MLORD.ITMEXPS_CD2

#発注情報の一括削除
PO0050_11: |+
 delete /* PO0050_11 */
 from PURORD_INF A
 where exists (
   select 1 from MLORD_INF B where B.COMPANY_CD = A.COMPANY_CD and B.PURORD_NO = A.PURORD_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#発注明細情報の一括削除
PO0050_12: |+
 delete /* PO0050_12 */
 from PURORDDTL_INF A
 where exists (
   select 1 from MLORD_INF B where B.COMPANY_CD = A.COMPANY_CD and B.PURORD_NO = A.PURORD_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#検収情報の一括削除
PO0050_13: |+
 delete /* PO0050_13 */
 from RCVINSP_INF A
 where exists (
   select 1 from MLORD_INF B where B.COMPANY_CD = A.COMPANY_CD and B.RCVINSP_NO = A.RCVINSP_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#検収明細情報の一括削除
PO0050_14: |+
 delete /* PO0050_14 */
 from RCVINSPDTL_INF A
 where exists (
   select 1 from MLORD_INF B where B.COMPANY_CD = A.COMPANY_CD and B.RCVINSP_NO = A.RCVINSP_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#仕入情報の一括削除(仕入Noではなく検収Noを使っての削除なので注意)
PO0050_15: |+
 delete /* PO0050_15 */
 from BUY_INF A
 where exists (
   select 1 from MLORD_INF B where B.COMPANY_CD = A.COMPANY_CD and B.RCVINSP_NO = A.RCVINSP_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#仕入明細情報の一括削除(仕入Noではなく検収Noを使っての削除なので注意)
PO0050_16: |+
 delete /* PO0050_16 */
 from BUYDTL_INF A
 where exists (
   select 1 from MLORD_INF B where B.COMPANY_CD = A.COMPANY_CD and B.RCVINSP_NO = A.RCVINSP_NO and B.COMPANY_CD = ? and B.LOT_NO = ?
 )

#通販情報の一括削除
PO0050_17: |+
 delete /* PO0050_17 */
 from MLORD_INF
 where COMPANY_CD = ? and LOT_NO = ?

#通販情報から企業コード、検収Noを抽出
PO0050_18: |+
 select /* PO0050_18 */ COMPANY_CD, RCVINSP_NO
 from MLORD_INF
 where COMPANY_CD = ? and LOT_NO = ?
 group by COMPANY_CD, RCVINSP_NO